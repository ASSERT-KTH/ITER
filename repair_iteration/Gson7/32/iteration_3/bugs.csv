bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
2	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
3	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
4	[BUG]  [BUGGY]  append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
5	[BUG]  [BUGGY]  append('[').append(pathNames[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  append('[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	append('[').append(pathNames[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
6	[BUG]  [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
7	[BUG]  [BUGGY]  Switch(pathNames[i],  newStack[newPathIndices[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  newStack[newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  newStack[newPathIndices[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
8	[BUG]  [BUGGY]  Switch(newPathIndices[i],  pathNames[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
9	[BUG]  [BUGGY]  Switch(result,  newPathIndices[i],  newStack[pathNames[i])  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newPathIndices[i],  newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newPathIndices[i],  newStack[pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
10	[BUG]  [BUGGY]  Switch(newPathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
11	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[newPathIndices[i])  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[newPathIndices[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
12	[BUG]  [BUGGY]  Switch(newPathIndices[i],  stack[pathNames[i])  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  stack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  stack[pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
13	[BUG]  [BUGGY]  result.append('[').append(pathTypes[i]).append(']');  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathTypes[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathTypes[i]).append(']');  break;	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	35	None	replace
14	[BUG]  [BUGGY]  switch(pathTypes[i])&&  case  JsonScope.NONEMPTY_ARRAY:  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i])&&  case  JsonScope.NONEMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i])&&  case  JsonScope.NONEMPTY_ARRAY:	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	35	None	replace
15	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getLength());  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getLength());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getLength());  break;	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
16	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getString());  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getString());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getString());  break;	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
17	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].getLength());  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].getLength());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i].getLength());  break;  }	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
18	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getPath());  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getPath());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getPath());  break;	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
19	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:	  switch(pathIndices[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	27	None	replace
20	[BUG]  [BUGGY]  switch(pathNames[i]):  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]):  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]):	  switch(pathIndices[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	27	None	replace
21	[BUG]  [BUGGY]  switch(pathNames[i],  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathIndices[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	49	None	replace
22	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY)  {	  switch(pathIndices[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	49	None	replace
23	[BUG]  [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY)    {    	non-compiled	[CE]  	36	None	replace
24	[BUG]  [BUGGY]  switch(pathTypes[i]),  case  JsonScope.NONEMPTY_ARRAY)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i]),  case  JsonScope.NONEMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]),  case  JsonScope.NONEMPTY_ARRAY)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY)    {    	non-compiled	[CE]  	36	None	replace
25	[BUG]  [BUGGY]  switch(pathNames[i].getValue()).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getValue()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getValue()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
26	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getValue()).toString()  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getValue()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getValue()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
27	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getName()).toString()  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getName()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getName()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
28	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getPath()).toString()  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getPath()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getPath()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
29	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getString()).toString()  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getString()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getString()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
30	[BUG]  [BUGGY]  switch(pathIndices[i].getKey()).toString()  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getKey()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getKey()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
31	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].append(']');  break;	  result.append('[').append(pathIndices[i].append(']');    break;    	non-compiled	[CE]  	19	None	replace
32	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i].append(']');  break;  }	  result.append('[').append(pathIndices[i].append(']');    break;    	non-compiled	[CE]  	19	None	replace
33	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].append(']');  break;  }	  result.append('[').append(pathIndices[i].append(']');    break;    	non-compiled	[CE]  	19	None	replace
34	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].append( "]');  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].append( "]');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].append( "]');  break;	  result.append('[').append(pathIndices[i].append(']');    break;    	non-compiled	[CE]  	19	None	replace
35	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i].append(']');  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i].append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i].append(']');  break;	  result.append('[').append(pathIndices[i].append(']');    break;    	non-compiled	[CE]  	19	None	replace
36	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
37	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
38	[BUG]  [BUGGY]  if(newPathIndices  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
39	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack[pathIndices.length];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStack[pathIndices.length];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStack[pathIndices.length];  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack[stackSize];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStack[stackSize];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStack[stackSize];  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackPathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackPathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackPathSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
47	[BUG]  [BUGGY]  switch(pathTypes[i].getValue())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i].getValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].getValue())  {	  switch(pathTypes[i].toString())    {    	non-compiled	[CE]  	75	None	replace
48	[BUG]  [BUGGY]  switch(pathTypes[i].getLowerCase())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i].getLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].getLowerCase())  {	  switch(pathTypes[i].toString())    {    	non-compiled	[CE]  	75	None	replace
49	[BUG]  [BUGGY]  switch(pathTypes[i].getPath())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i].getPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].getPath())  {	  switch(pathTypes[i].toString())    {    	non-compiled	[CE]  	75	None	replace
50	[BUG]  [BUGGY]  switch(pathTypes[i].getName())  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i].getName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].getName())  {	  switch(pathTypes[i].toString())    {    	non-compiled	[CE]  	75	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
52	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
54	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathNames!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathNames!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
55	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
56	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
57	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
58	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
59	[BUG]  [BUGGY]  result.append(pathNames[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append(pathNames[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append(pathNames[i]).append(']');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
60	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append( "]');  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append( "]');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append( "]');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
61	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
62	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
63	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
64	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
65	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
66	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
67	[BUG]  [BUGGY]  if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
68	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
69	[BUG]  [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
70	[BUG]  [BUGGY]  if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  newPathIndices.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
71	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
72	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
73	[BUG]  [BUGGY]  append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  append('[').append(pathNames[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	append('[').append(pathNames[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
74	[BUG]  [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
75	[BUG]  [BUGGY]  if(i!=  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
76	[BUG]  [BUGGY]  append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
77	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
79	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
84	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:	  switch(pathIndices[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	48	None	replace
85	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).toString()  {	  switch(pathTypes[i]).toString()    {    	non-compiled	[CE]  	76	None	replace
86	[BUG]  [BUGGY]  result.append('[').append(pathTypes[i]).toString()  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathTypes[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathTypes[i]).toString()  {	  switch(pathTypes[i]).toString()    {    	non-compiled	[CE]  	76	None	replace
87	[BUG]  [BUGGY]  switch(pathIndices[i]).toString()  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]).toString()  {	  switch(pathTypes[i]).toString()    {    	non-compiled	[CE]  	76	None	replace
88	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).toString()  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).toString()  {	  switch(pathTypes[i]).toString()    {    	non-compiled	[CE]  	76	None	replace
89	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]),  case  JsonScope.DANGLING_NAME)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.DANGLING_NAME)  {	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	52	None	replace
90	[BUG]  [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
91	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
92	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
94	[BUG]  [BUGGY]  Switch(newStack[pathNames[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathNames[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
95	[BUG]  [BUGGY]  Switch(result,  newStack[pathIndices[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newStack[pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newStack[pathIndices[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
96	[BUG]  [BUGGY]  Switch(newPathIndices[pathIndices[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[pathIndices[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
97	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]),  charsLoaded)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]),  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]),  charsLoaded)  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
98	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]),  newPathIndices[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]),  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]),  newPathIndices[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
99	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]),  0)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]),  0)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]),  0)  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
100	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  1);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  1);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  1);	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
101	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].toString());  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].toString());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].toString());	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
102	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getRelativePath());  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getRelativePath());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getRelativePath());	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
103	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getAbsolutePath());  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getAbsolutePath());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getAbsolutePath());	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
104	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getString());  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getString());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getString());	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
105	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()).toString();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()).toString();  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()).toString();	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
106	[BUG]  [BUGGY]  switch(pathNames[i],  newPathIndices[i])  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  newPathIndices[i])  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
107	[BUG]  [BUGGY]  switch(pathNames[i],  newStack[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  newStack[i])  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
108	[BUG]  [BUGGY]  switch(newPathIndices[i],  newPathNames[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newPathIndices[i],  newPathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i],  newPathNames[i])  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
109	[BUG]  [BUGGY]  switch(newPathIndices[i],  pathNames[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newPathIndices[i],  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i],  pathNames[i])  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
110	[BUG]  [BUGGY]  switch(pathIndices[i],  newPathNames[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  newPathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  newPathNames[i])  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
111	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
112	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
113	[BUG]  [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
114	[BUG]  [BUGGY]  Switch(result,  pathNames[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathNames[i])  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
115	[BUG]  [BUGGY]  Switch(newPathIndices,  pathIndices[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices,  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices,  pathIndices[i])  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
116	[BUG]  [BUGGY]  Switch(pathIndices[i],  result)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  result)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  result)  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
117	[BUG]  [BUGGY]  Switch(result,  pathIndices[i],  newStack[pathNames[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathIndices[i],  newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i],  newStack[pathNames[i])  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
118	[BUG]  [BUGGY]  switch(pathNames[i].getString())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getString())  {	  switch(pathNames[i].getValue())    {    	non-compiled	[CE]  	28	None	replace
119	[BUG]  [BUGGY]  switch(pathNames[i].getPath())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getPath())  {	  switch(pathNames[i].getValue())    {    	non-compiled	[CE]  	28	None	replace
120	[BUG]  [BUGGY]  switch(pathNames[i].getQualifiedName())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getQualifiedName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getQualifiedName())  {	  switch(pathNames[i].getValue())    {    	non-compiled	[CE]  	28	None	replace
121	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).toLowerCase()  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i]).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).toLowerCase()  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
122	[BUG]  [BUGGY]  switch(pathNames[i]).toLowerCase(Locale.ENGLISH)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]).toLowerCase(Locale.ENGLISH)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toLowerCase(Locale.ENGLISH)  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
123	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).toLowerCase()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).toLowerCase()  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
124	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toLowerCase()  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]).toLowerCase()  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
125	[BUG]  [BUGGY]  switch(pathNames[i]).toUpperCase()  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]).toUpperCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toUpperCase()  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
126	[BUG]  [BUGGY]  switch(paths[i],  pathNames[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  pathNames[i])  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
127	[BUG]  [BUGGY]  switch(paths[i],  newStack[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  newStack[i])  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
128	[BUG]  [BUGGY]  switch(paths[i],  newPathIndices[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  newPathIndices[i])  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
129	[BUG]  [BUGGY]  switch(paths[i],  pathIndices[i]).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  pathIndices[i]).toString()  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
130	[BUG]  [BUGGY]  switch(pathNames[i].getLength())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getLength())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getLength())  {	  switch(pathIndices[i].getLength())    {    	non-compiled	[CE]  	54	None	replace
131	[BUG]  [BUGGY]  switch(pathIndices[i].getLength()  -  1)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getLength()  -  1)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getLength()  -  1)  {	  switch(pathIndices[i].getLength())    {    	non-compiled	[CE]  	54	None	replace
132	[BUG]  [BUGGY]  switch(pathNames[i],  stack[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  stack[i])  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
133	[BUG]  [BUGGY]  switch(stack[i],  pathIndices[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(stack[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(stack[i],  pathIndices[i])  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
134	[BUG]  [BUGGY]  switch(pathIndices[i],  newStack[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  newStack[i])  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
135	[BUG]  [BUGGY]  switch(newStack[i],  stack[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newStack[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newStack[i],  stack[i])  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
136	[BUG]  [BUGGY]  switch(newPathIndices[i],  stack[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newPathIndices[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i],  stack[i])  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
137	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
138	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
139	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
140	[BUG]  [BUGGY]  switch(pathIndices[i].getPath()  +  1)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getPath()  +  1)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getPath()  +  1)  {	  switch(pathIndices[i].getPath())    {    	non-compiled	[CE]  	14	None	replace
141	[BUG]  [BUGGY]  switch(pathIndices[i].getPath()).toString()  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getPath()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getPath()).toString()  {	  switch(pathIndices[i].getPath())    {    	non-compiled	[CE]  	14	None	replace
142	[BUG]  [BUGGY]  Switch(newStack,  pathIndices[i])  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack,  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack,  pathIndices[i])  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
143	[BUG]  [BUGGY]  Switch(stack,  pathIndices[i],  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(stack,  pathIndices[i],  0)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack,  pathIndices[i],  0)  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
144	[BUG]  [BUGGY]  switch(pathNames[i]).append('[').append(pathIndices[i]).toString()  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]).append('[').append(pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).append('[').append(pathIndices[i]).toString()  {	  switch(pathNames[i]).toString()    {    	non-compiled	[CE]  	23	None	replace
145	[BUG]  [BUGGY]  String  pathIndices[i]  =  pathNames[i].toString();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[i]  =  pathNames[i].toString();  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[i]  =  pathNames[i].toString();	  switch(pathNames[i]).toString()    {    	non-compiled	[CE]  	23	None	replace
146	[BUG]  [BUGGY]  switch(pathNames[i].toString().trim())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].toString().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].toString().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
147	[BUG]  [BUGGY]  switch(pathIndices[i].toString().substring(0,  i))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toString().substring(0,  i))  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toString().substring(0,  i))  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
148	[BUG]  [BUGGY]  switch(pathIndices[i].getValue().trim())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getValue().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getValue().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
149	[BUG]  [BUGGY]  switch(pathIndices[i].toString().substring(1))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toString().substring(1))  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toString().substring(1))  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
150	[BUG]  [BUGGY]  switch(pathIndices[i].toString().trim()).toLowerCase()  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toString().trim()).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toString().trim()).toLowerCase()  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
151	[BUG]  [BUGGY]  switch(pathIndices[i].toString().trim(),  result)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toString().trim(),  result)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toString().trim(),  result)  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
152	[BUG]  [BUGGY]  if(i  >  0)  {  result.append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append(']');  break;  }	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
153	[BUG]  [BUGGY]  if(i  ==  0)  {  result.append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  result.append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  result.append(']');  break;  }	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
154	[BUG]  [BUGGY]  if(i!=  0)  {  result.append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  0)  {  result.append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  0)  {  result.append(']');  break;  }	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
155	[BUG]  [BUGGY]  if(pathIndices[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]  ==  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]  ==  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
156	[BUG]  [BUGGY]  if(newPathIndices[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices[i]!=  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices[i]!=  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
157	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
158	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
159	[BUG]  [BUGGY]  if(newPathIndices[i]  ==  null)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices[i]  ==  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices[i]  ==  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
160	[BUG]  [BUGGY]  if(result.length()  ==  0  ||  pathIndices[i]!=  null)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(result.length()  ==  0  ||  pathIndices[i]!=  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(result.length()  ==  0  ||  pathIndices[i]!=  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
161	[BUG]  [BUGGY]  switch(pathNames[i].trim())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].trim())  {	  switch(pathIndices[i].trim())    {    	non-compiled	[CE]  	73	None	replace
162	[BUG]  [BUGGY]  switch(pathIndices[i].trim().toLowerCase())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].trim().toLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].trim().toLowerCase())  {	  switch(pathIndices[i].trim())    {    	non-compiled	[CE]  	73	None	replace
163	[BUG]  [BUGGY]  switch(pathIndices[i].trim()).toLowerCase()  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].trim()).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].trim()).toLowerCase()  {	  switch(pathIndices[i].trim())    {    	non-compiled	[CE]  	73	None	replace
164	[BUG]  [BUGGY]  switch(pathIndices[i].getSimpleName())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getSimpleName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getSimpleName())  {	  switch(pathIndices[i].getKey())    {    	non-compiled	[CE]  	29	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
170	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].toString());  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].toString());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].toString());  break;	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
171	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
172	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
173	[BUG]  [BUGGY]  switch(pathNames[i],  pathEntries[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathEntries[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathEntries[i])  {	  switch(pathIndices[i],    pathEntries[i])    {    	non-compiled	[CE]  	71	None	replace
174	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);  break;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
175	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
176	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(newPathNames[i]);  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(newPathNames[i]);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(newPathNames[i]);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
177	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
178	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toString(pathNames[i]);  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toString(pathNames[i]);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toString(pathNames[i]);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
179	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
180	[BUG]  [BUGGY]  switch(pathNames[i].getValue().toString())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getValue().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getValue().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
181	[BUG]  [BUGGY]  switch(pathIndices[i].getKey().toString())  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getKey().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getKey().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
182	[BUG]  [BUGGY]  switch(pathIndices[i].getPath().toString())  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getPath().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getPath().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
183	[BUG]  [BUGGY]  switch(pathIndices[i].getValue().toLowerCase())  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getValue().toLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getValue().toLowerCase())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
184	[BUG]  [BUGGY]  switch(pathIndices[i].getName().toString())  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getName().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getName().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
185	[BUG]  [BUGGY]  switch(pathIndices[i].getValue().toPath())  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getValue().toPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getValue().toPath())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
186	[BUG]  [BUGGY]  switch(pathNames[i])||  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])||  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])||  case  JsonScope.EMPTY_OBJECT:	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	24	None	replace
187	[BUG]  [BUGGY]  switch(pathNames[i])&&  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])&&  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])&&  case  JsonScope.EMPTY_OBJECT:	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	24	None	replace
188	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toUpperCase(pathNames[i]);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
189	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]  +  1);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
190	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i])+  1;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
191	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  charsLoaded);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  charsLoaded);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  charsLoaded);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
192	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  stack);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
193	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]).charValue();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]).charValue();  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]).charValue();	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
194	[BUG]  [BUGGY]  switch(pathIndices[i].toPath())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toPath())  {	  switch(pathNames[i].toPath())    {    	non-compiled	[CE]  	55	None	replace
195	[BUG]  [BUGGY]  switch(pathNames[i]).toString())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toString())  {	  switch(pathNames[i].toPath())    {    	non-compiled	[CE]  	55	None	replace
196	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
197	[BUG]  [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
198	[BUG]  [BUGGY]  Result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Result.append('[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Result.append('[').append(pathNames[i]).append(']');	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
199	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append( ".append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append( ".append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append( ".append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
200	[BUG]  [BUGGY]  switch(pathNames[i].getSimpleName())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getSimpleName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getSimpleName())  {	  switch(pathNames[i].getKey())    {    	non-compiled	[CE]  	38	None	replace
201	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).toString())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
202	[BUG]  [BUGGY]  switch(newPathIndices[i]).toString())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newPathIndices[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i]).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
203	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).toString())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
204	[BUG]  [BUGGY]  int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	6	None	replace
205	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(newPathIndices!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	6	None	replace
206	[BUG]  [BUGGY]  Result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Result.append('[').append(pathIndices[i]).append(']');  break;	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	6	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(newPathIndices[i])  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(newPathIndices[i])  {	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
208	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
209	[BUG]  [BUGGY]  if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathIndices[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathIndices[i])  {	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
211	[BUG]  [BUGGY]  switch(pathNames[i].getLongValue())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getLongValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getLongValue())  {	  switch(pathIndices[i].getLongValue())    {    	non-compiled	[CE]  	66	None	replace
212	[BUG]  [BUGGY]  switch(pathIndices[i].getShortValue())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getShortValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getShortValue())  {	  switch(pathIndices[i].getLongValue())    {    	non-compiled	[CE]  	66	None	replace
213	[BUG]  [BUGGY]  switch(pathIndices[i].getStringValue())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getStringValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getStringValue())  {	  switch(pathIndices[i].getLongValue())    {    	non-compiled	[CE]  	66	None	replace
214	[BUG]  [BUGGY]  switch(pathTypes[i])&&  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i])&&  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i])&&  case  JsonScope.EMPTY_OBJECT:	  switch(pathTypes[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	33	None	replace
215	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
216	[BUG]  [BUGGY]  if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
217	[BUG]  [BUGGY]  if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  newStack.length)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
218	[BUG]  [BUGGY]  switch(pathIndices[i].getShortName())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getShortName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getShortName())  {	  switch(pathIndices[i].getString())    {    	non-compiled	[CE]  	37	None	replace
219	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  i);  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  i);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i,  i);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
220	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  newStack[i]);  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  newStack[i]);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i,  newStack[i]);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
221	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  stack);  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  stack);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i,  stack);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
222	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1);  break;  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i  +  1);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
223	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i).toString();  break;  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i).toString();  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i).toString();  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
224	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathNames(i);  break;  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathNames(i);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathNames(i);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
225	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
226	[BUG]  [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
227	[BUG]  [BUGGY]  if(i!=  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
228	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
229	[BUG]  [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
230	[BUG]  [BUGGY]  Switch(i,  newPathIndices[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  newPathIndices[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
231	[BUG]  [BUGGY]  Switch(i,  newStack[pathIndices[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  newStack[pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  newStack[pathIndices[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
232	[BUG]  [BUGGY]  Switch(i,  pathNames[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  pathNames[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
233	[BUG]  [BUGGY]  Switch(i,  pathIndices[i],  charsLoaded)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  pathIndices[i],  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  pathIndices[i],  charsLoaded)  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
234	[BUG]  [BUGGY]  Switch(i,  pathIndices[i]),  charsLoaded)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  pathIndices[i]),  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  pathIndices[i]),  charsLoaded)  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
235	[BUG]  [BUGGY]  Switch(i,  newStack[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  newStack[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
236	[BUG]  [BUGGY]  switch(newPathIndices[i],  pathIndices[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(newPathIndices[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i],  pathIndices[i])  {	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
237	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]).toString()  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]).toString()  {	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
238	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i].toString())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i].toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i].toString())  {	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
239	[BUG]  [BUGGY]  switch(pathNames[i].getName())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getName())  {	  switch(pathIndices[i].getName())    {    	non-compiled	[CE]  	30	None	replace
240	[BUG]  [BUGGY]  switch(pathIndices[i].getLowerCase())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getLowerCase())  {	  switch(pathIndices[i].getName())    {    	non-compiled	[CE]  	30	None	replace
241	[BUG]  [BUGGY]  switch(pathIndices[i].getQualifiedName())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getQualifiedName())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getQualifiedName())  {	  switch(pathIndices[i].getName())    {    	non-compiled	[CE]  	30	None	replace
242	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(')');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append(')');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(')');  break;	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
243	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
244	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
245	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
246	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i]).append(')');  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i]).append(')');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i]).append(')');  break;	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
247	[BUG]  [BUGGY]  result.append(pathNames[i]).append(')');  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append(pathNames[i]).append(')');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append(pathNames[i]).append(')');  break;	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
248	[BUG]  [BUGGY]  Switch(newPathIndices[i],  pathIndices[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  pathIndices[i])  {	  Switch(newPathIndices[i])    {    	non-compiled	[CE]  	8	None	replace
249	[BUG]  [BUGGY]  PathIndices  newPathIndices[i]  =  pathIndices[i].toString();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  newPathIndices[i]  =  pathIndices[i].toString();  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  newPathIndices[i]  =  pathIndices[i].toString();	  Switch(newPathIndices[i])    {    	non-compiled	[CE]  	8	None	replace
250	[BUG]  [BUGGY]  Switch(newPathIndices[i]),  pathNames[i]  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i]),  pathNames[i]  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i]),  pathNames[i]  {	  Switch(newPathIndices[i])    {    	non-compiled	[CE]  	8	None	replace
251	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
252	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
253	[BUG]  [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
254	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
255	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append('].');  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append('].');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append('].');  break;	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
256	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
257	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
258	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
259	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  }  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append('].');  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
260	[BUG]  [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  }  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  result.append('[').append(pathIndices[i]).append('].');  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
261	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
262	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
263	[BUG]  [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
264	[BUG]  [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
265	[BUG]  [BUGGY]  Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
266	[BUG]  [BUGGY]  Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i]).append('[').append(pathIndices[i]).append(']');  break;	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
267	[BUG]  [BUGGY]  Switch(pathNames[i]),  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i]),  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i]),  JsonScope.EMPTY_OBJECT)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
268	[BUG]  [BUGGY]  Switch(pathNames[i]),  charsLoaded)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i]),  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i]),  charsLoaded)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
269	[BUG]  [BUGGY]  Switch(pathNames[i]),  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i]),  JsonScope.EMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i]),  JsonScope.EMPTY_ARRAY)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
270	[BUG]  [BUGGY]  int  stackSize  =  stack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  stackSize  =  stack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  stackSize  =  stack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
271	[BUG]  [BUGGY]  Result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Result.append('[').append(pathIndices[i]).append(']');	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
273	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].append(']');	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
274	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath()  +  1);  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath()  +  1);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath()  +  1);	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
275	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRawClass());  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRawClass());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRawClass());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
276	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].toString());  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].toString());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].toString());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
277	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getString());  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getString());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getString());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
278	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRelativePath());  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRelativePath());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getRelativePath());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
279	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURL());  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURL());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURL());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
280	[BUG]  [BUGGY]  switch(paths[i].getValue())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getValue())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
281	[BUG]  [BUGGY]  switch(paths[i].getLowerCase())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getLowerCase())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
282	[BUG]  [BUGGY]  switch(paths[i].getPath())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getPath())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
283	[BUG]  [BUGGY]  switch(paths[i].getString())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getString())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
284	[BUG]  [BUGGY]  switch(pathNames[i])||  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])||  case  JsonScope.EMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])||  case  JsonScope.EMPTY_ARRAY:	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	25	None	replace
285	[BUG]  [BUGGY]  switch(pathNames[i])&&  case  JsonScope.NONEMPTY_ARRAY:  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])&&  case  JsonScope.NONEMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])&&  case  JsonScope.NONEMPTY_ARRAY:	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	25	None	replace
286	[BUG]  [BUGGY]  switch(pathNames[i])&&  case  JsonScope.NONEMPTY_OBJECT:  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])&&  case  JsonScope.NONEMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])&&  case  JsonScope.NONEMPTY_OBJECT:	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	25	None	replace
287	[BUG]  [BUGGY]  Switch(pathNames[i],  stack[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  stack[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
288	[BUG]  [BUGGY]  Switch(stack[i],  pathIndices[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(stack[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack[i],  pathIndices[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
289	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
290	[BUG]  [BUGGY]  Switch(newPathIndices[i],  stack[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  stack[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
291	[BUG]  [BUGGY]  Switch(pathIndices[i],  pathNames[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  pathNames[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
292	[BUG]  [BUGGY]  Switch(newStack[i],  stack[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[i],  stack[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
295	[BUG]  [BUGGY]  int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
297	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
298	[BUG]  [BUGGY]  Switch(pathNames[i],  newStack[pathIndices[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  newStack[pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  newStack[pathIndices[i])  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
299	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[pathNames[i]),  charsLoaded)  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
300	[BUG]  [BUGGY]  Switch(result,  newStack[pathNames[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newStack[pathNames[i])  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
301	[BUG]  [BUGGY]  Switch(pathNames[i],  newStack[pathSize[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  newStack[pathSize[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  newStack[pathSize[i])  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
302	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
303	[BUG]  [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
304	[BUG]  [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
305	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append( "[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append( "[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append( "[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
306	[BUG]  [BUGGY]  switch(pathNames[i],  stack)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  stack)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  stack)  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
307	[BUG]  [BUGGY]  switch(pathNames[i],  stackSize)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  stackSize)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  stackSize)  {	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
308	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
309	[BUG]  [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
310	[BUG]  [BUGGY]  switch(i)  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(i)  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(i)  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
311	[BUG]  [BUGGY]  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
312	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  stackSize);  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  stackSize);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i,  stackSize);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
313	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1,  stackSize);  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1,  stackSize);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i  +  1,  stackSize);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
314	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  0);  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i,  0);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i,  0);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
315	[BUG]  [BUGGY]  switch(pathIndices[i].getChars(0,  i))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getChars(0,  i))  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getChars(0,  i))  {	  switch(pathIndices[i].getLength())    {    	non-compiled	[CE]  	54	None	replace
316	[BUG]  [BUGGY]  result.append('[');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[');  break;	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
317	[BUG]  [BUGGY]  result.append('[').append(pathSuffix[i]).append(']');  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathSuffix[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathSuffix[i]).append(']');  break;	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
318	[BUG]  [BUGGY]  result.append('[').append(pathDescriptors[i]).append(']');  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathDescriptors[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathDescriptors[i]).append(']');  break;	  result.append(']');    break;    	non-compiled	[CE]  	47	None	replace
319	[BUG]  [BUGGY]  switch(pathIndices[i],  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	34	None	replace
320	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
321	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getLength());  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getLength());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getLength());	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
322	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
323	[BUG]  [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
324	[BUG]  [BUGGY]  Result.append('[').append(pathNames[i].toString());  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Result.append('[').append(pathNames[i].toString());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Result.append('[').append(pathNames[i].toString());  break;	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
325	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
326	[BUG]  [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
327	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getValue()).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getValue()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getValue()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
328	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].getString()).toString()  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].getString()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].getString()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
329	[BUG]  [BUGGY]  switch(pathNames[i].getLowerCase())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getLowerCase())  {	  switch(pathNames[i].toPath())    {    	non-compiled	[CE]  	55	None	replace
330	[BUG]  [BUGGY]  switch(pathNames[i]).toPath())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]).toPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toPath())  {	  switch(pathNames[i].toPath())    {    	non-compiled	[CE]  	55	None	replace
331	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getString())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getString())  {	  switch(pathIndices[i].getString())    {    	non-compiled	[CE]  	37	None	replace
332	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getPath())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getPath())  {	  switch(pathIndices[i].getString())    {    	non-compiled	[CE]  	37	None	replace
333	[BUG]  [BUGGY]  switch(pathIndices[i].substring(1))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].substring(1))  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].substring(1))  {	  switch(pathIndices[i].trim())    {    	non-compiled	[CE]  	73	None	replace
334	[BUG]  [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
335	[BUG]  [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(i)  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
336	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getValue().toString())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getValue().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getValue().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
337	[BUG]  [BUGGY]  switch(pathNames[i].getKey().toString())  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getKey().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getKey().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
338	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
339	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
340	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
342	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_DECIMAL;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_DECIMAL;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  NUMBER_CHAR_DECIMAL;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
344	[BUG]  [BUGGY]  switch(paths[i],  stack[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  stack[i])  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
345	[BUG]  [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append('].');  break;  }	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
346	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i]).append('].');  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i]).append('].');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i]).append('].');  break;	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
347	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append('].');  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append('].');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append('].');	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
348	[BUG]  [BUGGY]  result.append( ".append(pathNames[i]).append('].');  break;  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( ".append(pathNames[i]).append('].');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( ".append(pathNames[i]).append('].');  break;	  result.append('[').append(pathIndices[i]).append('].');    break;    	non-compiled	[CE]  	22	None	replace
349	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
351	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStackPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStackPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStackPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
353	[BUG]  [BUGGY]  switch(pathIndices[i].getPath().trim())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getPath().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getPath().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
354	[BUG]  [BUGGY]  switch(paths[i].toString().trim())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].toString().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].toString().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
355	[BUG]  [BUGGY]  Switch(pathNames[i].toString().trim())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i].toString().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i].toString().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
356	[BUG]  [BUGGY]  switch(pathIndices[i],  case  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  case  JsonScope.EMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  case  JsonScope.EMPTY_ARRAY)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY)    {    	non-compiled	[CE]  	36	None	replace
357	[BUG]  [BUGGY]  Switch(i,  newStack[pathNames[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  newStack[pathNames[i])  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
358	[BUG]  [BUGGY]  switch(pathIndices[i]).toLowerCase()  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i]).toLowerCase()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]).toLowerCase()  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
359	[BUG]  [BUGGY]  Switch(result,  pathIndices[i],  stack[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathIndices[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i],  stack[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
360	[BUG]  [BUGGY]  Switch(result,  newPathIndices[i],  stack[pathNames[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newPathIndices[i],  stack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newPathIndices[i],  stack[pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
361	[BUG]  [BUGGY]  Switch(stack,  newPathIndices[i],  newStack[pathNames[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(stack,  newPathIndices[i],  newStack[pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack,  newPathIndices[i],  newStack[pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
362	[BUG]  [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(')');  break;  }	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
363	[BUG]  [BUGGY]  result.append('  ').append(pathNames[i]).append(')');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('  ').append(pathNames[i]).append(')');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('  ').append(pathNames[i]).append(')');  break;	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
364	[BUG]  [BUGGY]  result.append( ".append(pathNames[i]).append(')');  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( ".append(pathNames[i]).append(')');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( ".append(pathNames[i]).append(')');  break;	  result.append('[').append(pathIndices[i]).append(')');    break;    	non-compiled	[CE]  	46	None	replace
365	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]));  break;  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i]));  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]));  break;	  switch(pathIndices[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	27	None	replace
366	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
367	[BUG]  [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
368	[BUG]  [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
369	[BUG]  [BUGGY]  if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
370	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
371	[BUG]  [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathNames[i]).append(']');    break;    }    	non-compiled	[CE]  	70	None	replace
372	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT)  {	  switch(pathIndices[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	49	None	replace
373	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']',  i++);  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append(']',  i++);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(']',  i++);  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
374	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(',');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append(',');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(',');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
375	[BUG]  [BUGGY]  result.append('[').append(pathPaths[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathPaths[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathPaths[i]).append(']');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
376	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']',  i  +  1);  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).append(']',  i  +  1);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(']',  i  +  1);  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	17	None	replace
377	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
378	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
379	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
380	[BUG]  [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
381	[BUG]  [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
382	[BUG]  [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  <  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
383	[BUG]  [BUGGY]  if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >=  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
384	[BUG]  [BUGGY]  if(i  ==  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  ==  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  ==  stackSize)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	67	None	replace
385	[BUG]  [BUGGY]  result.append('[').append(pathTypes[i]).append(']');  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathTypes[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathTypes[i]).append(']');	  switch(pathTypes[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	33	None	replace
386	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);  break;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toPath(pathNames[i]);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
387	[BUG]  [BUGGY]  if(stack[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(stack[i]  ==  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(stack[i]  ==  null)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
388	[BUG]  [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
389	[BUG]  [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
390	[BUG]  [BUGGY]  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
391	[BUG]  [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
392	[BUG]  [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
393	[BUG]  [BUGGY]  result.append( ".append(pathNames[i]).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( ".append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( ".append(pathNames[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
394	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i]).append(']');  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
395	[BUG]  [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
396	[BUG]  [BUGGY]  switch(i)  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(i)  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(i)  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
397	[BUG]  [BUGGY]  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
398	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURI());  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURI());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getURI());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
399	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).toString());  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i]).toString());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).toString());  break;	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
400	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i].toString());  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i].toString());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i].toString());  break;	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
401	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].toString());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathNames[i].toString());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i].toString());	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
402	[BUG]  [BUGGY]  Switch(pathNames[i],  null)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  null)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
403	[BUG]  [BUGGY]  Switch(pathNames[i],  newPathIndices[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  newPathIndices[i])  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
404	[BUG]  [BUGGY]  Switch(pathNames[i],  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  0)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  0)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
405	[BUG]  [BUGGY]  Switch(pathNames[i],  false)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  false)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  false)  {	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
406	[BUG]  [BUGGY]  Switch(i,  stack[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  stack[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
407	[BUG]  [BUGGY]  Switch(i,  stack,  pathIndices[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  stack,  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  stack,  pathIndices[i])  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
408	[BUG]  [BUGGY]  switch(pathIndices[i].getType())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getType())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getType())  {	  switch(pathIndices[i].getName())    {    	non-compiled	[CE]  	30	None	replace
409	[BUG]  [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
410	[BUG]  [BUGGY]  result.append( ".append(pathNames[i]).append(']');  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( ".append(pathNames[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( ".append(pathNames[i]).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
411	[BUG]  [BUGGY]  result.append( "[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append( "[').append(pathNames[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append( "[').append(pathNames[i]).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	1	None	replace
412	[BUG]  [BUGGY]  Switch(result,  newStack[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newStack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newStack[i])  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
413	[BUG]  [BUGGY]  Switch(result,  pathIndices[i],  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathIndices[i],  0)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i],  0)  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
414	[BUG]  [BUGGY]  Switch(result,  pathIndices[i],  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathIndices[i],  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i],  null)  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
415	[BUG]  [BUGGY]  Switch(result.toString())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result.toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result.toString())  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
416	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i],  stack[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i],  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i],  stack[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
417	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]),  stack[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]),  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]),  stack[i])  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
418	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackPathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  newStackPaths.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
420	[BUG]  [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
421	[BUG]  [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(i)  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
422	[BUG]  [BUGGY]  if(i!=  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i!=  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i!=  stackSize)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
423	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
424	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathNames.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
425	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  stackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
426	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newPathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  NUMBER_CHAR_EXP_E;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
428	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  newStack.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
429	[BUG]  [BUGGY]  Switch(stack,  newPathIndices[i])  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(stack,  newPathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack,  newPathIndices[i])  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
430	[BUG]  [BUGGY]  Switch(pathIndices[i],  stack)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  stack)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  stack)  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
431	[BUG]  [BUGGY]  Switch(pathIndices,  stack[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices,  stack[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices,  stack[i])  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackPaths[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackPaths[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackPaths[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
433	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stacksize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stacksize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stacksize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
434	[BUG]  [BUGGY]  for(int  i  =  1,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  1,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  1,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
435	[BUG]  [BUGGY]  switch(paths[i].getLength())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getLength())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getLength())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
436	[BUG]  [BUGGY]  switch(pathNames[i].getIntValue())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getIntValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getIntValue())  {	  switch(pathIndices[i].getLongValue())    {    	non-compiled	[CE]  	66	None	replace
437	[BUG]  [BUGGY]  int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  size  =  newStack.length;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	6	None	replace
438	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
439	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
440	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
441	[BUG]  [BUGGY]  Switch(newPathIndices[i],  stack,  pathNames[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newPathIndices[i],  stack,  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  stack,  pathNames[i])  {	  Switch(newPathIndices[i])    {    	non-compiled	[CE]  	8	None	replace
442	[BUG]  [BUGGY]  switch(stack[i]).toString())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(stack[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(stack[i]).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
443	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  i++)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  i++)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0;  i  <  stackSize;  i++)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
446	[BUG]  [BUGGY]  switch(pathNames[i].getInput())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getInput())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getInput())  {	  switch(pathNames[i].getValue())    {    	non-compiled	[CE]  	28	None	replace
447	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
448	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]).toString()  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[pathNames[i]).toString()  {	  Switch(pathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	64	None	replace
449	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
450	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
451	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
452	[BUG]  [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  switch(pathTypes[i])  {	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
453	[BUG]  [BUGGY]  switch(pathEntries[i],  pathIndices[i])  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathEntries[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathEntries[i],  pathIndices[i])  {	  switch(pathIndices[i],    pathEntries[i])    {    	non-compiled	[CE]  	71	None	replace
454	[BUG]  [BUGGY]  switch(pathIndices[i],  paths[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  paths[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  paths[i])  {	  switch(pathIndices[i],    pathEntries[i])    {    	non-compiled	[CE]  	71	None	replace
455	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]).toString()  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]).toString()  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
456	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i]).toString())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(newStack[pathIndices[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i]).toString())  {	  Switch(newStack[pathIndices[i])    {    	non-compiled	[CE]  	11	None	replace
457	[BUG]  [BUGGY]  if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]  ==  null)  {  switch(newPathIndices[i])  {  }	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
458	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  switch(newPathIndices[i])  {  }	  switch(newPathIndices[i])    {    	non-compiled	[CE]  	26	None	replace
459	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
460	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	61	None	replace
461	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getPath());  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getPath());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getPath());  break;	  result.append('[').append(pathIndices[i].toString());    break;    	non-compiled	[CE]  	20	None	replace
462	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1,  stack);  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  String  pathIndices[]  =  getPathIndices(i  +  1,  stack);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i  +  1,  stack);  break;	  String    pathIndices[]    =    getPathIndices(i);    break;    	non-compiled	[CE]  	21	None	replace
463	[BUG]  [BUGGY]  int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
464	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('].');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('].');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('].');  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append('	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	40	None	replace
466	[BUG]  [BUGGY]  switch(pathIndices[i].getString().toString())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getString().toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getString().toString())  {	  switch(pathIndices[i].getValue().toString())    {    	non-compiled	[CE]  	32	None	replace
467	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	24	None	replace
468	[BUG]  [BUGGY]  if(result.length()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(result.length()  ==  0)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(result.length()  ==  0)  {	  if(pathIndices[i]!=    null)    {    	non-compiled	[CE]  	74	None	replace
469	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[newPathNames[i])  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  newStack[newPathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[newPathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
470	[BUG]  [BUGGY]  Switch(result,  newPathIndices[i],  pathNames[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  newPathIndices[i],  pathNames[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  newPathIndices[i],  pathNames[i])  {	  Switch(newPathIndices[i],    newStack[pathNames[i])    {    	non-compiled	[CE]  	12	None	replace
471	[BUG]  [BUGGY]  switch(pathTypes[i]).append('[').append(pathIndices[i]).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i]).append('[').append(pathIndices[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]).append('[').append(pathIndices[i]).toString()  {	  switch(pathTypes[i]).toString()    {    	non-compiled	[CE]  	76	None	replace
472	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
473	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.NONEMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	59	None	replace
474	[BUG]  [BUGGY]  Switch(result,  pathIndices[i],  charsLoaded)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(result,  pathIndices[i],  charsLoaded)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i],  charsLoaded)  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
475	[BUG]  [BUGGY]  Switch(pathIndices,  result[i])  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices,  result[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices,  result[i])  {	  Switch(result,    pathIndices[i])    {    	non-compiled	[CE]  	9	None	replace
476	[BUG]  [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
477	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
478	[BUG]  [BUGGY]  result.append('$').append(pathIndices[i]).append(']');  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('$').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('$').append(pathIndices[i]).append(']');	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
479	[BUG]  [BUGGY]  result.append(',').append(pathIndices[i]).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append(',').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append(',').append(pathIndices[i]).append(']');	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	3	None	replace
480	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
481	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  end  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  end  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	56	None	replace
482	[BUG]  [BUGGY]  switch(pathIndices[i],  stack[i].toString())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  stack[i].toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  stack[i].toString())  {	  switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	50	None	replace
483	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    	non-compiled	[CE]  	25	None	replace
484	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
485	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
486	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  stackSize;  i  <  end;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  end  =  stackSize;  i  <  end;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  end  =  stackSize;  i  <  end;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
487	[BUG]  [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
488	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	2	None	replace
489	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  }	  for(int    i    =    0,    size    =    stackSize;    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    }    	non-compiled	[CE]  	6	None	replace
490	[BUG]  [BUGGY]  Switch(stack,  pathIndices[i],  null)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(stack,  pathIndices[i],  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack,  pathIndices[i],  null)  {	  Switch(stack,    pathIndices[i])    {    	non-compiled	[CE]  	42	None	replace
491	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
492	[BUG]  [BUGGY]  if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
493	[BUG]  [BUGGY]  if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(result.length()  ==  0)  {  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    size    =    pathIndices[i];    i    <    size;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	5	None	replace
494	[BUG]  [BUGGY]  switch(paths[i],  pathIndices[i].toString())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i],  pathIndices[i].toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  pathIndices[i].toString())  {	  switch(paths[i],    pathIndices[i])    {    	non-compiled	[CE]  	77	None	replace
495	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i].toString());    break;    }    	non-compiled	[CE]  	69	None	replace
496	[BUG]  [BUGGY]  switch(pathIndices[i]).toPath())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i]).toPath())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]).toPath())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
497	[BUG]  [BUGGY]  switch(stack.get(i)).toString())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(stack.get(i)).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(stack.get(i)).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
498	[BUG]  [BUGGY]  switch(paths[i]).toString())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i]).toString())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i]).toString())  {	  switch(pathIndices[i]).toString())    {    	non-compiled	[CE]  	15	None	replace
499	[BUG]  [BUGGY]  switch(pathTypes[i].getLongValue())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathTypes[i].getLongValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].getLongValue())  {	  switch(pathTypes[i].toString())    {    	non-compiled	[CE]  	75	None	replace
500	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	39	None	replace
501	[BUG]  [BUGGY]  sb.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  sb.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	sb.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	52	None	replace
502	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  pathIndices.length;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');	  for(int    i    =    0,    stackSize    =    stackSize;    i    <    stackSize;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	41	None	replace
503	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_ARRAY)    {    	non-compiled	[CE]  	36	None	replace
504	[BUG]  [BUGGY]  switch(paths[i].getLongValue())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(paths[i].getLongValue())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].getLongValue())  {	  switch(paths[i].toString())    {    	non-compiled	[CE]  	78	None	replace
505	[BUG]  [BUGGY]  Switch(pathNames[i],  pathIndices[i])  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathNames[i],  pathIndices[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i],  pathIndices[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
506	[BUG]  [BUGGY]  Switch(pathIndices[i],  paths[i])  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  paths[i])  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  paths[i])  {	  Switch(pathIndices[i],    stack[i])    {    	non-compiled	[CE]  	43	None	replace
507	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getKey());  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getKey());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getKey());	  PathIndices    pathIndices[i]    =    new    PathIndices(pathNames[i].getPath());    	non-compiled	[CE]  	63	None	replace
508	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathTypes[i]),    case    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	34	None	replace
509	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getName());  break;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getName());  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getName());  break;	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
510	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getLength()  +  1);  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  result.append('[').append(pathIndices[i].getLength()  +  1);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getLength()  +  1);  break;	  result.append('[').append(pathIndices[i].getLength());    break;    	non-compiled	[CE]  	45	None	replace
511	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {  }	  switch(pathNames[i]).toString()    {    	non-compiled	[CE]  	23	None	replace
512	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]).toString()  {	  switch(pathNames[i]).toString()    {    	non-compiled	[CE]  	23	None	replace
513	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);  break;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
514	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);  break;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);  break;  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);  break;	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    break;    	non-compiled	[CE]  	65	None	replace
515	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  createPathIndices(pathNames[i]);  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  createPathIndices(pathNames[i]);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  createPathIndices(pathNames[i]);	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
516	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  Path(pathNames[i].getPath());  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  PathIndices  pathIndices[i]  =  new  Path(pathNames[i].getPath());  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  Path(pathNames[i].getPath());	  Switch(pathNames[i])    {    	non-compiled	[CE]  	7	None	replace
517	[BUG]  [BUGGY]  switch(pathNames[i].toLowerCase())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].toLowerCase())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].toLowerCase())  {	  switch(pathNames[i]).toLowerCase()    {    	non-compiled	[CE]  	53	None	replace
518	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	18	None	replace
519	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  11);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  11);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  11);	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
520	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  3);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  3);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getPath()  +  3);	  Path    pathIndices[i]    =    new    Path(pathNames[i].getPath());    	non-compiled	[CE]  	44	None	replace
521	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  0);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
522	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i],  null);	  CharSequence    pathIndices[i]    =    CharacterSequence.toLowerCase(pathNames[i]);    	non-compiled	[CE]  	62	None	replace
523	[BUG]  [BUGGY]  switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
524	[BUG]  [BUGGY]  switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathIndices[i],    pathNames[i])    {    	non-compiled	[CE]  	72	None	replace
525	[BUG]  [BUGGY]  if(pathTypes[i]!=  null)  {  switch(pathTypes[i])  {  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathTypes[i]!=  null)  {  switch(pathTypes[i])  {  case  JsonScope.EMPTY_OBJECT:  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathTypes[i]!=  null)  {  switch(pathTypes[i])  {  case  JsonScope.EMPTY_OBJECT:	  switch(pathTypes[i]),    case    JsonScope.EMPTY_OBJECT:    	non-compiled	[CE]  	33	None	replace
526	[BUG]  [BUGGY]  switch(pathIndices[i].toPath().trim())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].toPath().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toPath().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
527	[BUG]  [BUGGY]  switch(pathIndices[i].getName().trim())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getName().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getName().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
528	[BUG]  [BUGGY]  switch(pathIndices[i].getKey().trim())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getKey().trim())  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getKey().trim())  {	  switch(pathIndices[i].toString().trim())    {    	non-compiled	[CE]  	16	None	replace
529	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
530	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
531	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_ARRAY:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	60	None	replace
532	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	57	None	replace
533	[BUG]  [BUGGY]  Switch(pathIndices[i],  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(pathIndices[i],  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  null)  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
534	[BUG]  [BUGGY]  Switch(i,  pathIndices[i],  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  Switch(i,  pathIndices[i],  null)  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  pathIndices[i],  null)  {	  Switch(i,    pathIndices[i])    {    	non-compiled	[CE]  	10	None	replace
535	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
536	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathNames[i]).append(']');	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
537	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i],    pathIndices[i])    {    	non-compiled	[CE]  	51	None	replace
538	[BUG]  [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
539	[BUG]  [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append(',').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append(',').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(i  >  0)  {  if(pathIndices[i]!=  null)  {  result.append(',').append(pathIndices[i]).append(']');  }	  if(pathIndices[i]!=    null)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	68	None	replace
540	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathNames[i]!=  null)  {  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
541	[BUG]  [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i])  {  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i]),    case    JsonScope.EMPTY_OBJECT:    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	58	None	replace
542	[BUG]  [BUGGY]  switch(pathIndices[i].getName()).toString()  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getName()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getName()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
543	[BUG]  [BUGGY]  switch(pathNames[i].getKey()).toString()  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathNames[i].getKey()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getKey()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
544	[BUG]  [BUGGY]  switch(pathIndices[i].getString()).toString()  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {      [BUGGY]  switch(pathIndices[i].getString()).toString()  {  [BUGGY]      case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getString()).toString()  {	  switch(pathIndices[i].getValue()).toString()    {    	non-compiled	[CE]  	31	None	replace
