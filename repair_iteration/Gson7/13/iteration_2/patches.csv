bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  >=  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()  >=  0)  {	  if(pathNames[i]    ==    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	9	None	replace
2	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()!=  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()!=  0)  {	  if(pathNames[i]    ==    null    ||    pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	17	None	replace
3	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {	  if(pathNames[i]    ==    null    ||    pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	17	None	replace
4	[BUG]  [BUGGY]  if(newPathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()!=  0)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()!=  0)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  if(pathNames[i].length()!=  0  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()!=  0  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  0  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]  ==  null)  {	  if(pathNames[i]!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	44	None	replace
9	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i]!=  null)  {	  if(pathNames[i]!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	44	None	replace
10	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	44	None	replace
11	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
12	[BUG]  [BUGGY]  if(pathNames!=  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  newPathNames[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
13	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames[i]!=  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
14	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathIndices[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathIndices[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathIndices[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
15	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i]  ==  null)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i]  ==  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
16	[BUG]  [BUGGY]  if(pathNames  ==  null  &&  pathNames[i]!=  null)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  &&  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  &&  pathNames[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	50	None	replace
17	[BUG]  [BUGGY]  if(pathNames!=  null  ||  newPathNames.length  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
18	[BUG]  [BUGGY]  if(newPathNames!=  null  &&  newPathNames.length  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  &&  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  &&  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
19	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
20	[BUG]  [BUGGY]  if(newPathNames!=  null  ||  newPathNames.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  ||  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  ||  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
21	[BUG]  [BUGGY]  if(newPathNames!=  null  &&  pathNames.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  &&  pathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  &&  pathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
22	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.js "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.js   "))    {    	non-compiled	[CE]  	14	None	replace
23	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.js "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.js   "))    {    	non-compiled	[CE]  	14	None	replace
24	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/. "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/. "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.js   "))    {    	non-compiled	[CE]  	14	None	replace
25	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
26	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
27	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
28	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  >=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  >=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  >=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
29	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathIndices[i].length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathIndices[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathIndices[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()!=  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()!=  0)  {	  if(pathNames[i].length()    ==    0    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  if(pathNames[i].length()!=  0  ||  pathIndices[i].length()  ==  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()!=  0  ||  pathIndices[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  0  ||  pathIndices[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	6	None	replace
32	[BUG]  [BUGGY]  result.append(pathNames[i].toUpperCase());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].toUpperCase());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toUpperCase());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
33	[BUG]  [BUGGY]  result.append(pathIndices[i].toLowerCase());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathIndices[i].toLowerCase());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathIndices[i].toLowerCase());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
34	[BUG]  [BUGGY]  result.append(pathNames[i].toLowerCase()  +  1);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].toLowerCase()  +  1);  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toLowerCase()  +  1);	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
35	[BUG]  [BUGGY]  result.append(pathNames[i].toString());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].toString());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toString());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
36	[BUG]  [BUGGY]  result.append(stack[i].toLowerCase());  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(stack[i].toLowerCase());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(stack[i].toLowerCase());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
37	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	11	None	replace
38	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i]  ==  null)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	11	None	replace
39	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
40	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
41	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
42	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
43	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
44	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
45	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]    ==    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	34	None	replace
46	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].startsWith( "/ "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].startsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].startsWith( "/ "))  {	  if(pathNames[i]    ==    null    ||    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	23	None	replace
47	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( "/ "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].startsWith( "/ "))  {	  if(pathNames[i]    ==    null    ||    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	23	None	replace
48	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i]    ==    null    ||    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	23	None	replace
49	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ".js "))  {	  if(pathNames[i]    ==    null    ||    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	23	None	replace
50	[BUG]  [BUGGY]  if(result.length()  ==  0  ||  pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(result.length()  ==  0  ||  pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(result.length()  ==  0  ||  pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	47	None	replace
51	[BUG]  [BUGGY]  if(pathNames[i]  >=  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  >=  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  >=  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	47	None	replace
52	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	47	None	replace
53	[BUG]  [BUGGY]  result.append(pathNames[i].append(']'));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].append(']'));  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].append(']'));	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
54	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
55	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
56	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].append(']'));  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append('[').append(pathIndices[i].append(']'));  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathIndices[i].append(']'));	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
57	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  break;  }	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
58	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length!=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length!=  0)  {	  if(pathNames    ==    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	30	None	replace
59	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  >=  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  >=  0)  {	  if(pathNames    ==    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	30	None	replace
60	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  <  2)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  <  2)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  <  2)  {	  if(pathNames    ==    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	30	None	replace
61	[BUG]  [BUGGY]  result.append(pathNames[i]).append(']');  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i]).append(']');  break;  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i]).append(']');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
62	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
63	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
64	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathIndices[i]).append(']');  break;	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
65	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
66	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
67	[BUG]  [BUGGY]  result.append(',').append(pathIndices[i]).append(']');  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(',').append(pathIndices[i]).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(',').append(pathIndices[i]).append(']');	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
68	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
69	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
70	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  <  =  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  <  =  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  <  =  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    <    0)    {    	non-compiled	[CE]  	4	None	replace
71	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  <  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  <  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].length()  <  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    <    0)    {    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
73	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
74	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  null)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
75	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathIndices[i].length()  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathIndices[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathIndices[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	78	None	replace
76	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathIndices[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathIndices[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathIndices[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	78	None	replace
77	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathIndices[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathIndices[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathIndices[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	78	None	replace
78	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathIndices[i].length()!=  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathIndices[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathIndices[i].length()!=  0)  {	  if(pathNames[i]    ==    null    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	78	None	replace
79	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	69	None	replace
80	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( ".js "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( ".js "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	69	None	replace
81	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
82	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
83	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
84	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]  ==  null)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i]  ==  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
85	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  &&  newPathNames[i]!=  null)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  &&  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  &&  newPathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
86	[BUG]  [BUGGY]  if(pathNames[i].length()!=  0  ||  newPathNames[i]!=  null)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()!=  0  ||  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  0  ||  newPathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
87	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
88	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].startsWith( ".java "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].startsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".java ")||  pathNames[i].startsWith( ".java "))  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
89	[BUG]  [BUGGY]  if(pathNames[i].startsWith( ".java "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( ".java "))  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
90	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	65	None	replace
91	[BUG]  [BUGGY]  result.append(stack[i]);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(stack[i]);  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(stack[i]);	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
92	[BUG]  [BUGGY]  result.append(pathIndices[i]);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathIndices[i]);  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathIndices[i]);	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
93	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  paths[i].length()  ==  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  paths[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    paths[i].length()    ==    0)    {    	non-compiled	[CE]  	19	None	replace
94	[BUG]  [BUGGY]  if(paths[i]!=  null  ||  paths[i].length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(paths[i]!=  null  ||  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(paths[i]!=  null  ||  paths[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    paths[i].length()    ==    0)    {    	non-compiled	[CE]  	19	None	replace
95	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  paths[i].length()  ==  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  paths[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    paths[i].length()    ==    0)    {    	non-compiled	[CE]  	19	None	replace
96	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  0)  {	  if(pathNames[i]    ==    null    ||    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	2	None	replace
97	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
98	[BUG]  [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
99	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
100	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
101	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "/ ")||  pathNames[i]!=  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
102	[BUG]  [BUGGY]  if(pathNames[i].startsWith( ".java ")||  pathNames[i]  ==  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( ".java ")||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( ".java ")||  pathNames[i]  ==  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
103	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "./ ")||  pathNames[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "./ ")||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "./ ")||  pathNames[i]  ==  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
104	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
105	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "/ ")&&  pathNames[i]  ==  null)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "/ ")&&  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "/ ")&&  pathNames[i]  ==  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
106	[BUG]  [BUGGY]  if(pathNames[i].startsWith( ".* ")||  pathNames[i]  ==  null)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( ".* ")||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( ".* ")||  pathNames[i]  ==  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
107	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
108	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
109	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
110	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  newPathNames[i])  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  newPathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]!=  newPathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
111	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
112	[BUG]  [BUGGY]  if(stack[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
113	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.* "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
114	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".* "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
115	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.* "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
116	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/.* "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
117	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()!=  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].length()!=  0)  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
118	[BUG]  [BUGGY]  if(pathNames[i].length()  >=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  >=  0)  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
119	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
120	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
121	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
122	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
123	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
124	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
125	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	52	None	replace
126	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {	  if(newPathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	52	None	replace
127	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	77	None	replace
128	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ". "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ". "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	77	None	replace
129	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".java "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".java "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	77	None	replace
130	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java. "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java. "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	77	None	replace
131	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  newPathNames[i].length()  ==  0)  {	  if(newPathNames[i]!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	48	None	replace
132	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  pathNames[i].length()  ==  0)  {	  if(newPathNames[i]!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	48	None	replace
133	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.DANGLING_NAME)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]!=    JsonScope.CLOSED)    {    	non-compiled	[CE]  	33	None	replace
134	[BUG]  [BUGGY]  if(newPathNames  ==  null  ||  newPathNames.length  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames  ==  null  ||  newPathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames  ==  null  ||  newPathNames.length  ==  0)  {	  if(pathNames!=    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	25	None	replace
135	[BUG]  [BUGGY]  if(newPathNames!=  null  ||  pathNames.length  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  ||  pathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  ||  pathNames.length  ==  0)  {	  if(pathNames!=    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	25	None	replace
136	[BUG]  [BUGGY]  if(newPathNames  ==  null  ||  pathNames.length  ==  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames  ==  null  ||  pathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames  ==  null  ||  pathNames.length  ==  0)  {	  if(pathNames    ==    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	29	None	replace
137	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length!=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  newPathNames.length!=  0)  {	  if(pathNames    ==    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	29	None	replace
138	[BUG]  [BUGGY]  if(newPathNames  ==  null  ||  newPathNames.length!=  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames  ==  null  ||  newPathNames.length!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames  ==  null  ||  newPathNames.length!=  0)  {	  if(pathNames    ==    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	29	None	replace
139	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]  ==  null)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	10	None	replace
140	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames[i].endsWith( ".js "))  {	  if(pathNames!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	63	None	replace
141	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ". "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].endsWith( ". "))  {	  if(pathNames!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	63	None	replace
142	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( "/.js "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].endsWith( "/.js "))  {	  if(pathNames!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	63	None	replace
143	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].startsWith( ".js "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].startsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].startsWith( ".js "))  {	  if(pathNames!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	63	None	replace
144	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ". "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ". "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   ".js   "))    {    	non-compiled	[CE]  	15	None	replace
145	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".js "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].startsWith( ".js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   ".js   "))    {    	non-compiled	[CE]  	15	None	replace
146	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".java "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   "/   "))    {    	non-compiled	[CE]  	21	None	replace
147	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].startsWith( "/ "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].startsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].startsWith( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   "/   "))    {    	non-compiled	[CE]  	21	None	replace
148	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
149	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
150	[BUG]  [BUGGY]  if(newPathNames!=  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
151	[BUG]  [BUGGY]  if(newPathNames!=  null  &&  pathNames[i].length()  ==  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  &&  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  &&  pathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
152	[BUG]  [BUGGY]  if(pathNames!=  null  ||  paths[i].length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  paths[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
153	[BUG]  [BUGGY]  if(pathNames  >=  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  >=  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  >=  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
154	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
155	[BUG]  [BUGGY]  if(newPathIndices  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
156	[BUG]  [BUGGY]  if(newPathIndices!=  null  ||  newPathIndices.length  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null  ||  newPathIndices.length  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null  ||  newPathIndices.length  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
157	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
158	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
159	[BUG]  [BUGGY]  result.append('[').append(newPathIndices[i]).append(']');  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append('[').append(newPathIndices[i]).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(newPathIndices[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
160	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  =  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  =  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()  <  =  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    <    =    0)    {    	non-compiled	[CE]  	72	None	replace
161	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	36	None	replace
162	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	36	None	replace
163	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].length()!=  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathNames[i].length()!=  0)  {	  if(pathNames[i].length()    ==    0    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	8	None	replace
164	[BUG]  [BUGGY]  if(pathNames[i].length()!=  0  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()!=  0  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  0  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	8	None	replace
165	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
166	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.DANGLING_NAME)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
167	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
168	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_STRING)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_STRING)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_STRING)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
169	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
170	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	22	None	replace
171	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java.java "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java.java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "java.java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	22	None	replace
172	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java. "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "java. "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	22	None	replace
173	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".* "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".*   "))    {    	non-compiled	[CE]  	55	None	replace
174	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	56	None	replace
175	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
176	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
177	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".java "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".java "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
178	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
179	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.* "))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.* "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
180	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
181	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].trim().length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].trim().length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
182	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].trim().length()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].trim().length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
183	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()!=  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].trim().length()!=  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
184	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].trim().length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].trim().length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
185	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
186	[BUG]  [BUGGY]  result.append(stack[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(stack[i]).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(stack[i]).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
187	[BUG]  [BUGGY]  result.append(newPathNames[i]).append(']');  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(newPathNames[i]).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(newPathNames[i]).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
188	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  break;  }	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
189	[BUG]  [BUGGY]  result.append(pathNames[i].toString()).append(']');  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].toString()).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toString()).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
190	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(pathNames[i]).append(']');  }  else  {  pathNames[i]  =  new  StringBuilder();  }	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
191	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	46	None	replace
192	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_ARRAY)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_ARRAY)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	46	None	replace
193	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".class "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".class "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".class "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".   "))    {    	non-compiled	[CE]  	13	None	replace
194	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  >=  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames.length  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  >=  0)  {	  if(pathNames!=    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	26	None	replace
195	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  <  2)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames.length  <  2)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  <  2)  {	  if(pathNames!=    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	26	None	replace
196	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  >  0)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
197	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  >  0)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
198	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  1)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  1)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames.length  >  1)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
199	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0  ||  newPathNames[i]!=  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0  ||  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames.length  >  0  ||  newPathNames[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
200	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ". "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ". "))  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
201	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js ")||  pathNames[i].endsWith( ".js "))  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
202	[BUG]  [BUGGY]  if(pathNames[i].endsWith( "/.js "))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( "/.js "))  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
203	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
204	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
205	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
206	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals(newPathNames[i]))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals(newPathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].equals(newPathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
207	[BUG]  [BUGGY]  if(pathIndices[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathIndices[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathIndices[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
208	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  &&  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
209	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathIndices.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathIndices.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathIndices.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
210	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathIndices.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathIndices.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathIndices.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
211	[BUG]  [BUGGY]  if(newPathIndices!=  null  &&  newPathIndices.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null  &&  newPathIndices.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null  &&  newPathIndices.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
212	[BUG]  [BUGGY]  if(pathNames!=  null  &&  newPathIndices.length  >  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  newPathIndices.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  newPathIndices.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
213	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  1)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  1)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathIndices.length  >  1)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
214	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.BLOCK)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.BLOCK)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.BLOCK)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
215	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
216	[BUG]  [BUGGY]  if(newStack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newStack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newStack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
217	[BUG]  [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,  stack,  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,  stack,  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathIndices!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathIndices,  stack,	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
218	[BUG]  [BUGGY]  result.append(pathNames[i].toCharArray());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].toCharArray());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toCharArray());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
219	[BUG]  [BUGGY]  result.append(pathNames[i].getLength());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].getLength());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].getLength());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
220	[BUG]  [BUGGY]  result.append(pathNames[i].getString()).append(']');  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].getString()).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].getString()).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
221	[BUG]  [BUGGY]  result.append(pathNames[i].getLength()).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].getLength()).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].getLength()).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
222	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "- "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "- "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "- "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   ".js   "))    {    	non-compiled	[CE]  	15	None	replace
223	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".jar "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".jar "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".jar "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   ".js   "))    {    	non-compiled	[CE]  	15	None	replace
224	[BUG]  [BUGGY]  if(stack[i]!=  NUMBER_CHAR_QUOTED)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  NUMBER_CHAR_QUOTED)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  NUMBER_CHAR_QUOTED)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
225	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ". "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ". "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	69	None	replace
226	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.js "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/.js "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	69	None	replace
227	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].startsWith(pathNames[i]))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].startsWith(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].startsWith(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
228	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  ||  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
229	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].equals(pathNames[i]))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].equals(pathNames[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  pathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
230	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]  ==  JsonScope.EMPTY_STRING)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	46	None	replace
231	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]!=  JsonScope.CLOSED)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]!=  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]!=  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]!=    JsonScope.CLOSED)    {    	non-compiled	[CE]  	33	None	replace
232	[BUG]  [BUGGY]  if(pathNames[i]  >=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  >=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  >=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]!=    JsonScope.CLOSED)    {    	non-compiled	[CE]  	33	None	replace
233	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames.length  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames.length  ==  0)  {	  if(pathNames!=    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	26	None	replace
234	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_STRING)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_STRING)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]!=  JsonScope.EMPTY_STRING)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
235	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  ||  newPathNames[i].length()!=  0)  {	  if(newPathNames[i]!=    null    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	54	None	replace
236	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "./ ")||  pathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "./ ")||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "./ ")||  pathNames[i]!=  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
237	[BUG]  [BUGGY]  if(newPathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i].length()  ==  0  ||  pathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
238	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i]!=  null)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathIndices[i]!=  null)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
239	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
240	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".java ")||  pathNames[i]!=  null)  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
241	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
242	[BUG]  [BUGGY]  if(pathNames[i].startsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( ".java ")||  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	74	None	replace
243	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "./ "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "./ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "./ "))  {	  if(pathNames[i]    ==    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	24	None	replace
244	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".prototype. "))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".prototype. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".prototype. "))  {	  if(pathNames[i]    ==    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	24	None	replace
245	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.js "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.js   "))    {    	non-compiled	[CE]  	14	None	replace
246	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".jar "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".jar "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".jar "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	20	None	replace
247	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
248	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
249	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
250	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  instanceof  String)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]  instanceof  String)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]  instanceof  String)  {	  if(pathNames[i]!=    null    &&    pathNames[i]!=    null)    {    	non-compiled	[CE]  	44	None	replace
251	[BUG]  [BUGGY]  result.append(pathNames[0]);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[0]);  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[0]);	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
252	[BUG]  [BUGGY]  result.append(pathNames[i].trim());  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].trim());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].trim());	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
253	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_DECIMAL  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
254	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()!=  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].length()!=  0)  {	  if(pathNames[i]    ==    null    ||    pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	17	None	replace
255	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()!=  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].length()!=  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    <    =    0)    {    	non-compiled	[CE]  	72	None	replace
256	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
257	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  NUMBER_CHAR_DECIMAL)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  NUMBER_CHAR_DECIMAL)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  NUMBER_CHAR_DECIMAL)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
258	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  pathNames[i])  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  pathNames[i])  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  pathNames[i])  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
259	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  PEEKED_BEGIN_OBJECT)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  PEEKED_BEGIN_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  PEEKED_BEGIN_OBJECT)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    pathNames[i])    {    	non-compiled	[CE]  	70	None	replace
260	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()!=  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()!=  0)  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
261	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].length()!=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".java ")||  pathNames[i].length()!=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".java ")||  pathNames[i].length()!=  0)  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
262	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i].startsWith( "/ "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i].startsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "/ ")||  pathNames[i].startsWith( "/ "))  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
263	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".jar "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".jar "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".jar "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".   "))    {    	non-compiled	[CE]  	13	None	replace
264	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ". "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ". "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( ". "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	77	None	replace
265	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.* "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
266	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	22	None	replace
267	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.java "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".java   "))    {    	non-compiled	[CE]  	22	None	replace
268	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  &&  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	65	None	replace
269	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i]  ==  null)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	65	None	replace
270	[BUG]  [BUGGY]  if(pathNames  ==  null  &&  pathIndices.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  &&  pathIndices.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  &&  pathIndices.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
271	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  0  ||  stack.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  0  ||  stack.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathIndices.length  >  0  ||  stack.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
272	[BUG]  [BUGGY]  if(pathNames!=  null  &&  newPathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  newPathNames[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
273	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  >=  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].length()  >=  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
274	[BUG]  [BUGGY]  if(pathNames!=  null  &&  paths[i].length()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  paths[i].length()  ==  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
275	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i].endsWith( "/ "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]  ==  null  &&  newPathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null  &&  newPathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
276	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].endsWith( "/ "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  pathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
277	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].startsWith( ".js "))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].startsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js ")||  pathNames[i].startsWith( ".js "))  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
278	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ". ")||  pathNames[i].endsWith( ".js "))  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
279	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i]!=  null)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js ")||  pathNames[i]!=  null)  {	  if(pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	75	None	replace
280	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
281	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
282	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
283	[BUG]  [BUGGY]  if(pathNames  ==  null  &&  pathNames.length  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  &&  pathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  &&  pathNames.length  >  0)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
284	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']'));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append('[').append(pathNames[i]).append(']'));  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathNames[i]).append(']'));	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
285	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  System.arraycopy(stack,  0,  result,  newPathNames,  NUMBER_CHAR_QUOTED	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
286	[BUG]  [BUGGY]  if(result!=  null  &&  newPathNames.length  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(result!=  null  &&  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(result!=  null  &&  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
287	[BUG]  [BUGGY]  if(result!=  null  &&  pathNames[i].length()  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(result!=  null  &&  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(result!=  null  &&  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	47	None	replace
288	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
289	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  }  else  {  break;  }	  result.append('[').append(pathNames[i]).append(']');    	non-compiled	[CE]  	37	None	replace
290	[BUG]  [BUGGY]  result.append(pathNames[i].getLongValue());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].getLongValue());  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].getLongValue());	  result.append(pathNames[i].toLowerCase());    	non-compiled	[CE]  	41	None	replace
291	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.PEEKED_BEGIN_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.PEEKED_BEGIN_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.PEEKED_BEGIN_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	31	None	replace
292	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  1)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  1)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  ==  1)  {	  if(pathNames!=    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	26	None	replace
293	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  2)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  2)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  ==  2)  {	  if(pathNames!=    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	26	None	replace
294	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathIndices[i]))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathIndices[i]))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathIndices[i]))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].equals(pathNames[i]))    {    	non-compiled	[CE]  	67	None	replace
295	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0  ||  pathIndices[i]!=  null)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0  ||  pathIndices[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames.length  >  0  ||  pathIndices[i]!=  null)  {	  if(pathNames!=    null    &&    pathNames.length    >    0)    {    	non-compiled	[CE]  	60	None	replace
296	[BUG]  [BUGGY]  if(paths[i]!=  null  &&  paths[i].length()  ==  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(paths[i]!=  null  &&  paths[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(paths[i]!=  null  &&  paths[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    paths[i].length()    ==    0)    {    	non-compiled	[CE]  	19	None	replace
297	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].charAt(0)  ==  ']')  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].charAt(0)  ==  ']')  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathNames[i].charAt(0)  ==  ']')  {	  if(pathNames[i].length()    ==    0    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	8	None	replace
298	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js ")||  pathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	8	None	replace
299	[BUG]  [BUGGY]  if(pathNames[i].equals( "/ ")||  pathNames[i]  ==  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].equals( "/ ")||  pathNames[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].equals( "/ ")||  pathNames[i]  ==  null)  {	  if(pathNames[i].startsWith(   "/   ")||    pathNames[i]    ==    null)    {    	non-compiled	[CE]  	79	None	replace
300	[BUG]  [BUGGY]  if(pathNames!=  null  &&  newPathNames.length  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  newPathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  newPathNames.length  ==  0)  {	  if(pathNames!=    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	25	None	replace
301	[BUG]  [BUGGY]  if(pathNames[i].endsWith( "/ "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].endsWith( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( "/ "))  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
302	[BUG]  [BUGGY]  if(pathNames[i].length()!=  1)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()!=  1)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  1)  {	  if(pathNames[i].length()!=    0)    {    	non-compiled	[CE]  	5	None	replace
303	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	36	None	replace
304	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".prototype. "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".prototype. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".prototype. "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   "/   "))    {    	non-compiled	[CE]  	21	None	replace
305	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( "/ "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( "/ "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].equals( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   "/   "))    {    	non-compiled	[CE]  	21	None	replace
306	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  <  2)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  <  2)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  newPathNames.length  <  2)  {	  if(pathNames    ==    null)    {    	non-compiled	[CE]  	27	None	replace
307	[BUG]  [BUGGY]  if(newPathNames!=  null  &&  newPathNames.length  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null  &&  newPathNames.length  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  &&  newPathNames.length  ==  0)  {	  if(newPathNames!=    null    ||    newPathNames.length    ==    0)    {    	non-compiled	[CE]  	28	None	replace
308	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append('[').append(pathNames[i].append(']'));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.append('[').append(pathNames[i].append(']'));    	non-compiled	[CE]  	58	None	replace
309	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( "/.* "))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( "/.* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].equals( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/.*   "))    {    	non-compiled	[CE]  	71	None	replace
310	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.DANGLING_NAME)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	46	None	replace
311	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.END_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]    ==    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	46	None	replace
312	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ".java "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].endsWith( ".java "))  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
313	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].length()  >  0)  {	  if(pathNames!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	61	None	replace
314	[BUG]  [BUGGY]  result.append(pathIndices[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathIndices[i]).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathIndices[i]).append(']');	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
315	[BUG]  [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]);  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames!=  null)  {  result.append(pathNames[i]);  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null)  {  result.append(pathNames[i]);  }	  result.append(pathNames[i]);    	non-compiled	[CE]  	38	None	replace
316	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
317	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  newPathNames[i]  ==  JsonScope.NONEMPTY_DECIMAL)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    JsonScope.NONEMPTY_OBJECT)    {    	non-compiled	[CE]  	64	None	replace
318	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()  >=  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].length()  >=  0)  {	  if(pathNames[i]    ==    null    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	56	None	replace
319	[BUG]  [BUGGY]  if(stack[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    newPathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	56	None	replace
320	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
321	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	  result.append('[').append(pathNames[i]).append(']');    break;    	non-compiled	[CE]  	40	None	replace
322	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null)  {  result.append(',').append(pathNames[i]).append(']');  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
323	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append(',').append(pathNames[i]).append(']');  }  else  {  break;  }	  result.append(',').append(pathNames[i]).append(']');    	non-compiled	[CE]  	42	None	replace
324	[BUG]  [BUGGY]  result.append(pathNames[i].trim()).append(']');  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  result.append(pathNames[i].trim()).append(']');  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].trim()).append(']');	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
325	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append(pathNames[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append(pathNames[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append(pathNames[i]).append(']');  }	  result.append(pathNames[i]).append(']');    	non-compiled	[CE]  	73	None	replace
326	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  paths[i].trim().length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  paths[i].trim().length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  paths[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
327	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  >=  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  >=  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
328	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].equals( " "))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].equals( " "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].equals( " "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].trim().length()    ==    0)    {    	non-compiled	[CE]  	76	None	replace
329	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]  ==  JsonScope.CLOSED)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]  ==  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  &&  pathNames[i]  ==  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
330	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
331	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]    ==    JsonScope.CLOSED)    {    	non-compiled	[CE]  	32	None	replace
332	[BUG]  [BUGGY]  if(pathIndices!=  null  &&  pathNames.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathIndices!=  null  &&  pathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathIndices!=  null  &&  pathNames.length  >  0)  {	  if(pathNames!=    null    &&    pathIndices.length    >    0)    {    	non-compiled	[CE]  	62	None	replace
333	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  1)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  1)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  ==  1)  {	  if(pathNames    ==    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	30	None	replace
334	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  2)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  2)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  ==  2)  {	  if(pathNames    ==    null    ||    pathNames.length    ==    0)    {    	non-compiled	[CE]  	30	None	replace
335	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].charAt(0)  ==  ']')  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].charAt(0)  ==  ']')  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathIndices[i].charAt(0)  ==  ']')  {	  if(pathNames[i].length()    ==    0    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	6	None	replace
336	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.DANGLING_NAME  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]!=    JsonScope.CLOSED)    {    	non-compiled	[CE]  	33	None	replace
337	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.CLOSED  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.CLOSED  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.CLOSED  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    JsonScope.EMPTY_OBJECT    ||    pathNames[i]!=    JsonScope.CLOSED)    {    	non-compiled	[CE]  	33	None	replace
338	[BUG]  [BUGGY]  if(stack[i]!=  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null  &&  newPathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null  &&  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	65	None	replace
339	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i]!=  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  pathNames[i]!=  null)  {	  if(newPathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	65	None	replace
340	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".prototype. "))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".prototype. "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".prototype. "))  {	  if(pathNames[i]    ==    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	24	None	replace
341	[BUG]  [BUGGY]  if(pathNames  ==  null  &&  newPathNames.length  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames  ==  null  &&  newPathNames.length  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  &&  newPathNames.length  >  0)  {	  if(pathNames!=    null    &&    newPathNames.length    >    0)    {    	non-compiled	[CE]  	49	None	replace
342	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( ".js "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].equals( ".js "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].equals( ".js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].startsWith(   ".js   "))    {    	non-compiled	[CE]  	15	None	replace
343	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathIndices[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  pathIndices[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathIndices[i]!=  null)  {	  if(pathNames[i]!=    null    &&    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	35	None	replace
344	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  <  =  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  <  =  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].length()  <  =  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    <    =    0)    {    	non-compiled	[CE]  	72	None	replace
345	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  paths[i].length()  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  paths[i].length()  >  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  paths[i].length()  >  0)  {	  if(pathNames[i]    ==    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	59	None	replace
346	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.DANGLING_NAME)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.DANGLING_NAME)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  JsonScope.DANGLING_NAME)  {	  if(pathNames[i].length()    ==    0    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	51	None	replace
347	[BUG]  [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
348	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.NONEMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
349	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    JsonScope.EMPTY_OBJECT)    {    	non-compiled	[CE]  	45	None	replace
350	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]!=  null)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
351	[BUG]  [BUGGY]  if(stack[i]  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack[i]  ==  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack[i]  ==  null)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
352	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathIndices[i]!=  null)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathIndices[i]!=  null)  {	  if(newPathNames[i]    ==    null)    {    	non-compiled	[CE]  	53	None	replace
353	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	39	None	replace
354	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".* "))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".* "))  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].endsWith( ".* "))  {	  if(newPathNames[i]!=    null    &&    newPathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	68	None	replace
355	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  >=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  >=  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].length()  >=  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >=    0)    {    	non-compiled	[CE]  	3	None	replace
356	[BUG]  [BUGGY]  if(pathIndices[i]!=  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');      [BUGGY]  if(pathIndices[i]!=  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]      result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathIndices[i]!=  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null    ||    pathIndices[i].length()    ==    0)    {    	non-compiled	[CE]  	78	None	replace
