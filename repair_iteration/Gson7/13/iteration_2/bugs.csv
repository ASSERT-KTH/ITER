bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  >  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  >  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  >  0)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()  >  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  >=  0)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  >=  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].length()  >=  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
4	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  <  0)  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  <  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  <  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
5	[BUG]  [BUGGY]  if(pathNames[i].length()!=  0)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].length()!=  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()!=  0)  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathIndices[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
8	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
9	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()  ==  0)  {	  if(pathNames[i]    ==    null)    {    	non-compiled	[CE]  	1	None	replace
10	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  null)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  null)  {	  if(pathNames[i]    ==    null)    {    	non-compiled	[CE]  	1	None	replace
11	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]  ==  null)  {	  if(pathNames[i]    ==    null)    {    	non-compiled	[CE]  	1	None	replace
12	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ". "))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ". "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ". "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.js "))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".js "))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( ".js "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   ".js   "))    {    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
17	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()!=  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].length()!=  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].length()!=  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
18	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  >=  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].length()  >=  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].length()  >=  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
19	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  paths[i].length()  ==  0)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  paths[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  paths[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
20	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/ "))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/ "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
21	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/ "))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/ "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].startsWith( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".java "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
23	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/ "))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/ "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i].endsWith( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
24	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/ "))  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/ "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].endsWith( "/ "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
25	[BUG]  [BUGGY]  if(pathNames!=  null  ||  newPathNames.length  ==  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  ||  newPathNames.length  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  newPathNames.length  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
26	[BUG]  [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  ||  pathNames.length  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  ||  pathNames.length  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
27	[BUG]  [BUGGY]  if(pathNames  ==  null)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames  ==  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
28	[BUG]  [BUGGY]  if(newPathNames!=  null  ||  newPathNames.length  ==  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames!=  null  ||  newPathNames.length  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames!=  null  ||  newPathNames.length  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
29	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  ==  0)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames  ==  null  ||  newPathNames.length  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  newPathNames.length  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
30	[BUG]  [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  0)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames  ==  null  ||  pathNames.length  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames  ==  null  ||  pathNames.length  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]  ==  JsonScope.CLOSED)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  JsonScope.EMPTY_OBJECT  ||  pathNames[i]!=  JsonScope.CLOSED)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i]!=  null)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	4	None	replace
35	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i]!=  null)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	4	None	replace
36	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	4	None	replace
37	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathNames[i]).append(']');	      	non-compiled	[CE]  	6	None	replace
38	[BUG]  [BUGGY]  result.append(pathNames[i]);  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append(pathNames[i]);  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i]);	      	non-compiled	[CE]  	6	None	replace
39	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathIndices[i]).append(']');	      	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathNames[i]).append(']');  break;	      	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  result.append(pathNames[i].toLowerCase());  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append(pathNames[i].toLowerCase());  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i].toLowerCase());	      	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  result.append(',').append(pathNames[i]).append(']');  [CE]  [FE]                            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append(',').append(pathNames[i]).append(']');  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(',').append(pathNames[i]).append(']');	      	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  null)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathNames[i]!=  null)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    null)    {    	non-compiled	[CE]  	3	None	replace
44	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i]!=  null)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    null)    {    	non-compiled	[CE]  	3	None	replace
45	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]!=  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    null)    {    	non-compiled	[CE]  	3	None	replace
46	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i]  ==  JsonScope.EMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    pathNames[i]!=    null)    {    	non-compiled	[CE]  	3	None	replace
47	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  ==  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].length()  ==  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	9	None	replace
48	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].length()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  pathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  pathNames[i].length()  ==  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  if(pathNames!=  null  &&  newPathNames.length  >  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  newPathNames.length  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  newPathNames.length  >  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
50	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i]!=  null)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  pathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i]!=  null)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
51	[BUG]  [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].length()  ==  0  ||  newPathNames[i]!=  null)  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]!=  null)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  if(newPathNames[i]  ==  null)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]  ==  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]  ==  null)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
54	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  ||  newPathNames[i].length()  ==  0)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
55	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".* "))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".* "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( ".* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
56	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  newPathNames[i].length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
57	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	9	None	replace
58	[BUG]  [BUGGY]  result.append('[').append(pathNames[i].append(']'));  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append('[').append(pathNames[i].append(']'));  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append('[').append(pathNames[i].append(']'));	      	non-compiled	[CE]  	6	None	replace
59	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  >  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  &&  pathNames[i].length()  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  &&  pathNames[i].length()  >  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
60	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  pathNames.length  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames.length  >  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
61	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  pathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].length()  ==  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  pathIndices.length  >  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathIndices.length  >  0)  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ".js "))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames!=  null  &&  pathNames[i].endsWith( ".js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames!=  null  &&  pathNames[i].endsWith( ".js "))  {	  if(pathNames!=    null)    {    	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  newPathNames[i]!=  JsonScope.NONEMPTY_OBJECT)  {	  if(pathNames[i]!=    null    ||    newPathNames[i]!=    null)    {    	non-compiled	[CE]  	4	None	replace
65	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]!=  null)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]!=  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i]!=  null)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].length()  ==  0)  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].equals(pathNames[i]))  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
68	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( "/ "))  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
69	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i].endsWith( ".js "))  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
70	[BUG]  [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(newPathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(newPathNames[i]!=  null  &&  newPathNames[i]!=  pathNames[i])  {	  if(newPathNames[i]!=    null)    {    	non-compiled	[CE]  	8	None	replace
71	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.* "))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.* "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].endsWith( "/.* "))  {	  if(pathNames[i]!=    null    &&    pathNames[i].endsWith(   "/   "))    {    	non-compiled	[CE]  	11	None	replace
72	[BUG]  [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  <  =  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  &&  pathNames[i].length()  <  =  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  &&  pathNames[i].length()  <  =  0)  {	  if(pathNames[i]!=    null    &&    pathNames[i].length()    >    0)    {    	non-compiled	[CE]  	12	None	replace
73	[BUG]  [BUGGY]  result.append(pathNames[i]).append(']');  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  result.append(pathNames[i]).append(']');  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	result.append(pathNames[i]).append(']');	      	non-compiled	[CE]  	6	None	replace
74	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".java "))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].endsWith( ".java "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".java "))  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  if(pathNames[i].endsWith( ".js "))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].endsWith( ".js "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].endsWith( ".js "))  {	  if(pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	5	None	replace
76	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].trim().length()  ==  0)  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
77	[BUG]  [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".java "))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".java "))  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]!=  null  ||  pathNames[i].endsWith( ".java "))  {	  if(pathNames[i]!=    null    ||    pathNames[i].length()    ==    0)    {    	non-compiled	[CE]  	2	None	replace
78	[BUG]  [BUGGY]  if(pathNames[i]  ==  null  ||  pathIndices[i].length()  ==  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i]  ==  null  ||  pathIndices[i].length()  ==  0)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i]  ==  null  ||  pathIndices[i].length()  ==  0)  {	  if(pathNames[i]    ==    null)    {    	non-compiled	[CE]  	1	None	replace
79	[BUG]  [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  null)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');    [BUGGY]  if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  null)  {  [BUGGY]    result.append(pathNames[i]);  }  break;  case  JsonScope.NONEMPTY_DOCUMENT:  case  JsonScope.EMPTY_DOCUMENT:  case  JsonScope.CLOSED:  break;  }  }  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	if(pathNames[i].startsWith( "/ ")||  pathNames[i]  ==  null)  {	  if(pathNames[i]    ==    null)    {    	non-compiled	[CE]  	1	None	replace
