bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stackIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	14	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  newStack.length;  i  <  len;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  newStack.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  newStack.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stackIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	14	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.pathIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  this.pathIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  this.pathIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stackIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	14	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  pathIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  1,  len  =  pathIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  1,  len  =  pathIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stackIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	14	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.pathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  this.pathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  this.pathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  this.stackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.stackIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  this.stackIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  this.stackIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
10	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
11	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
12	[BUG]  [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.length]);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.length]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.length]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
13	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
14	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
15	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathNames.length]);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathNames.length]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathNames.length]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
16	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
17	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
18	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
19	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
20	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
21	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  pathNames.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  pathNames.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  pathNames.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
22	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
23	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
24	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
25	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
26	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
27	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  /  2;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  /  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  /  2;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  -  3;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  -  3;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  -  3;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	4	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  len  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  len  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length;  i  <  len  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  2;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.size();  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.size();  i  <  size  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.size();  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.size();  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.size();  i  <  size  -  1;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.size();  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.size();  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	61	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.size();  i  <  len;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.size();  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.size();  i  <  len;  i++)  {	  for(int    i    =    0,    size    =    stack.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	61	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  len  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  len  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  paths.length;  i  <  len  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  paths.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  >=  size  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  >=  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  >=  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  2;  i  <  stack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  2;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  2;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	16	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStack.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  pathIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStack.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	12	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	12	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	12	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stackIndices.length;  i  <  len  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stackIndices.length;  i  <  len  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stackIndices.length;  i  <  len  -  1;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	12	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathNames.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	42	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathNames.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	42	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  i++)  {	  for(int    i    =    0,    size    =    pathNames.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	42	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length;  i  <  length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length;  i  <  length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stackIndices.length;  i  <  length;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  stackIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  stackIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  stackIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathsIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathsIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathsIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  str.length;  i  <  len;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  str.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  str.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stack.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	5	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length  -  1;  i  <  len;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length  -  1;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length  -  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stack.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	5	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length  -  2;  i  <  len;  i++)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length  -  2;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length  -  2;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stack.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	5	None	replace
67	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
68	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
69	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
70	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
71	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
72	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
73	[BUG]  [BUGGY]  int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  paths.length  -  1;  i  <  len;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  paths.length  -  1;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  paths.length  -  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    paths.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	45	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  len  +  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  len  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  paths.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    paths.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	45	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    len    =    paths.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	45	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathList.length;  i  <  len;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathList.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathList.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    paths.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	45	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  array.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  paths.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  array.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  array.length;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  paths.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  array.length;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  isSize  =  paths.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_EXP_SIGN;    i++)    {    	non-compiled	[CE]  	67	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_EXP_SIGN;    i++)    {    	non-compiled	[CE]  	67	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_EXP_SIGN;    i++)    {    	non-compiled	[CE]  	67	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN  +  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN  +  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_EXP_SIGN;    i++)    {    	non-compiled	[CE]  	67	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN  +  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN  +  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_EXP_SIGN;    i++)    {    	non-compiled	[CE]  	67	None	replace
87	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  1]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
88	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  1]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
89	[BUG]  [BUGGY]  int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.length]);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.length]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.length]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
90	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathNames.length]);  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathNames.length]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathNames.length]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
91	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  -  2]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
92	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);  [CE]  [FE]                                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length  +  2]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  str.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    str.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	47	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  str.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    str.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	47	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  str.length;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  str.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  str.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    str.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	47	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  3;  i  <  stack.length;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  3;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  3;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    3;    i    <    size;    i++)    {    	non-compiled	[CE]  	18	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  10;  i  <  stack.length;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  10;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  10;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    10;    i    <    size;    i++)    {    	non-compiled	[CE]  	19	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  /  2;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  /  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  /  2;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	41	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  3;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  3;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  3;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	41	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  4;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  4;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  size  -  4;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	41	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    newStackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	13	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStackIndices.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    newStackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	13	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  newStackIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  newStackIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  newStackIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newStackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	13	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	59	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	59	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	59	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0,  STRICT_SIZE  =  paths.length;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  STRICT_SIZE  =  paths.length;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  STRICT_SIZE  =  paths.length;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	59	None	replace
108	[BUG]  [BUGGY]  int  stack  =  getStack(newPathIndices);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(newPathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(newPathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
109	[BUG]  [BUGGY]  int  stack  =  getStack(result);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(result);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(result);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
110	[BUG]  [BUGGY]  int  stack  =  getStackBounds(pathIndices);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStackBounds(pathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStackBounds(pathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
111	[BUG]  [BUGGY]  int  stack  =  getStack(pathIndices,  newPathIndices);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(pathIndices,  newPathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(pathIndices,  newPathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
112	[BUG]  [BUGGY]  int  stack  =  getStackByName(pathIndices);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStackByName(pathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStackByName(pathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
113	[BUG]  [BUGGY]  int  stack  =  getStack(newPathIndices,  0);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(newPathIndices,  0);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(newPathIndices,  0);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
114	[BUG]  [BUGGY]  int  stack  =  getStackSize(pathIndices);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStackSize(pathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStackSize(pathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	30	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  size  -  1;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	30	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  3;  i  <  size  -  1;  i++)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  3;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  3;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	30	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  10;  i  <  size  -  1;  i++)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  10;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  10;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	30	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	68	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	68	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    stackSize;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	63	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size  /  2;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size  /  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size  /  2;  i++)  {	  for(int    i    =    0,    size    =    stackSize;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	63	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  4;  i  <  size  -  2;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  4;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  4;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    stackSize;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	63	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  hash;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  hash;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  paths.length;  i  <  hash;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  isSize;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  isSize;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  isSize  =  paths.length;  i  <  isSize;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
128	[BUG]  [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
129	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
130	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
131	[BUG]  [BUGGY]  int  stack[]  =  paths.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  paths.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  paths.toArray(new  String[pathIndices.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
132	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  *  2]);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  *  2]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathIndices.size()  *  2]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.size();  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStack.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStack.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newStack.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	10	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN  +  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN  +  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN  +  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  3;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  3;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  size  -  3;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  stack.length;  i++)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  1;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    6;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	20	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  stack.length;  i++)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    6;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	20	None	replace
140	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
141	[BUG]  [BUGGY]  if(result.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result.length()  ==  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
142	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
143	[BUG]  [BUGGY]  if(result.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
144	[BUG]  [BUGGY]  if(stack.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()!=  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
145	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(stack.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(stack.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  ==  0)  {  charsLoaded  =  getPath().charAt(stack.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  array.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    array.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	48	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  array.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    array.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	48	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  2;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  2;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  2;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    2;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	31	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	7	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.size;  i  <  len;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.size;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  newPathIndices.size;  i  <  len;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	7	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size;  i  <  size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.size;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	7	None	replace
156	[BUG]  [BUGGY]  charsLoaded  =  getPath().charAt(result.length());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getPath().charAt(result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getPath().charAt(result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
157	[BUG]  [BUGGY]  CharsLoaded  =  getPath().charAt(result.length());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  CharsLoaded  =  getPath().charAt(result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	CharsLoaded  =  getPath().charAt(result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
158	[BUG]  [BUGGY]  result.append(getPath().charAt(result.length()  -  1));  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(getPath().charAt(result.length()  -  1));  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(getPath().charAt(result.length()  -  1));	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
159	[BUG]  [BUGGY]  result.append(getPath().charAt(result.length()));  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(getPath().charAt(result.length()));  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(getPath().charAt(result.length()));	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
160	[BUG]  [BUGGY]  charsLoaded  =  findPath().charAt(result.length());  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  findPath().charAt(result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  findPath().charAt(result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
161	[BUG]  [BUGGY]  charsLoaded  =  getString().charAt(result.length());  [CE]  [FE]                                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getString().charAt(result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getString().charAt(result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  4;  i  <  stack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  4;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  4;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	21	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	75	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.size;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStack.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStack.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	75	None	replace
165	[BUG]  [BUGGY]  result.append(stack[i]).append(']');  break;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(stack[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(stack[i]).append(']');  break;	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
166	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
167	[BUG]  [BUGGY]  if(stack[i]  ==  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]  ==  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]  ==  null)  {  result.append(pathIndices[i]).append(']');  break;  }	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
168	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  result.append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  ==  0)  {  result.append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  ==  0)  {  result.append(pathIndices[i]).append(']');  break;  }	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
169	[BUG]  [BUGGY]  result.append(pathNames[i]).append(']');  break;  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathNames[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathNames[i]).append(']');  break;	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathSize.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathSize.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathSize.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathSize;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	72	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathSize;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathSize;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	72	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	24	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	24	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	24	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	24	None	replace
176	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathNames[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathNames[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
177	[BUG]  [BUGGY]  result.append('[').append(stack[i]).append(']');  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(stack[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(stack[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
178	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
179	[BUG]  [BUGGY]  result.append('[').append(pathStack[i]).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathStack[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathStack[i]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
180	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].toString()).append(']');  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathIndices[i].toString()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathIndices[i].toString()).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
181	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  break;  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	1	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  stack.length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	1	None	replace
184	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath());  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
185	[BUG]  [BUGGY]  StringBuilder  result  =  new  StringBuilder().append(pathIndices[i].toString());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuilder  result  =  new  StringBuilder().append(pathIndices[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuilder  result  =  new  StringBuilder().append(pathIndices[i].toString());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
186	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i].toString());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i].toString());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
187	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getLength());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getLength());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getLength());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
188	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getValue());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getValue());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getValue());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
189	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]);	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
190	[BUG]  [BUGGY]  result.append('[').append(stack[i]).append(']');  break;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(stack[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(stack[i]).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
191	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathNames[i]).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
192	[BUG]  [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length  >  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
193	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  ==  0)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
194	[BUG]  [BUGGY]  result.append('[').append(pathStack[i]).append(']');  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathStack[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathStack[i]).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.size();  i  <  size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size;    i++)    {    	non-compiled	[CE]  	6	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size;    i++)    {    	non-compiled	[CE]  	6	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.size;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.size;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.size;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
202	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  +  1]);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  +  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  +  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
203	[BUG]  [BUGGY]  int  stack[]  =  pathPaths.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathPaths.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathPaths.toArray(new  String[pathIndices.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
204	[BUG]  [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathPaths.size()  ]);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  newPathIndices.toArray(new  String[pathPaths.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  newPathIndices.toArray(new  String[pathPaths.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
205	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  -  1]);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  -  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathPaths.size()  -  1]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
206	[BUG]  [BUGGY]  int  stack[]  =  paths.toArray(new  String[pathPaths.size()  ]);  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  paths.toArray(new  String[pathPaths.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  paths.toArray(new  String[pathPaths.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	40	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  pathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	40	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	40	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  pathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	40	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  newStack.length;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.size();  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  /  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  /  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  size  /  2;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	44	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  paths.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	44	None	replace
219	[BUG]  [BUGGY]  result.append(stack[i]).append(']');  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(stack[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(stack[i]).append(']');	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
220	[BUG]  [BUGGY]  result.append(pathNames[i]).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathNames[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathNames[i]).append(']');	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
221	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
222	[BUG]  [BUGGY]  result.append(pathIndices[i].toString()).append(']');  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].toString()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].toString()).append(']');	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
223	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }  else  {  throwOnEof  StringException( " ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }  else  {  throwOnEof  StringException( " ");  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]!=  null)  {  result.append(pathIndices[i]).append(']');  }  else  {  throwOnEof  StringException( " ");  }	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  isSize  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  isSize  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
227	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathNames[i]).append(']');  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathNames[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathNames[i]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
228	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i]).append(']');  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer(32).append(pathIndices[i]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
229	[BUG]  [BUGGY]  StringBuilder  result  =  new  StringBuilder().append(pathIndices[i]).append(']');  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuilder  result  =  new  StringBuilder().append(pathIndices[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuilder  result  =  new  StringBuilder().append(pathIndices[i]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
230	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(stack[i]).append(']');  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(stack[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(stack[i]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
231	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath()).append(']');  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getPath()).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
232	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(16).append(pathIndices[i]).append(']');  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer(16).append(pathIndices[i]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer(16).append(pathIndices[i]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  2;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  2;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length  -  2;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	3	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  3;  i  <  size;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  3;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  3;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	3	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  4;  i  <  size;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  4;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  4;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	3	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  2;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	3	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size();  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size();  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size();  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	74	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	74	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	74	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  stack.size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newStack.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newStack.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	74	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  size  -  2;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  1;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  1;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	17	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	22	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	22	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  length;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  length;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  length;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    arraySize;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	62	None	replace
248	[BUG]  [BUGGY]  int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  newPathIndices.toArray(new  String[pathIndices.size()  ]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
249	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  +  1]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
250	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  -  1]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
251	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  ]  +  1);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  ]  +  1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.size()  ]  +  1);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
252	[BUG]  [BUGGY]  int[]  stack  =  paths.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  paths.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  paths.toArray(new  String[pathIndices.size()  ]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  stackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  stackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  stackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  stackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  stackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  stackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  stackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  stackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  stackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	26	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.length  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  newStack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	26	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	46	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	46	None	replace
260	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	46	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathsIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathsIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathsIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	56	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	56	None	replace
263	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  0);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  0);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  0);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
264	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  1);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  1);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
265	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  2);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  2);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  2);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
266	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  16);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  16);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  16);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
267	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  3);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  3);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  3);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
268	[BUG]  [BUGGY]  int  stack  =  newStack[pathIndices[i].lastIndexOf('.');  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  newStack[pathIndices[i].lastIndexOf('.');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  newStack[pathIndices[i].lastIndexOf('.');	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
269	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  4);  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].lastIndexOf('.',  4);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].lastIndexOf('.',  4);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
270	[BUG]  [BUGGY]  result.append(pathIndices[i].getValue());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getValue());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getValue());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
271	[BUG]  [BUGGY]  result.append(pathIndices[i].getLength());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getLength());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getLength());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
272	[BUG]  [BUGGY]  result.append(pathIndices[i].getPath());  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getPath());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getPath());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
273	[BUG]  [BUGGY]  result.append(stack[i].toString());  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(stack[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(stack[i].toString());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
274	[BUG]  [BUGGY]  result.append(pathIndices[i].getName());  [CE]  [FE]                                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getName());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getName());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
275	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  newPathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	8	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  newPathIndices.length;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	8	None	replace
277	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
278	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
279	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
280	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
281	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
282	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
283	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
284	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
285	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathNames.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
286	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
287	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	final  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
288	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
289	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	76	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.size;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	76	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length  -  1;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  2;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  >=  size;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  >=  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  >=  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    pathsIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	25	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length  -  1;  i  <  len;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length  -  1;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length  -  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    pathsIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	25	None	replace
297	[BUG]  [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  hash  =  pathsIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	23	None	replace
298	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  newPathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	23	None	replace
299	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  length;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
300	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.size;  i  <  size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.size;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.size;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    paths.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	9	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  stack.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  stack.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  arraySize;  i  <  size  -  2;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  arraySize;  i  <  size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  arraySize;  i  <  size  -  2;  i++)  {	  for(int    i    =    0,    size    =    stackSize;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	63	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size  -  3;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size  -  3;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size  -  3;  i++)  {	  for(int    i    =    0,    size    =    stackSize;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	63	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.size;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathsIndices.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	76	None	replace
307	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  path.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  path.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  path.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    str.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	47	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  0,  n  =  paths.length;  i  <  array.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  n  =  paths.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  n  =  paths.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  array.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  paths.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  paths.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	60	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  stack[i]  ==  null;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  stack[i]  ==  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  stack[i]  ==  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
313	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  result!=  null;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  result!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  result!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
314	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  }	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
315	[BUG]  [BUGGY]  result.append(pathIndices[i].getPath()).append(']');  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getPath()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getPath()).append(']');	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  NUMBER_CHAR_SIZE;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
317	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  /  2;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  /  2;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  /  2;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    2;    i    <    size;    i++)    {    	non-compiled	[CE]  	3	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.stack.length;  i  <  len;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  this.stack.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  this.stack.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stack.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	5	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stackIndices.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	12	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  NUMBER_CHAR_SIGN;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
322	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  STRICT_SIGN;  i  <  size  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  STRICT_SIGN;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  STRICT_SIGN;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  STRICT_SIZE;  i  <  size  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  STRICT_SIZE;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  STRICT_SIZE;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathsIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	22	None	replace
325	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  pathsIndices.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  pathsIndices.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  pathsIndices.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	22	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.length  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  newStack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	24	None	replace
327	[BUG]  [BUGGY]  int  stack  =  getStack(1);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(1);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
328	[BUG]  [BUGGY]  int  stack  =  getStackByPath(pathIndices);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStackByPath(pathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStackByPath(pathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
329	[BUG]  [BUGGY]  int  stack  =  getStack(pathIndices,  0);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(pathIndices,  0);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(pathIndices,  0);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
330	[BUG]  [BUGGY]  int  stack  =  getStackIndices(newPathIndices);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStackIndices(newPathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStackIndices(newPathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  -  3;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  -  3;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  size  -  3;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	44	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  -  4;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  size  -  4;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  size  -  4;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	44	None	replace
333	[BUG]  [BUGGY]  int  stack[]  =  pathNames.toArray(new  String[pathIndices.length]);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathNames.toArray(new  String[pathIndices.length]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathNames.toArray(new  String[pathIndices.length]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	81	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	40	None	replace
335	[BUG]  [BUGGY]  for(int  i  =  0,  n  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  n  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  n  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
336	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  str.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  str.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathSize;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathSize;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathSize;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	72	None	replace
338	[BUG]  [BUGGY]  if(stack!=  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
339	[BUG]  [BUGGY]  if(!lenient)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(!lenient)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(!lenient)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
340	[BUG]  [BUGGY]  if(stack  ==  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack  ==  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack  ==  null)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
341	[BUG]  [BUGGY]  if(result.length()  ==  1)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result.length()  ==  1)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result.length()  ==  1)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
342	[BUG]  [BUGGY]  charsLoaded  =  getPath().charAt(result.length()  +  1);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getPath().charAt(result.length()  +  1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getPath().charAt(result.length()  +  1);	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
343	[BUG]  [BUGGY]  Character  lenient  =  getPath().charAt(result.length());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  Character  lenient  =  getPath().charAt(result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	Character  lenient  =  getPath().charAt(result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
344	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
345	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
346	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
347	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
348	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  else  {  return  new  StringBuilder();  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
349	[BUG]  [BUGGY]  result.append('[').append(pathIndices[0]).append(']');  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathIndices[0]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathIndices[0]).append(']');	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0,  n  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  n  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  n  =  paths.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
351	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  array.length  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  array.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  array.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	26	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  pathsIndices.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  pathsIndices.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  array.length;  i  <  pathsIndices.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	56	None	replace
354	[BUG]  [BUGGY]  int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[newPathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
355	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	39	None	replace
358	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
359	[BUG]  [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
360	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
361	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathInfos.length;  i  <  len;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathInfos.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathInfos.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    paths.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	45	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0,  stackLength  =  stackIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stackLength  =  stackIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stackLength  =  stackIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  0;  i  <  stack.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  0;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  0;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	21	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  STRICT_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	68	None	replace
365	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  4;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  4;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  4;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    4;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	30	None	replace
366	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
367	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
368	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  -  4;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  -  4;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  -  4;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	4	None	replace
369	[BUG]  [BUGGY]  int  stack  =  pathIndices[i].indexOf('.',  0);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  pathIndices[i].indexOf('.',  0);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  pathIndices[i].indexOf('.',  0);	  int    stack    =    pathIndices[i].lastIndexOf('.');    	non-compiled	[CE]  	80	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathIndices.length;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	74	None	replace
371	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size;    i++)    {    	non-compiled	[CE]  	6	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.pathIndices.size();  i  <  size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  this.pathIndices.size();  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  this.pathIndices.size();  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size;    i++)    {    	non-compiled	[CE]  	6	None	replace
373	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathNames[i].toString());  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathNames[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathNames[i].toString());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
374	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[0].toString());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[0].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[0].toString());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
375	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()  +  1);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()  +  1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()  +  1);	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
376	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  array.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	46	None	replace
377	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  2;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.length  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	41	None	replace
378	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  paths.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  paths.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  paths.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
381	[BUG]  [BUGGY]  result.append(pathNames[i].toString());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathNames[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathNames[i].toString());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
382	[BUG]  [BUGGY]  result.append(pathIndices[i]);  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i]);	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
384	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  array.length;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
385	[BUG]  [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
386	[BUG]  [BUGGY]  String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	String[]  stack  =  new  String[pathNames.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
387	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
388	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.length  ]);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathPaths.length  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathPaths.length  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathPaths.size()    ]);    	non-compiled	[CE]  	83	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
390	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
391	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIGN  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIGN  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  NUMBER_CHAR_SIGN  -  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	27	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  6;  i  <  stack.length  -  1;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  6;  i  <  stack.length  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  6;  i  <  stack.length  -  1;  i++)  {	  for(int    i    =    0,    size    =    6;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	29	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.size;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathIndices.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathIndices.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	75	None	replace
394	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  pathIndices.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  pathIndices.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  pathIndices.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	75	None	replace
395	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  array.size;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  array.size;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  array.size;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newStack.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	10	None	replace
396	[BUG]  [BUGGY]  if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  result.append(pathIndices[i]).append(']');  break;  }	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
397	[BUG]  [BUGGY]  result.append(pathIndices[i].toString()).append(']');  break;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].toString()).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].toString()).append(']');  break;	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
398	[BUG]  [BUGGY]  result.append(paths[i]).append(']');  break;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(paths[i]).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(paths[i]).append(']');  break;	  result.append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	36	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	23	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len  +  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    pathsIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	25	None	replace
401	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  size  -  1;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.size();  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	73	None	replace
402	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()).append(']');  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toString()).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
403	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[0]).append(']');  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[0]).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[0]).append(']');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
404	[BUG]  [BUGGY]  int  stack[]  =  pathNames.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathNames.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathNames.toArray(new  String[pathIndices.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  array.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.size();  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    size;    i++)    {    	non-compiled	[CE]  	6	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.size();  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.size();  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length;  i  <  NUMBER_CHAR_SIGN;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	65	None	replace
408	[BUG]  [BUGGY]  result.append(pathIndices[i].getLength()).append(']');  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append(pathIndices[i].getLength()).append(']');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append(pathIndices[i].getLength()).append(']');	  result.append(pathIndices[i]).append(']');    	non-compiled	[CE]  	34	None	replace
409	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
410	[BUG]  [BUGGY]  if(stack[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]  ==  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
411	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getName()).append(']');  break;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathIndices[i].getName()).append(']');  break;  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathIndices[i].getName()).append(']');  break;	  result.append('[').append(pathIndices[i]).append(']');    break;    	non-compiled	[CE]  	33	None	replace
412	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(stack[i].toString());  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(stack[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(stack[i].toString());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
413	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getName());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getName());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].getName());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
414	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toPath());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toPath());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i].toPath());	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i].toString());    	non-compiled	[CE]  	35	None	replace
415	[BUG]  [BUGGY]  int[]  stack  =  new  int[stack.size()  ];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[stack.size()  ];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[stack.size()  ];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
416	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
417	[BUG]  [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.size();  ++i)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.size();    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	52	None	replace
418	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIZE  +  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIZE  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIZE  +  1;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	59	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  paths.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  paths.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  paths.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	43	None	replace
420	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
421	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
422	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	49	None	replace
423	[BUG]  [BUGGY]  charsLoaded  =  getPath().charAt(pathIndices.length  -  1);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getPath().charAt(pathIndices.length  -  1);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getPath().charAt(pathIndices.length  -  1);	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
424	[BUG]  [BUGGY]  charsLoaded  =  getPath().charAt(pathIndices[i].length());  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getPath().charAt(pathIndices[i].length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getPath().charAt(pathIndices[i].length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
425	[BUG]  [BUGGY]  charsLoaded  =  getPath().charAt(Result.length());  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  charsLoaded  =  getPath().charAt(Result.length());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	charsLoaded  =  getPath().charAt(Result.length());	  charsLoaded    =    getPath().charAt(result.length()    -    1);    	non-compiled	[CE]  	55	None	replace
426	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathNames.size()  ]);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathNames.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathNames.size()  ]);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	78	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIGN;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.length;  i  <  STRICT_SIGN;  i++)  {	  for(int    i    =    0,    size    =    paths.length;    i    <    NUMBER_CHAR_SIGN;    i++)    {    	non-compiled	[CE]  	58	None	replace
428	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  newPathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	8	None	replace
429	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  STRICT_SIZE  +  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  STRICT_SIZE  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  STRICT_SIZE  +  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    STRICT_SIZE;    i++)    {    	non-compiled	[CE]  	57	None	replace
430	[BUG]  [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	  result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	32	None	replace
431	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  i  <  stack.length  -  2;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  i  <  stack.length  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length;  i  <  size  &&  i  <  stack.length  -  2;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    -    2;    i++)    {    	non-compiled	[CE]  	4	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.size;  i  <  size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  newPathIndices.size;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  newPathIndices.size;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newPathIndices.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	7	None	replace
433	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  pathIndices.length;  i  <  newStack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  pathIndices.length;  i  <  newStack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    newStack.length;    i++)    {    	non-compiled	[CE]  	23	None	replace
434	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
435	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  stack.size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  0;  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  0;  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    0;    i    <    size;    i++)    {    	non-compiled	[CE]  	15	None	replace
436	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
437	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
438	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
439	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  +  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathIndices[i]).append(']');    }    	non-compiled	[CE]  	50	None	replace
440	[BUG]  [BUGGY]  int  stack  =  getStack(pathIndices,  result);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(pathIndices,  result);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(pathIndices,  result);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
441	[BUG]  [BUGGY]  int  stack  =  getStack(newPathIndices,  pathIndices);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack  =  getStack(newPathIndices,  pathIndices);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack  =  getStack(newPathIndices,  pathIndices);	  int    stack    =    getStack(pathIndices);    	non-compiled	[CE]  	79	None	replace
442	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.size;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.size;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	75	None	replace
443	[BUG]  [BUGGY]  for(int  i  =  0,  array  =  pathIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  array  =  pathIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  array  =  pathIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	46	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  STRICT_SIZE;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stack.length  -  1;  i  <  STRICT_SIZE;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stack.length  -  1;  i  <  STRICT_SIZE;  i++)  {	  for(int    i    =    0,    size    =    stack.length    -    1;    i    <    size;    i++)    {    	non-compiled	[CE]  	2	None	replace
446	[BUG]  [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
447	[BUG]  [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
448	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  i++)  {  result.append('[').append(pathNames[i]).append(']	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    i++)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	54	None	replace
449	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  this.stackIndices.length;  i  <  size;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  this.stackIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  this.stackIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    this.stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	64	None	replace
450	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length;  i  <  NUMBER_CHAR_EXP_SIGN;  i++)  {	  for(int    i    =    0,    size    =    pathNames.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	42	None	replace
451	[BUG]  [BUGGY]  if(result.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(result.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(result.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);  result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
452	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);Result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);Result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack.length()  >  0)  {  charsLoaded  =  getPath().charAt(result.length()  -  1);Result.append('[').append(pathIndices[i]).append(']');  }	  charsLoaded    =    getPath().charAt(result.length()    -    1);    result.append('[').append(pathIndices[i]).append(']');    	non-compiled	[CE]  	51	None	replace
453	[BUG]  [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length],  0);  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length],  0);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int[]  stack  =  pathIndices.toArray(new  String[pathIndices.length],  0);	  int[]    stack    =    pathIndices.toArray(new    String[pathIndices.length]);    	non-compiled	[CE]  	84	None	replace
454	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathNames.length  -  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathNames.length  -  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathNames.length  -  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    NUMBER_CHAR_SIGN;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	28	None	replace
455	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathSize  +  1;  i  <  size  -  1;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathSize  +  1;  i  <  size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathSize  +  1;  i  <  size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathSize;    i    <    size    -    1;    i++)    {    	non-compiled	[CE]  	72	None	replace
456	[BUG]  [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.size();  i  <  stack.length;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  stack  =  pathsIndices.size();  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  stack  =  pathsIndices.size();  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathIndices.size();    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	77	None	replace
457	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  For(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	For(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    stackIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	14	None	replace
458	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  +  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  +  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    pathsIndices.length;    i    <    len;    i++)    {    	non-compiled	[CE]  	25	None	replace
459	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].toString());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  result.append('[').append(pathIndices[i].toString());  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	result.append('[').append(pathIndices[i].toString());	  result.append(pathIndices[i].toString());    	non-compiled	[CE]  	38	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  newStack.size;  i  <  size;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  newStack.size;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  newStack.size;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newStack.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	10	None	replace
461	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  pathsIndices.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  pathsIndices.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	22	None	replace
462	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
463	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  pathIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  pathIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    length    =    stackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	71	None	replace
464	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size();  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size();  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size();  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size  -  1;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size  -  1;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathsIndices.length;  i  <  stack.size  -  1;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
466	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  2;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  2;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.length;  i  <  stack.size  -  2;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
467	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.size;  i++)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  pathIndices.size();  i  <  stack.size;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    stack.size;    i++)    {    	non-compiled	[CE]  	69	None	replace
468	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  stackIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  stackIndices.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
469	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
470	[BUG]  [BUGGY]  for(int  i  =  0,  isStack  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  isStack  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  isStack  =  stack.length;  i  <  size  &&  stack[i]!=  null;  i++)  {	  for(int    i    =    0,    size    =    stack.length;    i    <    size    &&    stack[i]!=    null;    i++)    {    	non-compiled	[CE]  	66	None	replace
471	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  paths.size  -  1;  i  <  size;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  paths.size  -  1;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  paths.size  -  1;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    paths.size;    i    <    size;    i++)    {    	non-compiled	[CE]  	9	None	replace
472	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  array.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  pathsIndices.length;  i  <  array.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  pathsIndices.length;  i  <  array.length;  i++)  {	  for(int    i    =    0,    size    =    pathsIndices.length;    i    <    array.length;    i++)    {    	non-compiled	[CE]  	56	None	replace
473	[BUG]  [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathNames.size()  ]);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathIndices.toArray(new  String[pathNames.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathIndices.toArray(new  String[pathNames.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
474	[BUG]  [BUGGY]  int  stack[]  =  pathsIndices.toArray(new  String[pathIndices.size()  ]);  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  int  stack[]  =  pathsIndices.toArray(new  String[pathIndices.size()  ]);  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	int  stack[]  =  pathsIndices.toArray(new  String[pathIndices.size()  ]);	  int    stack[]    =    pathIndices.toArray(new    String[pathIndices.size()    ]);    	non-compiled	[CE]  	82	None	replace
475	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  stack.length;  i++)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  len  =  stack.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  len  =  stack.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
476	[BUG]  [BUGGY]  for(int  i  =  0,  end  =  stack.length;  i  <  stack.length;  i++)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  end  =  stack.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  end  =  stack.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    stackIndices.length;    i    <    stack.length;    i++)    {    	non-compiled	[CE]  	70	None	replace
477	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  newStackIndices.length;  i  <  size;  i++)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  length  =  newStackIndices.length;  i  <  size;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  length  =  newStackIndices.length;  i  <  size;  i++)  {	  for(int    i    =    0,    size    =    newStackIndices.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	13	None	replace
478	[BUG]  [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack  ==  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']');  }	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
479	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	if(stack!=  null)  {  int[]  stack  =  new  int[pathIndices.length];  for(int  i  =  0;  i  <  stack.length;  ++i)  {  result.append('[').append(pathNames[i]).append(']	  int[]    stack    =    new    int[pathIndices.length];    for(int    i    =    0;    i    <    stack.length;    ++i)    {    result.append('[').append(pathNames[i]).append(']');    }    	non-compiled	[CE]  	53	None	replace
480	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  stack.length;  i++)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  for(int  i  =  0,  size  =  array.length;  i  <  stack.length;  i++)  {  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	for(int  i  =  0,  size  =  array.length;  i  <  stack.length;  i++)  {	  for(int    i    =    0,    size    =    array.length;    i    <    size;    i++)    {    	non-compiled	[CE]  	48	None	replace
481	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]).append(':');  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');      [BUGGY]  StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]).append(':');  [BUGGY]      switch  (stack[i])  {  case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	StringBuffer  result  =  new  StringBuffer().append(pathIndices[i]).append(':');	  StringBuffer    result    =    new    StringBuffer().append(pathIndices[i]).append(']');    	non-compiled	[CE]  	37	None	replace
