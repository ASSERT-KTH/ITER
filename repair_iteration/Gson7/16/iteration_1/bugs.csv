bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  p  =  doPeek();  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  doPeek();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeek();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
2	[BUG]  [BUGGY]  int  p  =  getPeek();  [CE]  [FE]      JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  getPeek();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeek();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
3	[BUG]  [BUGGY]  int  p  =  getPeeked();  [CE]  [FE]        JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  getPeeked();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeeked();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
4	[BUG]  [BUGGY]  int  p  =  getPeekIndex();  [CE]  [FE]          JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  getPeekIndex();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekIndex();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
5	[BUG]  [BUGGY]  int  p  =  startPeek();  [CE]  [FE]            JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  startPeek();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  startPeek();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
6	[BUG]  [BUGGY]  int  p  =  getPeekSize();  [CE]  [FE]              JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  getPeekSize();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSize();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
7	[BUG]  [BUGGY]  int  p  =  getPeekCount();  [CE]  [FE]                JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  getPeekCount();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekCount();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]    [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	  	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
9	[BUG]  [BUGGY]  int  p  =  nextPeek();  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  nextPeek();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  nextPeek();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
10	[BUG]  [BUGGY]  int  p  =  nextInt();  [CE]  [FE]      JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  nextInt();  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  nextInt();	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
11	[BUG]  [BUGGY]  int  p  =  peekedLong;  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  public  int  nextInt()  throws  IOException  {  [BUGGY]  int  p  =  peekedLong;  [BUGGY]  if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException( "Expected  an  int  but  was   "  +  peekedLong  +   "  at  line   "  +  getLineNumber()  +   "  column   "  +  getColumnNumber()  +   "  path   "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  peekedLong;	int  p  =  peeked;  	non-compiled	[CE]  	31	None	replace
