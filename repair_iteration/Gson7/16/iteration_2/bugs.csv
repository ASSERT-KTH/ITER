bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  p  =  getPeekedLong();  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekedLong();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekedLong();	  int    p    =    peekedLong;    	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  int  p  =  this.peekedLong;  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  this.peekedLong;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedLong;	  int    p    =    peekedLong;    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  int  p  =  getPeekLong();  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekLong();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekLong();	  int    p    =    peekedLong;    	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]  int  p  =  getPeekedInt();  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekedInt();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekedInt();	  int    p    =    peekedLong;    	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]  int  p  =  getPeekCount()  +  1;  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekCount()  +  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekCount()  +  1;	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  int  p  =  doPeekCount();  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doPeekCount();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekCount();	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  int  p  =  getPeekCount()  -  1;  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekCount()  -  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekCount()  -  1;	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  int  p  =  getLenientPeekCount();  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getLenientPeekCount();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getLenientPeekCount();	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  int  p  =  getNumber();  [CE]  [FE]                            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getNumber();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNumber();	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  int  p  =  getPeekSize()  +  1;  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekSize()  +  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSize()  +  1;	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  int  p  =  doPeekSize();  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doPeekSize();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekSize();	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  int  p  =  getPeekLength();  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekLength();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekLength();	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  int  p  =  doInt();  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doInt();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doInt();	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  int  p  =  getOffset();  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getOffset();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getOffset();	  int    p    =    getPeek();    	non-compiled	[CE]  	2	None	replace
15	[BUG]  [BUGGY]  int  p  =  getIndex();  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getIndex();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getIndex();	  int    p    =    getPeek();    	non-compiled	[CE]  	2	None	replace
16	[BUG]  [BUGGY]  int  p  =  peekedLong();  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  peekedLong();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  peekedLong();	  int    p    =    doPeek();    	non-compiled	[CE]  	1	None	replace
17	[BUG]  [BUGGY]  int  p  =  peekedInt();  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  peekedInt();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  peekedInt();	  int    p    =    doPeek();    	non-compiled	[CE]  	1	None	replace
18	[BUG]  [BUGGY]  int  p  =  close();  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  close();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  close();	  int    p    =    doPeek();    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  int  p  =  doNumber();  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doNumber();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doNumber();	  int    p    =    nextInt();    	non-compiled	[CE]  	10	None	replace
20	[BUG]  [BUGGY]  int  p  =  startInt();  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  startInt();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  startInt();	  int    p    =    startPeek();    	non-compiled	[CE]  	5	None	replace
21	[BUG]  [BUGGY]  int  p  =  startPeek()  +  1;  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  startPeek()  +  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  startPeek()  +  1;	  int    p    =    startPeek();    	non-compiled	[CE]  	5	None	replace
22	[BUG]  [BUGGY]  int  p  =  beginPeek();  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  beginPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  beginPeek();	  int    p    =    startPeek();    	non-compiled	[CE]  	5	None	replace
23	[BUG]  [BUGGY]  int  p  =  getNegativePeek();  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getNegativePeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNegativePeek();	  int    p    =    getPeeked();    	non-compiled	[CE]  	3	None	replace
24	[BUG]  [BUGGY]  int  p  =  getCurrentIndex();  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getCurrentIndex();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getCurrentIndex();	  int    p    =    getPeeked();    	non-compiled	[CE]  	3	None	replace
25	[BUG]  [BUGGY]  int  peekedLong  =  getPeek();  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  peekedLong  =  getPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeek();	      	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  Integer  p  =  getPeek();  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  Integer  p  =  getPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getPeek();	      	non-compiled	[CE]  	8	None	replace
27	[BUG]  [BUGGY]  Integer  p  =  doPeek();  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  Integer  p  =  doPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  doPeek();	      	non-compiled	[CE]  	8	None	replace
28	[BUG]  [BUGGY]  int  p  =  getPeekIndex()  +  1;  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekIndex()  +  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekIndex()  +  1;	  int    p    =    getPeekIndex();    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  int  p  =  getPeekStartIndex();  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekStartIndex();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartIndex();	  int    p    =    getPeekIndex();    	non-compiled	[CE]  	4	None	replace
30	[BUG]  [BUGGY]  int  p  =  doPeekIndex();  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doPeekIndex();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekIndex();	  int    p    =    getPeekIndex();    	non-compiled	[CE]  	4	None	replace
31	[BUG]  [BUGGY]  int  p  =  getPeekOffset();  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekOffset();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekOffset();	  int    p    =    getPeekIndex();    	non-compiled	[CE]  	4	None	replace
32	[BUG]  [BUGGY]  int  p  =  getPeekStart();  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekStart();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStart();	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
33	[BUG]  [BUGGY]  int  p  =  getPeekNumber();  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekNumber();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekNumber();	  int    p    =    getPeekSize();    	non-compiled	[CE]  	6	None	replace
34	[BUG]  [BUGGY]  int  p  =  getColumnNumber();  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getColumnNumber();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getColumnNumber();	  int    p    =    getPeekCount();    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  int  p  =  doFloat();  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doFloat();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doFloat();	  int    p    =    doPeek();    	non-compiled	[CE]  	1	None	replace
36	[BUG]  [BUGGY]  int  p  =  stack.size();  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  stack.size();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.size();	      	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  int  p  =  endPeek();  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  endPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  endPeek();	  int    p    =    startPeek();    	non-compiled	[CE]  	5	None	replace
38	[BUG]  [BUGGY]  int  p  =  nextDouble();  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  nextDouble();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  nextDouble();	  int    p    =    nextInt();    	non-compiled	[CE]  	10	None	replace
39	[BUG]  [BUGGY]  int  p  =  getPeekEdge();  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekEdge();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekEdge();	  int    p    =    getPeeked();    	non-compiled	[CE]  	3	None	replace
40	[BUG]  [BUGGY]  float  p  =  getPeeked();  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  float  p  =  getPeeked();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	float  p  =  getPeeked();	  int    p    =    getPeeked();    	non-compiled	[CE]  	3	None	replace
41	[BUG]  [BUGGY]  int  p  =  getPeekSingle();  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekSingle();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSingle();	  int    p    =    getPeeked();    	non-compiled	[CE]  	3	None	replace
42	[BUG]  [BUGGY]  int  p  =  getPeekIndex()  -  1;  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getPeekIndex()  -  1;  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekIndex()  -  1;	  int    p    =    getPeekIndex();    	non-compiled	[CE]  	4	None	replace
43	[BUG]  [BUGGY]  int  p  =  getInt();  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  getInt();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getInt();	  int    p    =    getPeek();    	non-compiled	[CE]  	2	None	replace
44	[BUG]  [BUGGY]  int  p  =  exitPeek();  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  exitPeek();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  exitPeek();	  int    p    =    startPeek();    	non-compiled	[CE]  	5	None	replace
45	[BUG]  [BUGGY]  int  p  =  doFloatingPoint();  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  int  nextInt()  throws  IOException  {    [BUGGY]  int  p  =  doFloatingPoint();  [BUGGY]    if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(   "Expected  an  int  but  was     "  +  peekedLong  +     "  at  line     "  +  getLineNumber()  +     "  column     "  +  getColumnNumber()  +     "  path     "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doFloatingPoint();	  int    p    =    doPeek();    	non-compiled	[CE]  	1	None	replace
