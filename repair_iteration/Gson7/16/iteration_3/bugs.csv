bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  p  =  stack.size()  -  1;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.size()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.size()  -  1;	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
2	[BUG]  [BUGGY]  int  p  =  stack.size()  +  1;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.size()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.size()  +  1;	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
3	[BUG]  [BUGGY]  int  p  =  stack.size()  -  2;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.size()  -  2;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.size()  -  2;	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
4	[BUG]  [BUGGY]  int  p  =  stack.size()  -  4;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.size()  -  4;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.size()  -  4;	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
5	[BUG]  [BUGGY]  int  p  =  stack.nextInt();  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.nextInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.nextInt();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
6	[BUG]  [BUGGY]  int  p  =  this.stack.size();  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.stack.size();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.stack.size();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
7	[BUG]  [BUGGY]  int  p  =  doLong();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doLong();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doLong();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
8	[BUG]  [BUGGY]  int  p  =  doSingleFloatingPoint();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doSingleFloatingPoint();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doSingleFloatingPoint();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
9	[BUG]  [BUGGY]  int  p  =  doNegativePoint();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doNegativePoint();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doNegativePoint();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
10	[BUG]  [BUGGY]  int  p  =  doLeft();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doLeft();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doLeft();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
11	[BUG]  [BUGGY]  int  p  =  doShort();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doShort();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doShort();	  int    p    =    doInt();    	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  float  p  =  doFloat();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  float  p  =  doFloat();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	float  p  =  doFloat();	  int    p    =    doFloat();    	non-compiled	[CE]  	35	None	replace
13	[BUG]  [BUGGY]  int  p  =  doPeekOffset();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekOffset();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekOffset();	  int    p    =    getPeekOffset();    	non-compiled	[CE]  	31	None	replace
14	[BUG]  [BUGGY]  int  p  =  getPeekOffset()  +  1;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekOffset()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekOffset()  +  1;	  int    p    =    getPeekOffset();    	non-compiled	[CE]  	31	None	replace
15	[BUG]  [BUGGY]  int  p  =  beginInt();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  beginInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  beginInt();	  int    p    =    beginPeek();    	non-compiled	[CE]  	22	None	replace
16	[BUG]  [BUGGY]  int  p  =  closePeek();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  closePeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  closePeek();	  int    p    =    close();    	non-compiled	[CE]  	18	None	replace
17	[BUG]  [BUGGY]  int  p  =  doFull();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doFull();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doFull();	  int    p    =    close();    	non-compiled	[CE]  	18	None	replace
18	[BUG]  [BUGGY]  int  p  =  getPeekNumber()  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekNumber()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekNumber()  +  1;	  int    p    =    getPeekNumber();    	non-compiled	[CE]  	33	None	replace
19	[BUG]  [BUGGY]  int  p  =  doPeekNumber();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekNumber();	  int    p    =    getPeekNumber();    	non-compiled	[CE]  	33	None	replace
20	[BUG]  [BUGGY]  int  p  =  doPeekSingle();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekSingle();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekSingle();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
21	[BUG]  [BUGGY]  int  p  =  getSingle();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getSingle();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getSingle();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
22	[BUG]  [BUGGY]  int  p  =  getPeekSingle()  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekSingle()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSingle()  +  1;	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
23	[BUG]  [BUGGY]  int  p  =  getSinglePeek();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getSinglePeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getSinglePeek();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
24	[BUG]  [BUGGY]  int  p  =  doPeekEdge();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekEdge();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekEdge();	  int    p    =    getPeekEdge();    	non-compiled	[CE]  	39	None	replace
25	[BUG]  [BUGGY]  int  p  =  getNumber()  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNumber()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNumber()  +  1;	  int    p    =    getPeekCount()    +    1;    	non-compiled	[CE]  	5	None	replace
26	[BUG]  [BUGGY]  int  p  =  getSecondCount();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getSecondCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getSecondCount();	  int    p    =    getPeekCount()    +    1;    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  int  p  =  exitInt();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  exitInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  exitInt();	  int    p    =    exitPeek();    	non-compiled	[CE]  	44	None	replace
28	[BUG]  [BUGGY]  int  p  =  getLenientPeekCount()  +  1;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getLenientPeekCount()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getLenientPeekCount()  +  1;	  int    p    =    getLenientPeekCount();    	non-compiled	[CE]  	8	None	replace
29	[BUG]  [BUGGY]  int  p  =  getLenientPeekCount()  -  1;  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getLenientPeekCount()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getLenientPeekCount()  -  1;	  int    p    =    getLenientPeekCount();    	non-compiled	[CE]  	8	None	replace
30	[BUG]  [BUGGY]  int  p  =  getNegativePeekCount();  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNegativePeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNegativePeekCount();	  int    p    =    getLenientPeekCount();    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  int  p  =  getIntValue();  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getIntValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getIntValue();	  int    p    =    getLenientPeekCount();    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  int  p  =  getOffset()  +  1;  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getOffset()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getOffset()  +  1;	  int    p    =    getOffset();    	non-compiled	[CE]  	14	None	replace
33	[BUG]  [BUGGY]  int  p  =  getOffsetToInt();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getOffsetToInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getOffsetToInt();	  int    p    =    getOffset();    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  int  p  =  getOffsetToPeek();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getOffsetToPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getOffsetToPeek();	  int    p    =    getOffset();    	non-compiled	[CE]  	14	None	replace
35	[BUG]  [BUGGY]  int  p  =  getOffsetInt();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getOffsetInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getOffsetInt();	  int    p    =    getOffset();    	non-compiled	[CE]  	14	None	replace
36	[BUG]  [BUGGY]  Integer  p  =  getIntValue();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getIntValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getIntValue();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
37	[BUG]  [BUGGY]  Integer  p  =  getInt();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getInt();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
38	[BUG]  [BUGGY]  Integer  p  =  getNumber();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getNumber();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
39	[BUG]  [BUGGY]  Integer  p  =  doInt();  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  doInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  doInt();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
40	[BUG]  [BUGGY]  int  p  =  getPeekLength()  +  1;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekLength()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekLength()  +  1;	  int    p    =    getPeekLength();    	non-compiled	[CE]  	12	None	replace
41	[BUG]  [BUGGY]  int  p  =  getLength();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getLength();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getLength();	  int    p    =    getPeekLength();    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  int  p  =  getPosition();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPosition();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPosition();	  int    p    =    getNumber();    	non-compiled	[CE]  	9	None	replace
43	[BUG]  [BUGGY]  int  p  =  getPath();  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPath();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPath();	  int    p    =    getNumber();    	non-compiled	[CE]  	9	None	replace
44	[BUG]  [BUGGY]  int  p  =  getPeekStartIndex()  +  1;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStartIndex()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartIndex()  +  1;	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
45	[BUG]  [BUGGY]  int  p  =  getPeekEndIndex();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekEndIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekEndIndex();	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
46	[BUG]  [BUGGY]  int  p  =  doPeekStartIndex();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekStartIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekStartIndex();	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
47	[BUG]  [BUGGY]  int  p  =  getPeekStartIndex()  -  1;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStartIndex()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartIndex()  -  1;	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
48	[BUG]  [BUGGY]  int  p  =  getRowNumber();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getRowNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getRowNumber();	  int    p    =    getColumnNumber();    	non-compiled	[CE]  	34	None	replace
49	[BUG]  [BUGGY]  int  p  =  getRangeNumber();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getRangeNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getRangeNumber();	  int    p    =    getColumnNumber();    	non-compiled	[CE]  	34	None	replace
50	[BUG]  [BUGGY]  int  p  =  getColumnNumber()  +  1;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getColumnNumber()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getColumnNumber()  +  1;	  int    p    =    getColumnNumber();    	non-compiled	[CE]  	34	None	replace
51	[BUG]  [BUGGY]  int  p  =  doPeekStart();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekStart();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekStart();	  int    p    =    getPeekStart();    	non-compiled	[CE]  	32	None	replace
52	[BUG]  [BUGGY]  int  p  =  getPeekStart()  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStart()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStart()  +  1;	  int    p    =    getPeekStart();    	non-compiled	[CE]  	32	None	replace
53	[BUG]  [BUGGY]  double  p  =  getPeeked();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  double  p  =  getPeeked();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	double  p  =  getPeeked();	  float    p    =    getPeeked();    	non-compiled	[CE]  	40	None	replace
54	[BUG]  [BUGGY]  float  p  =  doPeek();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  float  p  =  doPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	float  p  =  doPeek();	  float    p    =    getPeeked();    	non-compiled	[CE]  	40	None	replace
55	[BUG]  [BUGGY]  float  p  =  getPeek();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  float  p  =  getPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	float  p  =  getPeek();	  float    p    =    getPeeked();    	non-compiled	[CE]  	40	None	replace
56	[BUG]  [BUGGY]  long  p  =  getPeeked();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  long  p  =  getPeeked();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	long  p  =  getPeeked();	  float    p    =    getPeeked();    	non-compiled	[CE]  	40	None	replace
57	[BUG]  [BUGGY]  int  p  =  getSize();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getSize();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getSize();	  int    p    =    getPeekSize()    +    1;    	non-compiled	[CE]  	10	None	replace
58	[BUG]  [BUGGY]  int  p  =  getCurrentSize();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getCurrentSize();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getCurrentSize();	  int    p    =    getPeekSize()    +    1;    	non-compiled	[CE]  	10	None	replace
59	[BUG]  [BUGGY]  int  p  =  getNegativeInt();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNegativeInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNegativeInt();	  int    p    =    getNegativePeek();    	non-compiled	[CE]  	23	None	replace
60	[BUG]  [BUGGY]  int  p  =  getNegativePeriod();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNegativePeriod();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNegativePeriod();	  int    p    =    getNegativePeek();    	non-compiled	[CE]  	23	None	replace
61	[BUG]  [BUGGY]  int  p  =  getLong();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getLong();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getLong();	  int    p    =    getInt();    	non-compiled	[CE]  	43	None	replace
62	[BUG]  [BUGGY]  int  p  =  getNumber()  -  1;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNumber()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNumber()  -  1;	  int    p    =    getPeekIndex()    -    1;    	non-compiled	[CE]  	42	None	replace
63	[BUG]  [BUGGY]  int  p  =  getPeekOffset()  -  1;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekOffset()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekOffset()  -  1;	  int    p    =    getPeekIndex()    -    1;    	non-compiled	[CE]  	42	None	replace
64	[BUG]  [BUGGY]  int  p  =  doPeekLong();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doPeekLong();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doPeekLong();	  int    p    =    getPeekLong();    	non-compiled	[CE]  	3	None	replace
65	[BUG]  [BUGGY]  int  p  =  this.peekedLong  +  1;  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedLong  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedLong  +  1;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
66	[BUG]  [BUGGY]  int  p  =  this.peekedNumber;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedNumber;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedNumber;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
67	[BUG]  [BUGGY]  int  p  =  this.peekedInt;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedInt;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedInt;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
68	[BUG]  [BUGGY]  int  p  =  this.peekedLong  +  PEEKED_SINGLE_QUOTED;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedLong  +  PEEKED_SINGLE_QUOTED;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedLong  +  PEEKED_SINGLE_QUOTED;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
69	[BUG]  [BUGGY]  int  p  =  this.peekedLong  +  PEEKED_NULL;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedLong  +  PEEKED_NULL;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedLong  +  PEEKED_NULL;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
70	[BUG]  [BUGGY]  int  p  =  getCurrentIndex()  +  1;  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getCurrentIndex()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getCurrentIndex()  +  1;	  int    p    =    getCurrentIndex();    	non-compiled	[CE]  	24	None	replace
71	[BUG]  [BUGGY]  int  p  =  getCurrentIndex()  -  1;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getCurrentIndex()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getCurrentIndex()  -  1;	  int    p    =    getCurrentIndex();    	non-compiled	[CE]  	24	None	replace
72	[BUG]  [BUGGY]  int  p  =  getIndex()  +  1;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getIndex()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getIndex()  +  1;	  int    p    =    getIndex();    	non-compiled	[CE]  	15	None	replace
73	[BUG]  [BUGGY]  int  p  =  getEndIndex();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getEndIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getEndIndex();	  int    p    =    getIndex();    	non-compiled	[CE]  	15	None	replace
74	[BUG]  [BUGGY]  int  p  =  getIndex()  -  1;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getIndex()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getIndex()  -  1;	  int    p    =    getIndex();    	non-compiled	[CE]  	15	None	replace
75	[BUG]  [BUGGY]  int  p  =  doSecond();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doSecond();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doSecond();	  int    p    =    startInt();    	non-compiled	[CE]  	20	None	replace
76	[BUG]  [BUGGY]  Integer  p  =  peekedInt();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  peekedInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  peekedInt();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
77	[BUG]  [BUGGY]  Integer  p  =  peekedLong();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  peekedLong();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  peekedLong();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
78	[BUG]  [BUGGY]  Integer  p  =  startPeek();  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  startPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  startPeek();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
79	[BUG]  [BUGGY]  Integer  p  =  close();  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  close();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  close();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
80	[BUG]  [BUGGY]  Integer  p  =  nextInt();  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  nextInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  nextInt();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
81	[BUG]  [BUGGY]  int  p  =  getNumberIndex();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNumberIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNumberIndex();	  int    p    =    getPeekIndex()    +    1;    	non-compiled	[CE]  	28	None	replace
82	[BUG]  [BUGGY]  int  p  =  getSecondIndex();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getSecondIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getSecondIndex();	  int    p    =    getPeekIndex()    +    1;    	non-compiled	[CE]  	28	None	replace
83	[BUG]  [BUGGY]  int  peekedLong  =  getPeekOffset();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekOffset();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekOffset();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
84	[BUG]  [BUGGY]  int  peekedLong  =  getPeekCount();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekCount();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
85	[BUG]  [BUGGY]  int  peekedLong  =  getPeek()  +  1;  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeek()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeek()  +  1;	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
86	[BUG]  [BUGGY]  int  peekedLong  =  getPeekNumber();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekNumber();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
87	[BUG]  [BUGGY]  int  peekedLong  =  getPeek()  -  1;  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeek()  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeek()  -  1;	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
88	[BUG]  [BUGGY]  int  p  =  doFullPeek();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doFullPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doFullPeek();	  int    p    =    close();    	non-compiled	[CE]  	18	None	replace
89	[BUG]  [BUGGY]  int  p  =  doLeadingInt();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doLeadingInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doLeadingInt();	  int    p    =    doInt();    	non-compiled	[CE]  	13	None	replace
90	[BUG]  [BUGGY]  int  p  =  doEmpty();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doEmpty();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doEmpty();	  int    p    =    doInt();    	non-compiled	[CE]  	13	None	replace
91	[BUG]  [BUGGY]  int  p  =  doOuter();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doOuter();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doOuter();	  int    p    =    doInt();    	non-compiled	[CE]  	13	None	replace
92	[BUG]  [BUGGY]  Integer  p  =  doFloat();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  doFloat();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  doFloat();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
93	[BUG]  [BUGGY]  int  p  =  startPeekIndex();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  startPeekIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  startPeekIndex();	  int    p    =    doPeekIndex();    	non-compiled	[CE]  	30	None	replace
94	[BUG]  [BUGGY]  int  p  =  getBounds().length  -  1;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getBounds().length  -  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getBounds().length  -  1;	  int    p    =    getPeekCount()    -    1;    	non-compiled	[CE]  	7	None	replace
95	[BUG]  [BUGGY]  int  p  =  stack.getIntValue();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.getIntValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.getIntValue();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
96	[BUG]  [BUGGY]  int  p  =  stack.getPeekCount();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.getPeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.getPeekCount();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
97	[BUG]  [BUGGY]  int  p  =  beginPeek()  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  beginPeek()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  beginPeek()  +  1;	  int    p    =    beginPeek();    	non-compiled	[CE]  	22	None	replace
98	[BUG]  [BUGGY]  int  p  =  getPeekNumber().intValue();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekNumber().intValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekNumber().intValue();	  int    p    =    getPeekNumber();    	non-compiled	[CE]  	33	None	replace
99	[BUG]  [BUGGY]  int  p  =  closePeekCount();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  closePeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  closePeekCount();	  int    p    =    doPeekCount();    	non-compiled	[CE]  	6	None	replace
100	[BUG]  [BUGGY]  int  p  =  startPeekCount();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  startPeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  startPeekCount();	  int    p    =    doPeekCount();    	non-compiled	[CE]  	6	None	replace
101	[BUG]  [BUGGY]  int  p  =  getPeekStartEdge();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStartEdge();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartEdge();	  int    p    =    getPeekEdge();    	non-compiled	[CE]  	39	None	replace
102	[BUG]  [BUGGY]  int  p  =  getIndent();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getIndent();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getIndent();	  int    p    =    getPeekEdge();    	non-compiled	[CE]  	39	None	replace
103	[BUG]  [BUGGY]  int  p  =  exitBound();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  exitBound();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  exitBound();	  int    p    =    exitPeek();    	non-compiled	[CE]  	44	None	replace
104	[BUG]  [BUGGY]  Int  p  =  startPeek();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Int  p  =  startPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Int  p  =  startPeek();	  int    p    =    startPeek()    +    1;    	non-compiled	[CE]  	21	None	replace
105	[BUG]  [BUGGY]  int  p  =  doDouble();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doDouble();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doDouble();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
106	[BUG]  [BUGGY]  int  p  =  doEmptyPoint();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doEmptyPoint();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doEmptyPoint();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
107	[BUG]  [BUGGY]  int  peekedLong  =  getPeekIndex();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekIndex();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
108	[BUG]  [BUGGY]  int  peekedLong  =  getPeekStart();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekStart();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekStart();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
109	[BUG]  [BUGGY]  Integer  p  =  getPeek()  +  1;  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getPeek()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getPeek()  +  1;	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
110	[BUG]  [BUGGY]  Integer  p  =  getPeekCount();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getPeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getPeekCount();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
111	[BUG]  [BUGGY]  Integer  p  =  getPeekIndex();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  getPeekIndex();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  getPeekIndex();	  Integer    p    =    getPeek();    	non-compiled	[CE]  	26	None	replace
112	[BUG]  [BUGGY]  int  p  =  getEndPeekCount();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getEndPeekCount();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getEndPeekCount();	  int    p    =    getLenientPeekCount();    	non-compiled	[CE]  	8	None	replace
113	[BUG]  [BUGGY]  int  p  =  getPeekSize().intValue();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekSize().intValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSize().intValue();	  int    p    =    getPeekSize()    +    1;    	non-compiled	[CE]  	10	None	replace
114	[BUG]  [BUGGY]  int  p  =  getNumberSize();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getNumberSize();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getNumberSize();	  int    p    =    getPeekSize()    +    1;    	non-compiled	[CE]  	10	None	replace
115	[BUG]  [BUGGY]  int  p  =  getPeekInt();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekInt();	  int    p    =    getPeekLong();    	non-compiled	[CE]  	3	None	replace
116	[BUG]  [BUGGY]  int  p  =  nextDouble()  +  1;  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  nextDouble()  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  nextDouble()  +  1;	  int    p    =    nextDouble();    	non-compiled	[CE]  	38	None	replace
117	[BUG]  [BUGGY]  int  p  =  nextFloat();  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  nextFloat();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  nextFloat();	  int    p    =    nextDouble();    	non-compiled	[CE]  	38	None	replace
118	[BUG]  [BUGGY]  float  p  =  getFloat();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  float  p  =  getFloat();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	float  p  =  getFloat();	  float    p    =    getPeeked();    	non-compiled	[CE]  	40	None	replace
119	[BUG]  [BUGGY]  int  p  =  getPeekOffset()  +  4;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekOffset()  +  4;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekOffset()  +  4;	  int    p    =    getPeekOffset();    	non-compiled	[CE]  	31	None	replace
120	[BUG]  [BUGGY]  int  p  =  doHorizontal();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doHorizontal();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doHorizontal();	  int    p    =    doFloat();    	non-compiled	[CE]  	35	None	replace
121	[BUG]  [BUGGY]  int  p  =  doHorizontalPeek();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doHorizontalPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doHorizontalPeek();	  int    p    =    doFloat();    	non-compiled	[CE]  	35	None	replace
122	[BUG]  [BUGGY]  int  p  =  getPeekStartIndex()  +  4;  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStartIndex()  +  4;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartIndex()  +  4;	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
123	[BUG]  [BUGGY]  int  p  =  getPeekStartIndex()  +  3;  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStartIndex()  +  3;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStartIndex()  +  3;	  int    p    =    getPeekStartIndex();    	non-compiled	[CE]  	29	None	replace
124	[BUG]  [BUGGY]  int  p  =(int)Math.floor(peekedLong);  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =(int)Math.floor(peekedLong);  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =(int)Math.floor(peekedLong);	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
125	[BUG]  [BUGGY]  int  p  =  this.peekedLong  +  4;  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  this.peekedLong  +  4;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  this.peekedLong  +  4;	  int    p    =    this.peekedLong;    	non-compiled	[CE]  	2	None	replace
126	[BUG]  [BUGGY]  int  p  =  getBounds().length  +  1;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getBounds().length  +  1;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getBounds().length  +  1;	  int    p    =    getPeekCount()    +    1;    	non-compiled	[CE]  	5	None	replace
127	[BUG]  [BUGGY]  int  p  =  doEmptyNumber();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doEmptyNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doEmptyNumber();	  int    p    =    doNumber();    	non-compiled	[CE]  	19	None	replace
128	[BUG]  [BUGGY]  int  p  =  getPeekEnd();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekEnd();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekEnd();	  int    p    =    getPeekStart();    	non-compiled	[CE]  	32	None	replace
129	[BUG]  [BUGGY]  int  p  =  getPeekStart()  +  4;  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStart()  +  4;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStart()  +  4;	  int    p    =    getPeekStart();    	non-compiled	[CE]  	32	None	replace
130	[BUG]  [BUGGY]  int  p  =  getPeekStart()  +  10;  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekStart()  +  10;  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekStart()  +  10;	  int    p    =    getPeekStart();    	non-compiled	[CE]  	32	None	replace
131	[BUG]  [BUGGY]  int  p  =  getPeekIndex().intValue();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekIndex().intValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekIndex().intValue();	  int    p    =    getPeekIndex()    +    1;    	non-compiled	[CE]  	28	None	replace
132	[BUG]  [BUGGY]  int  peekedLong  =  getPeekSize();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekSize();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekSize();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
133	[BUG]  [BUGGY]  int  peekedLong  =  getPeekLine();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  peekedLong  =  getPeekLine();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  peekedLong  =  getPeekLine();	  int    peekedLong    =    getPeek();    	non-compiled	[CE]  	25	None	replace
134	[BUG]  [BUGGY]  int  p  =  peekedLong.nextInt();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  peekedLong.nextInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  peekedLong.nextInt();	  int    p    =    doPeekIndex();    	non-compiled	[CE]  	30	None	replace
135	[BUG]  [BUGGY]  int  p  =  stack.getLength();  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.getLength();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.getLength();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
136	[BUG]  [BUGGY]  int  p  =  stack.getPeek();  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.getPeek();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.getPeek();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
137	[BUG]  [BUGGY]  int  p  =  stack.next();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  stack.next();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  stack.next();	  int    p    =    stack.size();    	non-compiled	[CE]  	36	None	replace
138	[BUG]  [BUGGY]  int  p  =  doSingleNode();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doSingleNode();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doSingleNode();	  int    p    =    doFloatingPoint();    	non-compiled	[CE]  	45	None	replace
139	[BUG]  [BUGGY]  int  p  =  getPeekEDInt();  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekEDInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekEDInt();	  int    p    =    getPeekedInt();    	non-compiled	[CE]  	4	None	replace
140	[BUG]  [BUGGY]  int  p  =  getPeekSingleNumber();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekSingleNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSingleNumber();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
141	[BUG]  [BUGGY]  int  p  =  getPeekSingleChar();  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekSingleChar();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSingleChar();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
142	[BUG]  [BUGGY]  int  p  =  getPeekSingleValue();  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekSingleValue();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekSingleValue();	  int    p    =    getPeekSingle();    	non-compiled	[CE]  	41	None	replace
143	[BUG]  [BUGGY]  Integer  p  =  peekedLong.nextInt();  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  peekedLong.nextInt();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  peekedLong.nextInt();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
144	[BUG]  [BUGGY]  Integer  p  =  peekedNumber();  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  Integer  p  =  peekedNumber();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	Integer  p  =  peekedNumber();	  Integer    p    =    doPeek();    	non-compiled	[CE]  	27	None	replace
145	[BUG]  [BUGGY]  int  p  =  exitLong();  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  exitLong();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  exitLong();	  int    p    =    exitPeek();    	non-compiled	[CE]  	44	None	replace
146	[BUG]  [BUGGY]  int  p  =  doOffset();  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  doOffset();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  doOffset();	  int    p    =    getOffset();    	non-compiled	[CE]  	14	None	replace
147	[BUG]  [BUGGY]  int  p  =  getPeekED();  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      public  int  nextInt()  throws  IOException  {      [BUGGY]  int  p  =  getPeekED();  [BUGGY]      if  (p  ==  PEEKED_NONE)  {  p  =  doPeek();  }  int  result;  if  (p  ==  PEEKED_LONG)  {  result  =  (int)  peekedLong;  if  (peekedLong  !=  result)  {  //  Make  sure  no  precision  was  lost  casting  to  'int'.  throw  new  NumberFormatException(     "Expected  an  int  but  was       "  +  peekedLong  +       "  at  line       "  +  getLineNumber()  +       "  column       "  +  getColumnNumber()  +       "  path       "  +  getPath());  [CLASS]  JsonReader  1  [METHOD]  nextInt  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	int  p  =  getPeekED();	  int    p    =    getPeekedLong();    	non-compiled	[CE]  	1	None	replace
