bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalStateException("Expected an int but was " + peek() + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [FE] JsonSyntaxException [CONTEXT] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [BUGGY] throw new IllegalStateException("Expected an int but was " + peek()   + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [BUGGY] + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.8164965809277261	1193	1194	3	replace	
2	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [BUGGY] [BUGGY] throw new IllegalStateException("Expected an int but was " + peek()   + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.8164965809277261	1193	1194	3	add	
3	[BUG] [BUGGY] throw new IllegalStateException("Expected a long but was " + peek() + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [FE] JsonSyntaxException [CONTEXT] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [BUGGY] throw new IllegalStateException("Expected a long but was " + peek()   + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [BUGGY] + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5773502691896258	965	966	3	replace	
4	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [BUGGY] [BUGGY] throw new IllegalStateException("Expected a long but was " + peek()   + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5773502691896258	965	966	3	add	
5	[BUG] [BUGGY] pos--; // Don't consume the first character in an unquoted string. if (isLiteral((char) c)) { [FE] JsonSyntaxException [CONTEXT] checkLenient(); return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); [BUGGY] pos--; // Don't consume the first character in an unquoted string.  if (isLiteral((char) c)) { [BUGGY] if (isLiteral((char) c)) { return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	513	514	3	replace	
6	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] checkLenient(); return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); [BUGGY] [BUGGY] pos--; // Don't consume the first character in an unquoted string.  if (isLiteral((char) c)) { if (isLiteral((char) c)) { return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	513	514	3	add	
7	[BUG] [BUGGY] if (isLiteral((char) c)) { [FE] JsonSyntaxException [CONTEXT] return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); pos--; // Don't consume the first character in an unquoted string. [BUGGY] if (isLiteral((char) c)) { [BUGGY] return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); switch (c) { [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	514	514	3	replace	
8	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); pos--; // Don't consume the first character in an unquoted string. [BUGGY] [BUGGY] if (isLiteral((char) c)) { return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); switch (c) { [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	514	514	3	add	
9	[BUG] [BUGGY] return peeked = PEEKED_UNQUOTED_NAME; [FE] JsonSyntaxException [CONTEXT] case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); pos--; // Don't consume the first character in an unquoted string. if (isLiteral((char) c)) { [BUGGY] return peeked = PEEKED_UNQUOTED_NAME; [BUGGY] } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); switch (c) { case ':': [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	515	515	3	replace	
10	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: checkLenient(); pos--; // Don't consume the first character in an unquoted string. if (isLiteral((char) c)) { [BUGGY] [BUGGY] return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  int c = nextNonWhitespace(true); switch (c) { case ':': [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4364357804719848	515	515	3	add	
11	[BUG] [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { [FE] JsonSyntaxException [CONTEXT] if (p == PEEKED_LONG) { peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return peekedLong; } if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { [BUGGY] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	
12	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (p == PEEKED_LONG) { peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return peekedLong; } if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; [BUGGY] [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	add	
13	[BUG] [BUGGY] checkLenient(); [FE] JsonSyntaxException [CONTEXT] case '\'': checkLenient(); return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: [BUGGY] checkLenient(); [BUGGY] pos--; // Don't consume the first character in an unquoted string. if (isLiteral((char) c)) { return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3849001794597505	512	512	3	replace	
14	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] case '\'': checkLenient(); return peeked = PEEKED_SINGLE_QUOTED_NAME; case '}': if (peekStack != JsonScope.NONEMPTY_OBJECT) { return peeked = PEEKED_END_OBJECT; } else { throw syntaxError("Expected name"); } default: [BUGGY] [BUGGY] checkLenient(); pos--; // Don't consume the first character in an unquoted string. if (isLiteral((char) c)) { return peeked = PEEKED_UNQUOTED_NAME; } else { throw syntaxError("Expected name"); } } } else if (peekStack == JsonScope.DANGLING_NAME) { stack[stackSize - 1] = JsonScope.NONEMPTY_OBJECT;  [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3849001794597505	512	512	3	add	
15	[BUG] [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { [FE] JsonSyntaxException [CONTEXT] + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { [BUGGY] peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	1182	1182	3	replace	
16	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; [BUGGY] [BUGGY] } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) {  } } else { [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	1182	1182	3	add	
17	[BUG] [BUGGY] if (p == PEEKED_NUMBER) { [FE] JsonSyntaxException [CONTEXT] result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } [BUGGY] if (p == PEEKED_NUMBER) { [BUGGY] peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) { [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3333333333333333	1179	1179	3	replace	
18	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } [BUGGY] [BUGGY] if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { result = Integer.parseInt(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) { [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3333333333333333	1179	1179	3	add	
19	[BUG] [BUGGY] return true; [FE] JsonSyntaxException [CONTEXT] case ']': case ':': case ',': case ' ': case '\t': case '\f': case '\r': case '\n': return false; default: [BUGGY] return true; [BUGGY] } } [CLASS] JsonReader 1 [METHOD] isLiteral [RETURN_TYPE] boolean  char c [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3110855084191276	769	769	3	replace	
20	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] case ']': case ':': case ',': case ' ': case '\t': case '\f': case '\r': case '\n': return false; default: [BUGGY] [BUGGY] return true; } } [CLASS] JsonReader 1 [METHOD] isLiteral [RETURN_TYPE] boolean  char c [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3110855084191276	769	769	3	add	
21	[BUG] [BUGGY] return JsonToken.STRING; [FE] JsonSyntaxException [CONTEXT] return JsonToken.NAME; case PEEKED_TRUE: case PEEKED_FALSE: return JsonToken.BOOLEAN; case PEEKED_NULL: return JsonToken.NULL; case PEEKED_SINGLE_QUOTED: case PEEKED_DOUBLE_QUOTED: case PEEKED_UNQUOTED: case PEEKED_BUFFERED: [BUGGY] return JsonToken.STRING; [BUGGY] case PEEKED_LONG: case PEEKED_NUMBER: return JsonToken.NUMBER; case PEEKED_EOF: return JsonToken.END_DOCUMENT; default: throw new AssertionError(); } } [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.29277002188455997	454	454	3	replace	
22	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] return JsonToken.NAME; case PEEKED_TRUE: case PEEKED_FALSE: return JsonToken.BOOLEAN; case PEEKED_NULL: return JsonToken.NULL; case PEEKED_SINGLE_QUOTED: case PEEKED_DOUBLE_QUOTED: case PEEKED_UNQUOTED: case PEEKED_BUFFERED: [BUGGY] [BUGGY] return JsonToken.STRING; case PEEKED_LONG: case PEEKED_NUMBER: return JsonToken.NUMBER; case PEEKED_EOF: return JsonToken.END_DOCUMENT; default: throw new AssertionError(); } } [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.29277002188455997	454	454	3	add	
23	[BUG] [BUGGY] result.append('.'); [FE] JsonSyntaxException [CONTEXT] for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: [BUGGY] result.append('.'); [BUGGY] if (pathNames[i] != null) { result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1480	1480	3	replace	
24	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: [BUGGY] [BUGGY] result.append('.'); if (pathNames[i] != null) { result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1480	1480	3	add	
25	[BUG] [BUGGY] if (pathNames[i] != null) { [FE] JsonSyntaxException [CONTEXT] switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); [BUGGY] if (pathNames[i] != null) { [BUGGY] result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	replace	
26	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); [BUGGY] [BUGGY] if (pathNames[i] != null) { result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26490647141300877	1481	1481	3	add	
27	[BUG] [BUGGY] } [FE] JsonSyntaxException [CONTEXT] private void checkLenient() throws IOException { if (!lenient) { throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); } [BUGGY] } [BUGGY]  [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	
28	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private void checkLenient() throws IOException { if (!lenient) { throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); } [BUGGY] [BUGGY] } [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	add	
29	[BUG] [BUGGY] last = NUMBER_CHAR_EXP_DIGIT; [FE] JsonSyntaxException [CONTEXT] if (value == 0) { return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal). } long newValue = value * 10 - (c - '0'); fitsInLong &= value > MIN_INCOMPLETE_INTEGER || (value == MIN_INCOMPLETE_INTEGER && newValue < value); value = newValue; } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { [BUGGY] last = NUMBER_CHAR_EXP_DIGIT; [BUGGY] } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2581988897471611	729	729	3	replace	
30	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (value == 0) { return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal). } long newValue = value * 10 - (c - '0'); fitsInLong &= value > MIN_INCOMPLETE_INTEGER || (value == MIN_INCOMPLETE_INTEGER && newValue < value); value = newValue; } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { [BUGGY] [BUGGY] last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2581988897471611	729	729	3	add	
31	[BUG] [BUGGY] int p = peeked; [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { [BUGGY] int p = peeked; [BUGGY] if (p == PEEKED_NONE) { p = doPeek(); } int result; if (p == PEEKED_LONG) { result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	replace	
32	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { [BUGGY] [BUGGY] int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } int result; if (p == PEEKED_LONG) { result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1162	1162	3	add	
33	[BUG] [BUGGY] if (p == PEEKED_NONE) { [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { int p = peeked; [BUGGY] if (p == PEEKED_NONE) { [BUGGY] p = doPeek(); } int result; if (p == PEEKED_LONG) { result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1163	1163	3	replace	
34	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { int p = peeked; [BUGGY] [BUGGY] if (p == PEEKED_NONE) { p = doPeek(); } int result; if (p == PEEKED_LONG) { result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1163	1163	3	add	
35	[BUG] [BUGGY] if (p == PEEKED_LONG) { [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } int result; [BUGGY] if (p == PEEKED_LONG) { [BUGGY] result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; }  [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1168	1168	3	replace	
36	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public int nextInt() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } int result; [BUGGY] [BUGGY] if (p == PEEKED_LONG) { result = (int) peekedLong; if (peekedLong != result) { // Make sure no precision was lost casting to 'int'. throw new NumberFormatException("Expected an int but was " + peekedLong + " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; }  [CLASS] JsonReader 1 [METHOD] nextInt [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize start char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2519763153394848	1168	1168	3	add	
37	[BUG] [BUGGY] if (p == PEEKED_NUMBER) { [FE] JsonSyntaxException [CONTEXT] if (p == PEEKED_NONE) { p = doPeek(); } if (p == PEEKED_LONG) { peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return peekedLong; } [BUGGY] if (p == PEEKED_NUMBER) { [BUGGY] peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) { [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.23570226039551587	951	951	3	replace	
38	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (p == PEEKED_NONE) { p = doPeek(); } if (p == PEEKED_LONG) { peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return peekedLong; } [BUGGY] [BUGGY] if (p == PEEKED_NUMBER) { peekedString = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"'); try { long result = Long.parseLong(peekedString); peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } catch (NumberFormatException ignored) { [CLASS] JsonReader 1 [METHOD] nextLong [RETURN_TYPE] long  [VARIABLES] boolean fitsInLong lenient negative double asDouble Reader in NumberFormatException ignored int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.23570226039551587	951	951	3	add	
39	[BUG] [BUGGY] return lenient; [FE] JsonSyntaxException [CONTEXT] public final boolean isLenient() { [BUGGY] return lenient; [BUGGY] } [CLASS] JsonReader 1 [METHOD] isLenient [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22645540682891913	333	333	3	replace	
40	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public final boolean isLenient() { [BUGGY] [BUGGY] return lenient; } [CLASS] JsonReader 1 [METHOD] isLenient [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22645540682891913	333	333	3	add	
41	[BUG] [BUGGY] int p = peeked; [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { [BUGGY] int p = peeked; [BUGGY] if (p == PEEKED_NONE) { p = doPeek(); } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	416	416	3	replace	
42	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { [BUGGY] [BUGGY] int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	416	416	3	add	
43	[BUG] [BUGGY] if (p == PEEKED_NONE) { [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; [BUGGY] if (p == PEEKED_NONE) { [BUGGY] p = doPeek(); } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	417	417	3	replace	
44	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; [BUGGY] [BUGGY] if (p == PEEKED_NONE) { p = doPeek(); } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	417	417	3	add	
45	[BUG] [BUGGY] p = doPeek(); [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; if (p == PEEKED_NONE) { [BUGGY] p = doPeek(); [BUGGY] } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	418	418	3	replace	
46	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; if (p == PEEKED_NONE) { [BUGGY] [BUGGY] p = doPeek(); } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	418	418	3	add	
47	[BUG] [BUGGY] return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } [BUGGY] return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; [BUGGY] } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	420	420	3	replace	
48	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public boolean hasNext() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } [BUGGY] [BUGGY] return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY; } [CLASS] JsonReader 1 [METHOD] hasNext [RETURN_TYPE] boolean  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	420	420	3	add	
49	[BUG] [BUGGY] return JsonToken.BEGIN_OBJECT; [FE] JsonSyntaxException [CONTEXT] public JsonToken peek() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } switch (p) { case PEEKED_BEGIN_OBJECT: [BUGGY] return JsonToken.BEGIN_OBJECT; [BUGGY] case PEEKED_END_OBJECT: return JsonToken.END_OBJECT; case PEEKED_BEGIN_ARRAY: return JsonToken.BEGIN_ARRAY; case PEEKED_END_ARRAY: return JsonToken.END_ARRAY; case PEEKED_SINGLE_QUOTED_NAME: case PEEKED_DOUBLE_QUOTED_NAME: case PEEKED_UNQUOTED_NAME: return JsonToken.NAME; [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	434	434	3	replace	
50	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public JsonToken peek() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } switch (p) { case PEEKED_BEGIN_OBJECT: [BUGGY] [BUGGY] return JsonToken.BEGIN_OBJECT; case PEEKED_END_OBJECT: return JsonToken.END_OBJECT; case PEEKED_BEGIN_ARRAY: return JsonToken.BEGIN_ARRAY; case PEEKED_END_ARRAY: return JsonToken.END_ARRAY; case PEEKED_SINGLE_QUOTED_NAME: case PEEKED_DOUBLE_QUOTED_NAME: case PEEKED_UNQUOTED_NAME: return JsonToken.NAME; [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	434	434	3	add	
51	[BUG] [BUGGY] if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { [FE] JsonSyntaxException [CONTEXT] case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': [BUGGY] if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { [BUGGY] last = NUMBER_CHAR_EXP_E; continue; } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	695	695	3	replace	
52	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': [BUGGY] [BUGGY] if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { last = NUMBER_CHAR_EXP_E; continue; } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	695	695	3	add	
53	[BUG] [BUGGY] last = NUMBER_CHAR_EXP_E; [FE] JsonSyntaxException [CONTEXT] case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { [BUGGY] last = NUMBER_CHAR_EXP_E; [BUGGY] continue; } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } return PEEKED_NONE; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	696	696	3	replace	
54	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { [BUGGY] [BUGGY] last = NUMBER_CHAR_EXP_E; continue; } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } return PEEKED_NONE; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	696	696	3	add	
55	[BUG] [BUGGY] continue; [FE] JsonSyntaxException [CONTEXT] if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { last = NUMBER_CHAR_EXP_E; [BUGGY] continue; [BUGGY] } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } return PEEKED_NONE;  [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	697	697	3	replace	
56	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case 'e': case 'E': if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT) { last = NUMBER_CHAR_EXP_E; [BUGGY] [BUGGY] continue; } return PEEKED_NONE; case '.': if (last == NUMBER_CHAR_DIGIT) { last = NUMBER_CHAR_DECIMAL; continue; } return PEEKED_NONE;  [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	697	697	3	add	
57	[BUG] [BUGGY] } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { [FE] JsonSyntaxException [CONTEXT] } else if (last == NUMBER_CHAR_DIGIT) { if (value == 0) { return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal). } long newValue = value * 10 - (c - '0'); fitsInLong &= value > MIN_INCOMPLETE_INTEGER || (value == MIN_INCOMPLETE_INTEGER && newValue < value); value = newValue; } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; [BUGGY] } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { [BUGGY] last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; return peeked = PEEKED_LONG; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	728	728	3	replace	
58	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] } else if (last == NUMBER_CHAR_DIGIT) { if (value == 0) { return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal). } long newValue = value * 10 - (c - '0'); fitsInLong &= value > MIN_INCOMPLETE_INTEGER || (value == MIN_INCOMPLETE_INTEGER && newValue < value); value = newValue; } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; [BUGGY] [BUGGY] } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; return peeked = PEEKED_LONG; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	728	728	3	add	
59	[BUG] [BUGGY] StringBuilder result = new StringBuilder().append('$'); [FE] JsonSyntaxException [CONTEXT] public String getPath() { [BUGGY] StringBuilder result = new StringBuilder().append('$'); [BUGGY] for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1469	1469	3	replace	
60	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public String getPath() { [BUGGY] [BUGGY] StringBuilder result = new StringBuilder().append('$'); for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1469	1469	3	add	
61	[BUG] [BUGGY] for (int i = 0, size = stackSize; i < size; i++) { [FE] JsonSyntaxException [CONTEXT] public String getPath() { StringBuilder result = new StringBuilder().append('$'); [BUGGY] for (int i = 0, size = stackSize; i < size; i++) { [BUGGY] switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	replace	
62	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public String getPath() { StringBuilder result = new StringBuilder().append('$'); [BUGGY] [BUGGY] for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1470	1470	3	add	
63	[BUG] [BUGGY] switch (stack[i]) { [FE] JsonSyntaxException [CONTEXT] public String getPath() { StringBuilder result = new StringBuilder().append('$'); for (int i = 0, size = stackSize; i < size; i++) { [BUGGY] switch (stack[i]) { [BUGGY] case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); if (pathNames[i] != null) { [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	
64	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public String getPath() { StringBuilder result = new StringBuilder().append('$'); for (int i = 0, size = stackSize; i < size; i++) { [BUGGY] [BUGGY] switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); if (pathNames[i] != null) { [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	add	
65	[BUG] [BUGGY] return result.toString(); [FE] JsonSyntaxException [CONTEXT] result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } } [BUGGY] return result.toString(); [BUGGY] } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1492	1492	3	replace	
66	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } } [BUGGY] [BUGGY] return result.toString(); } [CLASS] JsonReader 1 [METHOD] getPath [RETURN_TYPE] String  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof StringBuilder result Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1492	1492	3	add	
67	[BUG] [BUGGY] return lineNumber + 1; [FE] JsonSyntaxException [CONTEXT] int getLineNumber() { [BUGGY] return lineNumber + 1; [BUGGY] } [CLASS] JsonReader 1 [METHOD] getLineNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21483446221182986	1311	1311	3	replace	
68	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int getLineNumber() { [BUGGY] [BUGGY] return lineNumber + 1; } [CLASS] JsonReader 1 [METHOD] getLineNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21483446221182986	1311	1311	3	add	
69	[BUG] [BUGGY] return pos - lineStart + 1; [FE] JsonSyntaxException [CONTEXT] int getColumnNumber() { [BUGGY] return pos - lineStart + 1; [BUGGY] } [CLASS] JsonReader 1 [METHOD] getColumnNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21483446221182986	1315	1315	3	replace	
70	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int getColumnNumber() { [BUGGY] [BUGGY] return pos - lineStart + 1; } [CLASS] JsonReader 1 [METHOD] getColumnNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21483446221182986	1315	1315	3	add	
71	[BUG] [BUGGY] if (!lenient) { [FE] JsonSyntaxException [CONTEXT] private void checkLenient() throws IOException { [BUGGY] if (!lenient) { [BUGGY] throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); } } [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	
72	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private void checkLenient() throws IOException { [BUGGY] [BUGGY] if (!lenient) { throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); } } [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	add	
73	[BUG] [BUGGY] return; // not a security token! } [FE] JsonSyntaxException [CONTEXT]  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { [BUGGY] return; // not a security token!  } [BUGGY] } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1584	1585	3	replace	
74	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { [BUGGY] [BUGGY] return; // not a security token!  } } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1584	1585	3	add	
75	[BUG] [BUGGY] switch (p) { [FE] JsonSyntaxException [CONTEXT] public JsonToken peek() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } [BUGGY] switch (p) { [BUGGY] case PEEKED_BEGIN_OBJECT: return JsonToken.BEGIN_OBJECT; case PEEKED_END_OBJECT: return JsonToken.END_OBJECT; case PEEKED_BEGIN_ARRAY: return JsonToken.BEGIN_ARRAY; case PEEKED_END_ARRAY: return JsonToken.END_ARRAY; case PEEKED_SINGLE_QUOTED_NAME: case PEEKED_DOUBLE_QUOTED_NAME: [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2055566129482595	432	432	3	replace	
76	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public JsonToken peek() throws IOException { int p = peeked; if (p == PEEKED_NONE) { p = doPeek(); } [BUGGY] [BUGGY] switch (p) { case PEEKED_BEGIN_OBJECT: return JsonToken.BEGIN_OBJECT; case PEEKED_END_OBJECT: return JsonToken.END_OBJECT; case PEEKED_BEGIN_ARRAY: return JsonToken.BEGIN_ARRAY; case PEEKED_END_ARRAY: return JsonToken.END_ARRAY; case PEEKED_SINGLE_QUOTED_NAME: case PEEKED_DOUBLE_QUOTED_NAME: [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2055566129482595	432	432	3	add	
77	[BUG] [BUGGY] for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { [FE] JsonSyntaxException [CONTEXT] private void consumeNonExecutePrefix() throws IOException {  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } [BUGGY] for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { [BUGGY] if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { return; // not a security token! } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2041241452319315	1582	1582	3	replace	
78	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private void consumeNonExecutePrefix() throws IOException {  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } [BUGGY] [BUGGY] for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { return; // not a security token! } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2041241452319315	1582	1582	3	add	
79	[BUG] [BUGGY] if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { [FE] JsonSyntaxException [CONTEXT] private void consumeNonExecutePrefix() throws IOException {  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { [BUGGY] if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { [BUGGY] return; // not a security token! } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2041241452319315	1583	1583	3	replace	
80	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private void consumeNonExecutePrefix() throws IOException {  nextNonWhitespace(true); pos--; if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) { return; } for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) { [BUGGY] [BUGGY] if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) { return; // not a security token! } }  pos += NON_EXECUTE_PREFIX.length; } [CLASS] JsonReader 1 [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper message peekedString result toFind String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count end i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result size stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2041241452319315	1583	1583	3	add	
