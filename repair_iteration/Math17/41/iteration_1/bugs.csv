bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]  result.mant[mant.length-1]  =  lostdigit;  [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	add	result.mant[mant.length-1]  =  lostdigit;	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
2	[BUG]  [BUGGY]  result.mant[mant.length-1]  =  lostdigit;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]  result.mant[mant.length-1]  =  lostdigit;  [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	result.mant[mant.length-1]  =  lostdigit;	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]  result.mant[mant.length-1]  =  x;  [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	add	result.mant[mant.length-1]  =  x;	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
4	[BUG]  [BUGGY]  result.mant[mant.length-1]  =  x;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]  result.mant[mant.length-1]  =  x;  [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	result.mant[mant.length-1]  =  x;	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	add	  	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
6	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    [BUGGY]  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	  	result.mant[mant.length-1]  =  rh;  	compilable	  [FE]  AssertionError  	81	1	replace
7	[BUG]  [BUGGY]    final  int  rh  =  result.round(lostdigit);  [CE]  variable  rh  is  already  defined  in  method  multiplyFast(int)  [FE]    AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    final  int  rh  =  result.round(lostdigit);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    final  int  rh  =  result.round(lostdigit);		non-compiled	[CE]  variable  rh  is  already  defined  in  method  multiplyFast(int)	82	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    final  int  r  =  result.round(lostdigit);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	add	    final  int  r  =  result.round(lostdigit);		compilable	  [FE]  AssertionError  	82	1	add
9	[BUG]  [BUGGY]    final  int  r  =  result.round(lostdigit);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    final  int  r  =  result.round(lostdigit);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    final  int  r  =  result.round(lostdigit);		compilable	  [FE]  AssertionError  	82	1	add
10	[BUG]  [BUGGY]    final  int[]  rh  =  result.getField();  [CE]  variable  rh  is  already  defined  in  method  multiplyFast(int)  [FE]        AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    final  int[]  rh  =  result.getField();  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    final  int[]  rh  =  result.getField();		non-compiled	[CE]  variable  rh  is  already  defined  in  method  multiplyFast(int)	82	None	add
11	[BUG]  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  lostdigit);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  lostdigit);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  lostdigit);		non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	82	None	add
12	[BUG]  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    result  =  dotrap(result,  MULTIPLY_TRAP,  result);		non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	82	None	add
13	[BUG]  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);		non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	82	None	add
14	[BUG]  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  }  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  }		non-compiled	[CE]  illegal  start  of  expression	82	None	add
15	[BUG]  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  lostdigit;  rh  =  r  /  RADIX;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  lostdigit;  rh  =  r  /  RADIX;  }  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  lostdigit;  rh  =  r  /  RADIX;  }		non-compiled	[CE]  illegal  start  of  expression	82	None	add
16	[BUG]  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  lostdigit  =  r  -  lostdigit  *  RADIX;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  for  (int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  rh  =  r  /  RADIX;  result.mant[i]  =  r  -  rh  *  RADIX;  }  int  lostdigit  =  0;  if  (rh  !=  0)  {  lostdigit  =  result.mant[0];  result.shiftRight();  [BUGGY]    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  lostdigit  =  r  -  lostdigit  *  RADIX;  }  [BUGGY]  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1654	1654	1	replace	    if(mant.length  ==  0)  {  for(int  i  =  0;  i  <  mant.length;  i++)  {  final  int  r  =  mant[i]  *  x  +  rh;  lostdigit  =  r  -  lostdigit  *  RADIX;  }		non-compiled	[CE]  illegal  start  of  expression	82	None	add
