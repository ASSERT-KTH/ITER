projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result.length,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result.length,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(0,Math.abs(x));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(isNaN()||isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.min(x,result.length);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(result.length,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.max(result.length,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(0,Math.abs(x)+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(result,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.min(x,result.length-1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(isNaN()||isInfinite()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans,FINITE);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.max(result.length,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()||x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()||isInfinite()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result.length,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result.length,2);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(result.length,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()){if(!isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()){If(!isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(isNaN()||isNaN()){if(isNaN()||isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(isNaN()||isNaN()){If(isNaN()||isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.max(result.length,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(0,Math.abs(x)-1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(x,result.length);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.min(x,field.length);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans,2);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(nans.length,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(x,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.min(result.length,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616x=Math.max(result.length,x+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(x==0||isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(result,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()||x<0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616if(!isNaN()||x>0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1616intx=Math.min(result.length,x+1);
