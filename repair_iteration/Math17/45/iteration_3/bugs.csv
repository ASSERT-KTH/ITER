bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Dfp  result  =  newInstance(x);  [CE]  cannot  assign  a  value  to  final  variable  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  Dfp  result  =  newInstance(x);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  Dfp  result  =  newInstance(x);	  Dfp    result    =    newInstance(x);    Dfp    result    =    newInstance(x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  result	12	None	replace
2	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  rsign);  [CE]  cannot  find  symbol  rsign  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  rsign);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x,  rsign);	  final    int[]    nans    =    getNaN().multiply(x);    	non-compiled	[CE]  cannot  find  symbol  rsign	18	None	replace
3	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  *  2];  [CE]  incomparable  types:  int[]  and  byte  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  new  int[x  *  2];  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  *  2];	  final    int[]    nans    =    new    int[x    *    1];    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	17	None	replace
4	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  *  4];  [CE]  incomparable  types:  int[]  and  byte  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  new  int[x  *  4];  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  *  4];	  final    int[]    nans    =    new    int[x    *    1];    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	17	None	replace
5	[BUG]  [BUGGY]  Dfp  result  =  newDfp(x  *  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newDfp(x  *  1);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newDfp(x  *  1);	  Dfp    result    =    newDfp(x    +    1);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
6	[BUG]  [BUGGY]  int[]  nans  =  new  int[x  *  1];  [CE]  incomparable  types:  int[]  and  byte  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int[]  nans  =  new  int[x  *  1];  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  new  int[x  *  1];	  int[]    nans    =    new    int[x    +    1];    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	24	None	replace
7	[BUG]  [BUGGY]  Integer  nans  =  Math.min(x,  MAX_EXP);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Integer  nans  =  Math.min(x,  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Integer  nans  =  Math.min(x,  MAX_EXP);	          int    nans    =    Math.min(x,    MAX_EXP);    int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	7	None	replace
8	[BUG]  [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x  +  1);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x  +  1);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(MAX_EXP,  x  +  1);	  int    nans    =    Math.min(MAX_EXP,    x);    	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
9	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }	  final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans;    ++i)    {    result.add(nans[i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	6	None	replace
10	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }	  final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans;    i++)    {    result.add(nans[i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
11	[BUG]  [BUGGY]  final  int[]  nans  =(int[])mant.clone();  [CE]  incomparable  types:  int[]  and  byte  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =(int[])mant.clone();  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =(int[])mant.clone();	  final    int[]    nans    =(int[])this.mant.clone();    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	25	None	replace
12	[BUG]  [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x  -  1);  [CE]  cannot  find  symbol  result  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x  -  1);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(MAX_EXP,  x  -  1);	  int    nans    =    Math.min(x,    MAX_EXP    -    1);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
13	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x,  this,  sign);  [CE]  no  suitable  method  found  for  newInstance(int,Dfp,byte)  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(x,  this,  sign);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(x,  this,  sign);	  Dfp    result    =    newInstance(x,    this);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(int,Dfp,byte)	19	None	replace
14	[BUG]  [BUGGY]  result  =  newInstance(this);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  result  =  newInstance(this);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	result  =  newInstance(this);	  Dfp    result    =    newInstance(x);    result    =    newInstance(x);    	non-compiled	[CE]  cannot  find  symbol  result	21	None	replace
15	[BUG]  [BUGGY]  result  =  newInstance(this,  x);  [CE]  cannot  find  symbol  result  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  result  =  newInstance(this,  x);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	result  =  newInstance(this,  x);	  Dfp    result    =    newInstance(x);    result    =    newInstance(x);    	non-compiled	[CE]  cannot  find  symbol  result	21	None	replace
16	[BUG]  [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  <  0)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  <  0)  {  return  this;  }  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  <  0)  {  return  this;  }	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    return    this;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  final  Dfp  result  =  newInstance(x);  if(x  <  0)  {  return  this;  }  [CE]  cannot  assign  a  value  to  final  variable  result  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  Dfp  result  =  newInstance(x);  if(x  <  0)  {  return  this;  }  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  Dfp  result  =  newInstance(x);  if(x  <  0)  {  return  this;  }	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    return    this;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  result	22	None	replace
18	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x,  NAN_STRING);  [CE]  no  suitable  method  found  for  newInstance(Dfp,int,String)  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(this,  x,  NAN_STRING);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x,  NAN_STRING);	  Dfp    result    =    newInstance(this,    x,    NAN);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int,String)	20	None	replace
19	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }  [CE]  cannot  find  symbol  result  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  +  1];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }	  final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans.length;    ++i)    {    result.add(nans[i]);    }    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
20	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x,  this  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(x,  this  +  1);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(x,  this  +  1);	  Dfp    result    =    newInstance(this,    x    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
21	[BUG]  [BUGGY]  final  Dfp  result  =  newInstance(this);  [CE]  cannot  assign  a  value  to  final  variable  result  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  Dfp  result  =  newInstance(this);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  Dfp  result  =  newInstance(this);	  Dfp    result    =    newInstance(x);    final    Dfp    result    =    newInstance(x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  result	13	None	replace
22	[BUG]  [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP,  MAX_EXP);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP,  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(Math.abs(x),  MAX_EXP,  MAX_EXP);	  int    nans    =    Math.min(Math.abs(x),    MAX_EXP);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	28	None	replace
23	[BUG]  [BUGGY]  final  int[]  nans  =(int[])x,  assign.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =(int[])x,  assign.clone();  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =(int[])x,  assign.clone();	  final    int[]    nans    =(int[])x.assign.clone();    	non-compiled	[CE]  ';'  expected	16	None	replace
24	[BUG]  [BUGGY]  int[]  nans  =  getNaN().multiply(x,  rsign);  [CE]  cannot  find  symbol  rsign  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int[]  nans  =  getNaN().multiply(x,  rsign);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  getNaN().multiply(x,  rsign);	  int[]    nans    =    getNaN().multiply(x);    	non-compiled	[CE]  cannot  find  symbol  rsign	27	None	replace
25	[BUG]  [BUGGY]  int  nans  =  Math.min(x,  MAX_EXP);  Integer  nans  =  Math.min(x,  MAX_EXP);  [CE]  variable  nans  is  already  defined  in  method  multiplyFast(int)  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(x,  MAX_EXP);  Integer  nans  =  Math.min(x,  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(x,  MAX_EXP);  Integer  nans  =  Math.min(x,  MAX_EXP);	          int    nans    =    Math.min(x,    MAX_EXP);    Int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  variable  nans  is  already  defined  in  method  multiplyFast(int)	8	None	replace
26	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  SNAN);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  SNAN);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x,  SNAN);	  final    int[]    nans    =    getNaN().multiply(x);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
27	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  nans);  if(nans  ==  0)  {  return  this;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  nans);  if(nans  ==  0)  {  return  this;  }  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x,  nans);  if(nans  ==  0)  {  return  this;  }	  final    int[]    nans    =    getNaN().multiply(x);    if(nans    ==    0)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
28	[BUG]  [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  }  [CE]  cannot  find  symbol  result  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  }  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	if(x  <  0)  {  Dfp  result  =  newInstance(this);  }	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    Dfp    result    =    newInstance(x);    }    	non-compiled	[CE]  cannot  find  symbol  result	14	None	replace
29	[BUG]  [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x);  Int  nans  =  Math.min(MAX_EXP,  nans);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x);  Int  nans  =  Math.min(MAX_EXP,  nans);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(MAX_EXP,  x);  Int  nans  =  Math.min(MAX_EXP,  nans);	          int    nans    =    Math.min(x,    MAX_EXP);    Int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
30	[BUG]  [BUGGY]  Integer  nans  =  Math.min(x,  MAX_EXP);  Int  nans  =  Math.min(x,  MAX_EXP);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Integer  nans  =  Math.min(x,  MAX_EXP);  Int  nans  =  Math.min(x,  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Integer  nans  =  Math.min(x,  MAX_EXP);  Int  nans  =  Math.min(x,  MAX_EXP);	          int    nans    =    Math.min(x,    MAX_EXP);    Int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
31	[BUG]  [BUGGY]  nans  =  newInstance(this);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  nans  =  newInstance(this);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	nans  =  newInstance(this);	  Dfp    result    =    newInstance(x);    Dfp    result    =    newInstance(x);    	non-compiled	[CE]  incompatible  types	12	None	replace
32	[BUG]  [BUGGY]  int[]  nans  =  getNaN().multiply(x,  NAN_STRING);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int[]  nans  =  getNaN().multiply(x,  NAN_STRING);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  getNaN().multiply(x,  NAN_STRING);	  int[]    nans    =    getNaN().multiply(x);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
33	[BUG]  [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP  -  1);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP  -  1);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(Math.abs(x),  MAX_EXP  -  1);	  int    nans    =    Math.min(Math.abs(x),    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
34	[BUG]  [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  >=  0)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  >=  0)  {  return  this;  }  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	if(x  <  0)  {  Dfp  result  =  newInstance(this);  if(x  >=  0)  {  return  this;  }	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    return    this;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x,  0);  [CE]  no  suitable  method  found  for  newInstance(int,int)  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(x,  0);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(x,  0);	  Dfp    result    =    newInstance(x,    this);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(int,int)	19	None	replace
36	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x,  QNAN);  [CE]  no  suitable  method  found  for  newInstance(Dfp,int,byte)  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(this,  x,  QNAN);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x,  QNAN);	  Dfp    result    =    newInstance(this,    x,    NAN);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int,byte)	20	None	replace
37	[BUG]  [BUGGY]  Dfp  result  =  newDfp(x  +  2);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newDfp(x  +  2);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newDfp(x  +  2);	  Dfp    result    =    newDfp(x    +    1);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
38	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x  *  1);  [CE]  no  suitable  method  found  for  newInstance(Dfp,int)  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(this,  x  *  1);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x  *  1);	  Dfp    result    =    newInstance(this,    x    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int)	23	None	replace
39	[BUG]  [BUGGY]  int  nans  =  Math.min(Math.abs(x)/  MAX_EXP);  [CE]  no  suitable  method  found  for  min(int)  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(Math.abs(x)/  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(Math.abs(x)/  MAX_EXP);	  int    nans    =    Math.min(Math.abs(x),    MAX_EXP);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	28	None	replace
40	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x,  SNAN);  [CE]  no  suitable  method  found  for  newInstance(Dfp,int,byte)  [FE]              AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(this,  x,  SNAN);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x,  SNAN);	  Dfp    result    =    newInstance(this,    x,    NAN);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int,byte)	20	None	replace
41	[BUG]  [BUGGY]  int  nans  =  Math.min(1,  MAX_EXP);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int  nans  =  Math.min(1,  MAX_EXP);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(1,  MAX_EXP);	          int    nans    =    Math.min(x,    MAX_EXP);    int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	7	None	replace
42	[BUG]  [BUGGY]  nans  =  newInstance(x);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  nans  =  newInstance(x);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	nans  =  newInstance(x);	  Dfp    result    =    newInstance(x);    Dfp    result    =    newInstance(x);    	non-compiled	[CE]  incompatible  types	12	None	replace
43	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  SNAN);  if(nans  ==  0)  {  return  this;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  final  int[]  nans  =  getNaN().multiply(x,  SNAN);  if(nans  ==  0)  {  return  this;  }  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x,  SNAN);  if(nans  ==  0)  {  return  this;  }	  final    int[]    nans    =    getNaN().multiply(x);    if(nans    ==    0)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
44	[BUG]  [BUGGY]  nans  =  multiplyFast(x);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  nans  =  multiplyFast(x);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	nans  =  multiplyFast(x);	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    Dfp    result    =    newInstance(x);    }    	non-compiled	[CE]  incompatible  types	14	None	replace
45	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x);  if(x  <  0)  {  return  this;  }  [CE]  no  suitable  method  found  for  newInstance(Dfp,int)  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(this,  x);  if(x  <  0)  {  return  this;  }  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x);  if(x  <  0)  {  return  this;  }	  Dfp    result    =    newInstance(x);    if(x    <    0)    {    return    this;    }    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int)	22	None	replace
46	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x,  this,  adiff);  [CE]  cannot  find  symbol  adiff  [FE]            AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Dfp  result  =  newInstance(x,  this,  adiff);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(x,  this,  adiff);	  Dfp    result    =    newInstance(x,    this);    	non-compiled	[CE]  cannot  find  symbol  adiff	19	None	replace
47	[BUG]  [BUGGY]  int[]  nans  =  getNaN().multiply(x,  SNAN);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  int[]  nans  =  getNaN().multiply(x,  SNAN);  [BUGGY]        if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  getNaN().multiply(x,  SNAN);	  int[]    nans    =    getNaN().multiply(x);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
48	[BUG]  [BUGGY]  Int  nans  =  Math.min(MAX_EXP,  x);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      private  Dfp  multiplyFast(final  int  x)  {      [BUGGY]  Int  nans  =  Math.min(MAX_EXP,  x);  [BUGGY]      Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Int  nans  =  Math.min(MAX_EXP,  x);	          int    nans    =    Math.min(x,    MAX_EXP);    Int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
