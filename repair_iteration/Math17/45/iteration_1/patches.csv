bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x);  [CE]  cannot  find  symbol  result  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int  nans  =  Math.min(MAX_EXP,  x);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(MAX_EXP,  x);	      int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
2	[BUG]  [BUGGY]  int  nans  =  Math.min(x,  MAX_EXP  -  1);  [CE]  cannot  find  symbol  result  [FE]      AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int  nans  =  Math.min(x,  MAX_EXP  -  1);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(x,  MAX_EXP  -  1);	      int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
3	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  if(nans!=  0)  {  return  this;  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  if(nans!=  0)  {  return  this;  }  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x);  if(nans!=  0)  {  return  this;  }	      if(x    <    0)    {    final    int[]    nans    =    getNaN().multiply(x);    if(nans!=    0)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
4	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  if(nans  ==  0)  {  return  this;  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  if(nans  ==  0)  {  return  this;  }  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x);  if(nans  ==  0)  {  return  this;  }	      if(x    <    0)    {    final    int[]    nans    =    getNaN().multiply(x);    if(nans!=    0)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
5	[BUG]  [BUGGY]  int[]  nans  =  getNaN();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int[]  nans  =  getNaN();  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  getNaN();	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
6	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  ++i)  {  result.add(nans[i]);  }	      if(x    <    0)    {    final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans;    ++i)    {    result.add(nans[i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	9	None	replace
7	[BUG]  [BUGGY]      int  nans  =  Math.min(x,  MAX_EXP);  int  nans  =  Math.min(x,  MAX_EXP);  [CE]  variable  nans  is  already  defined  in  method  multiplyFast(int)  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]      int  nans  =  Math.min(x,  MAX_EXP);  int  nans  =  Math.min(x,  MAX_EXP);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	        int    nans    =    Math.min(x,    MAX_EXP);    int  nans  =  Math.min(x,  MAX_EXP);	  	non-compiled	[CE]  variable  nans  is  already  defined  in  method  multiplyFast(int)	14	None	add
8	[BUG]  [BUGGY]      int  nans  =  Math.min(x,  MAX_EXP);  Int  nans  =  Math.min(x,  MAX_EXP);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]      int  nans  =  Math.min(x,  MAX_EXP);  Int  nans  =  Math.min(x,  MAX_EXP);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	        int    nans    =    Math.min(x,    MAX_EXP);    Int  nans  =  Math.min(x,  MAX_EXP);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
9	[BUG]  [BUGGY]  Dfp  result  =  newDfp(x  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newDfp(x  +  1);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newDfp(x  +  1);	  Dfp    result    =    newDfp(x);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]  Dfp  result  =  newDfp(x  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newDfp(x  -  1);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newDfp(x  -  1);	  Dfp    result    =    newDfp(x);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
11	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans;  i++)  {  result.add(nans[i]);  }	      if(x    <    0)    {    final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans;    i++)    {    result.add(nans[i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
12	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  Dfp  result  =  newInstance(x);  [CE]  variable  result  is  already  defined  in  method  multiplyFast(int)  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  Dfp  result  =  newInstance(x);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    Dfp  result  =  newInstance(x);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  multiplyFast(int)	1	None	add
13	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  final  Dfp  result  =  newInstance(x);  [CE]  variable  result  is  already  defined  in  method  multiplyFast(int)  [FE]      AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  final  Dfp  result  =  newInstance(x);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    final  Dfp  result  =  newInstance(x);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  multiplyFast(int)	1	None	add
14	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  if(x  <  0)  {  Dfp  result  =  newInstance(x);  }  [CE]  variable  result  is  already  defined  in  method  multiplyFast(int)  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  if(x  <  0)  {  Dfp  result  =  newInstance(x);  }  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    if(x  <  0)  {  Dfp  result  =  newInstance(x);  }	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  multiplyFast(int)	1	None	add
15	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }  [CE]  cannot  find  symbol  result  [FE]          AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x];  for(int  i  =  0;  i  <  nans.length;  ++i)  {  result.add(nans[i]);  }	      if(x    <    0)    {    final    int[]    nans    =    new    int[x];    for(int    i    =    0;    i    <    nans.length;    ++i)    {    result.add(nans[i]);    }    	non-compiled	[CE]  cannot  find  symbol  result	10	None	replace
16	[BUG]  [BUGGY]  final  int[]  nans  =(int[])x.assign.clone();  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =(int[])x.assign.clone();  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =(int[])x.assign.clone();	      final    int[]    nans    =(int[])x.clone();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
17	[BUG]  [BUGGY]  final  int[]  nans  =  new  int[x  *  1];  [CE]  incomparable  types:  int[]  and  byte  [FE]          AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  new  int[x  *  1];  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  new  int[x  *  1];	      final    int[]    nans    =    new    int[x    +    1];    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	6	None	replace
18	[BUG]  [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =  getNaN().multiply(x);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =  getNaN().multiply(x);	      final    int[]    nans    =    getNaN();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
19	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x,  this);  [CE]  no  suitable  method  found  for  newInstance(int,Dfp)  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x,  this);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(x,  this);	  Dfp    result    =    newInstance(this,    x);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(int,Dfp)	8	None	replace
20	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x,  NAN);  [CE]  cannot  find  symbol  NAN  [FE]          AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(this,  x,  NAN);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x,  NAN);	  Dfp    result    =    newInstance(this,    x);    	non-compiled	[CE]  cannot  find  symbol  NAN	8	None	replace
21	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  result  =  newInstance(x);  [CE]  variable  result  is  already  defined  in  method  multiplyFast(int)  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  result  =  newInstance(x);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    result  =  newInstance(x);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  multiplyFast(int)	1	None	add
22	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  if(x  <  0)  {  return  this;  }  [CE]  variable  result  is  already  defined  in  method  multiplyFast(int)  [FE]      AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  if(x  <  0)  {  return  this;  }  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    if(x  <  0)  {  return  this;  }	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  multiplyFast(int)	1	None	add
23	[BUG]  [BUGGY]  Dfp  result  =  newInstance(this,  x  +  1);  [CE]  no  suitable  method  found  for  newInstance(Dfp,int)  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(this,  x  +  1);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp  result  =  newInstance(this,  x  +  1);	  Dfp    result    =    newInstance(this,    x);    	non-compiled	[CE]  no  suitable  method  found  for  newInstance(Dfp,int)	8	None	replace
24	[BUG]  [BUGGY]  int[]  nans  =  new  int[x  +  1];  [CE]  incomparable  types:  int[]  and  byte  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int[]  nans  =  new  int[x  +  1];  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  new  int[x  +  1];	      	non-compiled	[CE]  incomparable  types:  int[]  and  byte	4	None	replace
25	[BUG]  [BUGGY]  final  int[]  nans  =(int[])this.mant.clone();  [CE]  incomparable  types:  int[]  and  byte  [FE]        AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  final  int[]  nans  =(int[])this.mant.clone();  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	final  int[]  nans  =(int[])this.mant.clone();	      final    int[]    nans    =(int[])x.clone();    	non-compiled	[CE]  incomparable  types:  int[]  and  byte	5	None	replace
26	[BUG]  [BUGGY]  Dfp  result  =  newInstance(x);  dfp  =  newInstance(x);  [CE]  cannot  find  symbol  dfp  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  Dfp  result  =  newInstance(x);  dfp  =  newInstance(x);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	Dfp    result    =    newInstance(x);    dfp  =  newInstance(x);	  	non-compiled	[CE]  cannot  find  symbol  dfp	1	None	add
27	[BUG]  [BUGGY]  int[]  nans  =  getNaN().multiply(x);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int[]  nans  =  getNaN().multiply(x);  [BUGGY]      if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int[]  nans  =  getNaN().multiply(x);	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
28	[BUG]  [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP);  [CE]  cannot  find  symbol  result  [FE]    AssertionError    [CONTEXT]    private  Dfp  multiplyFast(final  int  x)  {    [BUGGY]  int  nans  =  Math.min(Math.abs(x),  MAX_EXP);  [BUGGY]    Dfp  result  =  newInstance(this);  if  (nans  !=  FINITE)  {  if  (isNaN())  {  return  this;  }  if  (nans  ==  INFINITE  &&  x  !=  0)  {  result  =  newInstance(this);  return  result;  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	0.7071067811865475	1612	1612	1	replace	int  nans  =  Math.min(Math.abs(x),  MAX_EXP);	      int    nans    =    Math.min(x,    MAX_EXP);    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
