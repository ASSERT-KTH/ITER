bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  result.exp  =  exp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result.exp    =    exp;    result.exp  =  exp;	  	compilable	  [FE]  AssertionError  	40	1	add
2	[BUG]  [BUGGY]          result.exp  =  exp;  result.exp  =  exp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  result.exp  =  exp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result.exp    =    exp;    result.exp  =  exp;	  	compilable	  [FE]  AssertionError  	40	1	add
3	[BUG]  [BUGGY]          result.exp  =  exp;  Result.exp  =  exp;  [CE]  cannot  find  symbol  Result  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  Result.exp  =  exp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result.exp    =    exp;    Result.exp  =  exp;	  	non-compiled	[CE]  cannot  find  symbol  Result	40	None	add
4	[BUG]  [BUGGY]          result.exp  =  exp;  final  int  exp  =  exp;  [CE]  variable  exp  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  final  int  exp  =  exp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result.exp    =    exp;    final  int  exp  =  exp;	  	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	40	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  1;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	result.exp  =  1;	  result.exp    =    0;    	compilable	  [FE]  AssertionError  	3	1	replace
6	[BUG]  [BUGGY]  result.exp  =  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  1;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.exp  =  1;	  result.exp    =    0;    	compilable	  [FE]  AssertionError  	3	1	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	  	compilable	  [FE]  NullPointerException  	8	1	add
8	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	  	compilable	  [FE]  NullPointerException  	8	1	add
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  NullPointerException  	8	1	add
10	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  NullPointerException  	8	1	add
11	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	  	compilable	  [FE]  NullPointerException  	8	1	add
12	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	  	compilable	  [FE]  NullPointerException  	8	1	add
13	[BUG]  [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  excp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  excp);	  result    =    trap(result.mant,    exp,    MULTIPLY_TRAP,    exponent);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	36	None	replace
14	[BUG]  [BUGGY]  result  =  trap(result.mant,  excp,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result.mant,  excp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result.mant,  excp,  MULTIPLY_TRAP,  exp);	  result    =    trap(result.mant,    exp,    MULTIPLY_TRAP,    exponent);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	36	None	replace
15	[BUG]  [BUGGY]  result  =  trap(result,  mant,  excp,  MULTIPLY_TRAP);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  mant,  excp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  mant,  excp,  MULTIPLY_TRAP);	  result    =    trap(mant,    excp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	15	None	replace
16	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  md);  [CE]  cannot  find  symbol  md  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  md);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  md);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    result,    excp);    	non-compiled	[CE]  cannot  find  symbol  md	1	None	replace
17	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  exp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  exp);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    exp,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	20	None	replace
18	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  excp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result.mant,  excp);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    exp,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	20	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  excp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	result.exp  =  excp;	          result.exp    =    exp;    	compilable	  [FE]  AssertionError  	41	1	replace
20	[BUG]  [BUGGY]  result.exp  =  excp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  excp;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.exp  =  excp;	          result.exp    =    exp;    	compilable	  [FE]  AssertionError  	41	1	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  0;  result.exp  =  0;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	result.exp    =    0;    result.exp  =  0;	  	compilable	  [FE]  AssertionError  	2	1	add
22	[BUG]  [BUGGY]  result.exp  =  0;  result.exp  =  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  0;  result.exp  =  0;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.exp    =    0;    result.exp  =  0;	  	compilable	  [FE]  AssertionError  	2	1	add
23	[BUG]  [BUGGY]  result.exp  =  0;  Result.exp  =  0;  [CE]  cannot  find  symbol  Result  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  0;  Result.exp  =  0;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.exp    =    0;    Result.exp  =  0;	  	non-compiled	[CE]  cannot  find  symbol  Result	2	None	add
24	[BUG]  [BUGGY]  result.exp  =  0;  results.exp  =  0;  [CE]  cannot  find  symbol  results  [FE]        AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.exp  =  0;  results.exp  =  0;  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.exp    =    0;    results.exp  =  0;	  	non-compiled	[CE]  cannot  find  symbol  results	2	None	add
25	[BUG]  [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result.mant,  exp,  MULTIPLY_TRAP);	  result    =    trap(mant,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	16	None	replace
26	[BUG]  [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  mant);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  mant);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  MULTIPLY_TRAP,  excp,  mant);	  result    =    trap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	21	None	replace
27	[BUG]  [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  exponent);  [CE]  cannot  find  symbol  exponent  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  exponent);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  MULTIPLY_TRAP,  excp,  exponent);	  result    =    trap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  cannot  find  symbol  exponent	21	None	replace
28	[BUG]  [BUGGY]  result.add(result.mant,  excp);  [CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.add(result.mant,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.add(result.mant,  excp);	  result.add(exp);    	non-compiled	[CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;	4	None	replace
29	[BUG]  [BUGGY]  result.add(exp,  x);  [CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.add(exp,  x);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.add(exp,  x);	  result.add(exp);    	non-compiled	[CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;	4	None	replace
30	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    	compilable	  [FE]  NullPointerException  	9	1	replace
31	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);	          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    	compilable	  [FE]  NullPointerException  	9	1	replace
32	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);	          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	9	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }	  	compilable	  [FE]  AssertionError  	42	1	add
34	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }	  	compilable	  [FE]  AssertionError  	42	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	42	1	add
36	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	42	1	add
37	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [CE]  cannot  find  symbol  Result  [FE]        AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	42	None	add
38	[BUG]  [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  result);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  result);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  exp,  MULTIPLY_TRAP,  result);	  result    =    trap(result,    mant,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	22	None	replace
39	[BUG]  [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  exp,  MULTIPLY_TRAP,  exp);	  result    =    trap(result,    mant,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	22	None	replace
40	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  md);  [CE]  cannot  find  symbol  md  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  md);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  md);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    exp,    result);    	non-compiled	[CE]  cannot  find  symbol  md	12	None	replace
41	[BUG]  [BUGGY]  result  =  trap(mant,  exponent,  MULTIPLY_TRAP);  [CE]  cannot  find  symbol  exponent  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  exponent,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  exponent,  MULTIPLY_TRAP);	  result    =    trap(result.mant,    mant,    excp,    MULTIPLY_TRAP);    	non-compiled	[CE]  cannot  find  symbol  exponent	35	None	replace
42	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  mant);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  mant);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  mant);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	18	None	replace
43	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);  [CE]  cannot  find  symbol  MISSING_TRAP  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  cannot  find  symbol  MISSING_TRAP	18	None	replace
44	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  exp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  exp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    result,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	33	None	replace
45	[BUG]  [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  result.exp,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  result.exp,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  MULTIPLY_TRAP,  result.exp,  excp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    mant,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	17	None	replace
46	[BUG]  [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  MULTIPLY_TRAP,  exp);	  result    =    trap(result.mant,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	26	None	replace
47	[BUG]  [BUGGY]  result  =  dotrap(exp,  result.mant,  exp,  MULTIPLY_TRAP);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  result.mant,  exp,  MULTIPLY_TRAP);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  result.mant,  exp,  MULTIPLY_TRAP);	  result    =    dotrap(result.mant,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	11	None	replace
48	[BUG]  [BUGGY]  result  =  dotrap(exp,  result.mant,  MULTIPLY_TRAP);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  result.mant,  MULTIPLY_TRAP);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  result.mant,  MULTIPLY_TRAP);	  result    =    dotrap(result.mant,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	11	None	replace
49	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  result);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	14	None	replace
50	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  exp,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  exp,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  MULTIPLY_TRAP,  exp,  result);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	14	None	replace
51	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  excp,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  excp,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  excp,  result);	          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	43	None	replace
52	[BUG]  [BUGGY]  result.setRight(exp);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.setRight(exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.setRight(exp);	  result.setRight(excp);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
53	[BUG]  [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  excp);	  result    =    dotrap(result,    exp,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	34	None	replace
54	[BUG]  [BUGGY]  result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP,  excp);	  result    =    dotrap(result,    exp,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	34	None	replace
55	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result);	  result    =    dotrap(result,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	24	None	replace
56	[BUG]  [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  excp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  MULTIPLY_TRAP,  excp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	24	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	5	1	add
58	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	5	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	5	1	add
60	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	compilable	  [FE]  AssertionError  	5	1	add
61	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [CE]  cannot  find  symbol  Result  [FE]        AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    Result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);	  	non-compiled	[CE]  cannot  find  symbol  Result	5	None	add
62	[BUG]  [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  exp,  MULTIPLY_TRAP,  exp);	  result    =    trap(result,    exp,    MULTIPLY_TRAP,    result);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	39	None	replace
63	[BUG]  [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  MULTIPLY_TRAP,  exp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    mant,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	25	None	replace
64	[BUG]  [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result,  excp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  MULTIPLY_TRAP,  result,  excp);	  result    =    trap(result,    MULTIPLY_TRAP,    mant,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	31	None	replace
65	[BUG]  [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result.exp,  excp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result.exp,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  MULTIPLY_TRAP,  result.exp,  excp);	  result    =    trap(result,    MULTIPLY_TRAP,    mant,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	31	None	replace
66	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  exp);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    exp,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	13	None	replace
67	[BUG]  [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  exp,  MULTIPLY_TRAP);	  result    =    dotrap(result,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	30	None	replace
68	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  exponent);  [CE]  cannot  find  symbol  exponent  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  exponent);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  exponent);	  result    =    dotrap(result,    MULTIPLY_TRAP,    exp,    exp);    	non-compiled	[CE]  cannot  find  symbol  exponent	10	None	replace
69	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(result,  MULTIPLY_TRAP,  result,  null);	  	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	8	None	add
70	[BUG]  [BUGGY]  result.add(x,  excp);  [CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result.add(x,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result.add(x,  excp);	  result.add(exp);    	non-compiled	[CE]  method  add  in  class  Dfp  cannot  be  applied  to  given  types;	4	None	replace
71	[BUG]  [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);  [CE]  cannot  find  symbol  MISSING_TRAP  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  MULTIPLY_TRAP,  excp,  MISSING_TRAP);	  result    =    trap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  cannot  find  symbol  MISSING_TRAP	21	None	replace
72	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  rh,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  rh,  excp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  rh,  excp);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    result,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	1	None	replace
73	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  md,  excp);  [CE]  cannot  find  symbol  md  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  md,  excp);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  md,  excp);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    result,    excp);    	non-compiled	[CE]  cannot  find  symbol  md	1	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }	  	compilable	  [FE]  AssertionError  	42	1	add
75	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }	  	compilable	  [FE]  AssertionError  	42	1	add
76	[BUG]  [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  mant);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  exp,  MULTIPLY_TRAP,  mant);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  exp,  MULTIPLY_TRAP,  mant);	  result    =    trap(result,    mant,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	22	None	replace
77	[BUG]  [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  excp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  exp,  MULTIPLY_TRAP,  excp);	  result    =    trap(result,    exp,    MULTIPLY_TRAP,    result);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	39	None	replace
78	[BUG]  [BUGGY]  result  =  trap(result.mant,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result.mant,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result.mant,  MULTIPLY_TRAP,  exp);	  result    =    trap(result.mant,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	26	None	replace
79	[BUG]  [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  exp,  MULTIPLY_TRAP);	  result    =    trap(mant,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	16	None	replace
80	[BUG]  [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result.mant,  exp,  MULTIPLY_TRAP,  exp);	  result    =    trap(result.mant,    exp,    MULTIPLY_TRAP,    exponent);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	36	None	replace
81	[BUG]  [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  rh);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  rh);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  rh);	  result    =    dotrap(result,    MULTIPLY_TRAP,    result,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	33	None	replace
82	[BUG]  [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result,  exp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  MULTIPLY_TRAP,  result,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  MULTIPLY_TRAP,  result,  exp);	  result    =    trap(result,    MULTIPLY_TRAP,    mant,    exp);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	32	None	replace
83	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  exp);	  result    =    dotrap(result,    exp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	30	None	replace
84	[BUG]  [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  MULTIPLY_TRAP,  excp);	  result    =    trap(mant,    excp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	15	None	replace
85	[BUG]  [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  result,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  MULTIPLY_TRAP,  result,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  MULTIPLY_TRAP,  result,  exp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    mant,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	25	None	replace
86	[BUG]  [BUGGY]  result  =  dotrap(result,  mant,  exp,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  mant,  exp,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  mant,  exp,  exp);	  result    =    dotrap(result,    MULTIPLY_TRAP,    mant,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	25	None	replace
87	[BUG]  [BUGGY]  result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  mant,  exp,  MULTIPLY_TRAP);	  result    =    dotrap(result,    MULTIPLY_TRAP,    mant,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	17	None	replace
88	[BUG]  [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  rh);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  rh);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  MULTIPLY_TRAP,  exp,  rh);	  result    =    dotrap(mant,    MULTIPLY_TRAP,    exp,    result);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	12	None	replace
89	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  null);  result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    null);    result  =  dotrap(result.mant,  MULTIPLY_TRAP,  result,  result);	  	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	8	None	add
90	[BUG]  [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  exp,  exponent);  [CE]  cannot  find  symbol  exponent  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  MULTIPLY_TRAP,  exp,  exponent);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  MULTIPLY_TRAP,  exp,  exponent);	  result    =    trap(mant,    MULTIPLY_TRAP,    excp,    result);    	non-compiled	[CE]  cannot  find  symbol  exponent	21	None	replace
91	[BUG]  [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  exp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  exp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(mant,  exp,  MULTIPLY_TRAP,  exp);	  result    =    dotrap(result,    exp,    MULTIPLY_TRAP,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	34	None	replace
92	[BUG]  [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  excp);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  excp);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result.mant,  exp,  MULTIPLY_TRAP,  excp);	  result    =    dotrap(result.mant,    MULTIPLY_TRAP,    exp,    exp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	13	None	replace
93	[BUG]  [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result        =        dotrap(exp,        MULTIPLY_TRAP,        result,        result);        if(exp    >    0)    {    result    =    dotrap(exp,    MULTIPLY_TRAP,    result,    result);    }    if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  if(exp  >  0)  {  result  =  dotrap(exp,  MULTIPLY_TRAP,  result,  result);  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
94	[BUG]  [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  exponent);  [CE]  cannot  find  symbol  exponent  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  exp,  MULTIPLY_TRAP,  exponent);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  exp,  MULTIPLY_TRAP,  exponent);	  result    =    trap(result,    exp,    MULTIPLY_TRAP,    result);    	non-compiled	[CE]  cannot  find  symbol  exponent	39	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  else  {  result.exp  =  exp;  }  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result.exp    =    exp;    if(exp!=  exp)  {  result.exp  =  exp;  }  else  {  result.exp  =  exp;  }	  	compilable	  [FE]  AssertionError  	40	1	add
96	[BUG]  [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  else  {  result.exp  =  exp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  else  {  result.exp  =  exp;  }  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result.exp    =    exp;    if(exp!=  exp)  {  result.exp  =  exp;  }  else  {  result.exp  =  exp;  }	  	compilable	  [FE]  AssertionError  	40	1	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	add	                result.exp    =    exp;    if(exp!=  exp)  {  result.exp  =  exp;  }	  	compilable	  [FE]  AssertionError  	40	1	add
98	[BUG]  [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]          result.exp  =  exp;  if(exp!=  exp)  {  result.exp  =  exp;  }  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	                result.exp    =    exp;    if(exp!=  exp)  {  result.exp  =  exp;  }	  	compilable	  [FE]  AssertionError  	40	1	add
99	[BUG]  [BUGGY]  result  =  trap(result,  exp,  DIVIDE_TRAP,  MULTIPLY_TRAP);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(result,  exp,  DIVIDE_TRAP,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(result,  exp,  DIVIDE_TRAP,  MULTIPLY_TRAP);	  result    =    trap(mant,    excp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	15	None	replace
100	[BUG]  [BUGGY]  result  =  dotrap(result,  exp,  MULTIPLY_TRAP,  result);  [CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  dotrap(result,  exp,  MULTIPLY_TRAP,  result);  [BUGGY]      result  =  dotrap(excp,  MULTIPLY_TRAP,  result,  result);  }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  dotrap(result,  exp,  MULTIPLY_TRAP,  result);	  result    =    dotrap(result,    MULTIPLY_TRAP,    exp,    excp);    	non-compiled	[CE]  method  dotrap  in  class  Dfp  cannot  be  applied  to  given  types;	19	None	replace
101	[BUG]  [BUGGY]  result  =  trap(mant,  exp,  exp,  MULTIPLY_TRAP);  [CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      result.shiftRight();  result.mant[mant.length-1]  =  rh;  }  if  (result.mant[mant.length-1]  ==  0)  {  //  if  result  is  zero,  set  exp  to  zero  result.exp  =  0;  }  final  int  excp  =  result.round(lostdigit);  if  (excp  !=  0)  {      [BUGGY]  result  =  trap(mant,  exp,  exp,  MULTIPLY_TRAP);  [BUGGY]      }  return  result;  }  [CLASS]  Dfp  [METHOD]  multiplyFast  [RETURN_TYPE]  Dfp  final  int  x  [VARIABLES]  boolean  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  DfpField  field  int[]  mant  product  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  aextradigit  bextradigit  decimalPos  diff  e  excp  exp  exponent  extra  i  j  lostdigit  md  n  offset  p  q  r  result  rh  rsize  sciexp  significantDigits  x  Dfp  result  	projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java	1.0	1663	1663	1	replace	result  =  trap(mant,  exp,  exp,  MULTIPLY_TRAP);	  result    =    trap(result.mant,    mant,    excp,    MULTIPLY_TRAP);    	non-compiled	[CE]  method  trap  in  class  Dfp  cannot  be  applied  to  given  types;	35	None	replace
