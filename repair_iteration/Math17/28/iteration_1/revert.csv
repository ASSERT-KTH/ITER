projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(nans==INFINITE&&x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);field.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);result=newInstance(getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()||isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getZero();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=newInstance(getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero()-1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero()+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=NAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){if(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){if(x>=0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){if(x==INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){if(x!=INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()&&isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,RADIX);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,NAN_INFINITE);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getZero()+1;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getNumber();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=NAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=RADIX;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIEEEFlagsBits()||isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()),result);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){If(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);result=newInstance(getZero());}
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=getNaN();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=newint[getZero()];
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=result.nans;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(getZero(),result.nans);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==0){
