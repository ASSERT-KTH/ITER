projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(nans==INFINITE&&x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);field.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);result=newInstance(getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()||isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getZero();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=newInstance(getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero()-1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,getZero()+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=NAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){if(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){if(x>=0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){if(x==INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==INFINITE&&nans==0){if(x!=INFINITE&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()&&isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,RADIX);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,NAN_INFINITE);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getZero()+1;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getNumber();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=NAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=RADIX;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIEEEFlagsBits()||isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()),result);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){If(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEFlagsBits(DfpField.FLAG_INVALID);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0){Field.setIEEEFlagsBits(DfpField.FLAG_INVALID);result=newInstance(getZero());}
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=getNaN();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=newint[getZero()];
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=result.nans;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(getZero(),result.nans);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=NAN_STRING;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0&&nans==0){if(x==0&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0&&nans==0){if(x>=0&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=RADIX){if(x!=RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=RADIX){if(x>=RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=RADIX){if(x>>RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=x;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(getZero(),result.nans,1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625If(x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(!isIgnorable()&&isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==0){if(x==0||x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==0){if(x>=0||x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x<0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x<0||x>=RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||nans==0){if(x==0||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||nans==0){if(x>=0||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEEFlagsBits(DfpField.FLAG_INVALID,x+1);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;nans=QNAN;nans=QNAN;nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;nans=QNAN;intnans=QNAN;nans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,2);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,NAN_STRING,MULTIPLY_TRAP,newInstance(getZero()));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;intnans=QNAN;nans=QNAN;intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;intnans=QNAN;intnans=QNAN;intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX&&nans==0){if(x==RADIX&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX&&nans==0){if(x!=RADIX&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getNumber()+1;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getNumber()-1;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=newInstance(getZero(),field);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEFlagsBits(DfpField.INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()||isIEEEFlagsBits()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x!=0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFlagsBits(DfpField.INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]result=getNaN();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(NAN_INFINITE,result.nans);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(nans,NAN_INFINITE);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isNaN()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()),x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()),nans);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==RADIX){if(x==0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==RADIX){if(x>=0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x+1,field);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Field.setIEEFFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=newint[getZero()+1];
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]result=newint[getZero()];
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(nans==ERR_SCALE){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(nans==INFINITE){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625Integerx=getX();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==0){If(x==0||x==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEEFlagsBits(DfpField.FLAG_INVALID,x+1,RADIX);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=newInstance(getZero(),x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=newInstance(getField());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625FieldUtils.setIEEFFlagsBits(DfpField.FLAG_INVALID,x);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x<0||nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero());
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0||x==RADIX){If(x==0||x==RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=QNAN;intnans=QNAN;Integernans=QNAN;intnans=QNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,NAN_STRING,MULTIPLY_TRAP,newInstance(getZero()),result);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==0&&nans==0){If(x==0&&nans==0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=0;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x<0||x>0){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=0;nans=0;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=NAN;nans=NAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=getNan();
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(isIgnorable()){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(getZero(),result.nans,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result.nans=SNAN;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intnans=0;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625int[]nans=newint[getZero()-1];
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,0,RADIX);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero(),x));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(field.getItemCount()>MAX_EXP){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625nans=NAN;result=dotrap(DfpField.FLAG_INVALID,MULTIPLY_TRAP,newInstance(getZero()));
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(field!=null){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intx=Math.min(result.nans,0);
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x<0||x>RADIX){
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625intnans=1;
projects/Math17/src/main/java/org/apache/commons/math3/dfp/Dfp.java1625if(x==RADIX||x==0){
