projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_HeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){intdiskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEFT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;buffer+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.RELATIVE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<?>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetremaining=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203remaining=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<N>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length()+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length()+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset!=null){offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset!=DWORD){offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){disk
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;offset+=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;offset-=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;offset=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;offset+=DWORD+remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;offset+=DWORD+rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE|RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.diskStart=newZipLong(buffer,offset);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;intremaining=length-2*DWORD;buffer.append(relativeHeaderOffset);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.diskStart=newZipLong(buffer,offset);offset-=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.diskStart=newZipLong(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;intremaining=length-2*DWORD;offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.diskStart=newZipLong(buffer,offset);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER+size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset>=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}If(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset>>null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<T>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<N>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<?>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset-=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=3;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;remaining=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('')+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset+=LFH_MUST_HAVE_BOTH_SIES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset+=LFH_MUST_HAVE_BOTH_SITES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining<=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining<DWORD){discStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;position+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.computeLength(buffer,offset);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer,offset);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<length){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length-2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining-1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=READER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD,compressedSize);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining/DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+1*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HALFER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_ID-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_ID-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset=LBH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG;offset=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset=LFH_MUST_HAVE_BOTH_SIZES_MSG
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressedSize.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=3;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining*2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}If(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{diffStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{disqueStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.RIGHT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEFT|RelativeHeaderOffset.LEFT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.CENTER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.BOTTOM;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEFT|RelativeHeaderOffset.RIGHT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.computeValue(buffer,offset);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeValue(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>=DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD+buffer.length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset+=DWORD+buffer.length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD+buffer.length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}else{thrownewZipException("");}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}If(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset>>null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset!=null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length/2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}If(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,off);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset-=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}If(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset-=DWORD;}else{disqueStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset-=DWORD;}else{diffStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=2;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset=2;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset-=2;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=2;offset=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=2;offset=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=3;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<T>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<V>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=length-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset-=length-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=length-(remaining-DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=size-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=width-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=length-(remaining-DWORD));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,off);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset!=null){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset==null){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset!=0){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset!=null){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset!=0){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset==null){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(relativeHeaderOffset!=null){offset+=0;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);compressedSize+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.longValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.floatValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.doubleValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.intValue()-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT|RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeRelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.doubleValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203buffer+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer+=LBH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer+=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG|RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG|RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG|RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_S
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG|RelativeHeaderOffset.LFH_MUST_HAVE_BOTH
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,buffer,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,remaining,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,size,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,remaining,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,length,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+remaining+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+remaining+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}if(remaining>DWORD){offset-=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=1*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}if(remaining>DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=3*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}If(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;position+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;index+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<T>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<N>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<Z>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,relativeHeaderOffset-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<T>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<N>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203remaining=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<?>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<Z>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining!=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining==DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){offset-=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}If(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(remaining);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ComparableHeaderOffsetrelativeHeaderOffset=newComparableHeaderByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG.getValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}If(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){referHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset+=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;intoffset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset|=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset-=DWORD;offset-=DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.computeLength(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.computeLength(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer);offset+=LFH_MUST_HAVE_BOTH
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+fileHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length/2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;offset+=3;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;offset+=1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;offset+=2;this.relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;offset+=4;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,size);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);intoffset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset+=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,1,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}If(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diffStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{disqueStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);this.diskStart=newZipLong(buffer,offset);offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);}else{offset=newZipLong(buffer,offset);offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);this.diskStart=newZipLong(buffer,offset);offset+=size-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);}else{offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);this.diskStart=newZipLong(buffer,offset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD);this.diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>0){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=length;offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<Z>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<ZipEight>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,buffer.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,remaining.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,size.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.toCharArray(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset-remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset+=2;offset+=4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset-=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset+=2;offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(remaining<=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset-=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset+=size-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset+=length-2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset+=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset-=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset+=size-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset+=length-3*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset+=width-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+length+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}If(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,off);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;setLength(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=size-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intdiskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203IntegerdiskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){intdiskStart=newZipLong(buffer,offset+WORD);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){intdiskStart=newZipLong(buffer,offset+1);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressedSize);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,size);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressionSize);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,rest);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MIN_VALUE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.MAX_VALUE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.RESULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEIGHT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>0){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset.equals(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset.equals(remaining));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=HEADER_ID){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RELATIVEHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ComparableHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ReclativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ResourceHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset-=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=3;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=2;offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipLong(buffer,offset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=rest;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(relativeHeaderOffset>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2*RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2*relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2*remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset+length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZIPEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*(remaining<DWORD)?LFH_MUST_HAVE_BOTH_SIZES_MSG:LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*(remaining<DWORD)?LFH_MUST_HAVE_BOTH_SIZES_MSG:LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*(remaining<DWORD)?LFH_MUST_HAVE_BOTH_SIZES_MSG:LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*(remaining<DWORD)?LFH_MUST_HAVE_BOTH_SIZES_MSG:LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*(remaining<DWORD)?LFH_MUST_HAVE_BOTH_SIZES_MSG:LFH_MUST_HAVE_BOTH_SIZES_MSG.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2*DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remainder-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);rest-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);continue-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;remaining-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0.0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}else{buffer=newZipLong(buffer,offset+1);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}If(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('')+1;offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.length();offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('',remaining);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('n',remaining);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('');offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.indexOf('n');offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset-=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=size-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;intlength-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}If(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.compareTo(relativeHeaderOffset)<0;offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.compareTo(relativeHeaderOffset);offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.indexOf('')+1;offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.length();offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.length()-2*DWORD;offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.indexOf('',remaining);offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskEnd=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskHeaderOffset=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskField=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.data.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,size);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.substring(LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,buffer.length());
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=2;offset+=2;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset-=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=2;offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=2;offset-=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=3;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset-=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=size-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;intlength-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.longValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(remaining);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<N>diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<?>diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,remaining);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(relativeHeaderOffset!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(relativeHeaderOffset!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset>=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}If(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset>>null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.RELATIVE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.RELATIVE_HEADER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset-=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset+=rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset+=remainder;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset+=remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset+=other;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;offset+=remaining;offset=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toLowerCase(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toUpperCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLength();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeLocalFileData(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.computeLength();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeValue(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeValue(buffer);offset+=LFH_MUST_HAVE_BOTH
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.computeValue(buffer);offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-(length*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD+1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD,compressedSize);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*HEADER_ID);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;offset-=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;offset=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;offset+=length;offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;offset+=width;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('');offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('');
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('');offset+=LFH_MUST_HAVE_BOTH
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining=relativeHeaderOffset.indexOf('');offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*remaining;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;RelatedHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset).relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;RelatedHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipLong(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<ZipEightByteInteger>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RELATIVE_WORD=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0.0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}while(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset-=DWORD;system.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset++]=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset]=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset++]=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset++]=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}else{size=newZipEightByteInteger(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;offset-=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;offset=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;offset+=DWORD+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;buffer+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;offset==DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;setRelativeHeaderOffset(relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;setRelativeHeaderOffset(relativeHeaderOffset,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipLong(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=1*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining!=0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset.add(newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);returnelse{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelatedHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset+=3;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset+=2;offset+=5;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.computeValue(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeValue(buffer,offset+length);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset!=null){reportHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskStart+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskStart,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RELATIVE_HeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remainder+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.RELATIVE_HEADER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.DEFAULT_LEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=null){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);fileStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);position-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);left-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}while(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.indexOf('')+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset+=2;offset+=2;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset+=2;offset+=2;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;buffer+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length*LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=long+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=duration+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0.0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset-=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remaining-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;buffer+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset+=remainder-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;position+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,extendedHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203buffer+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;buffer+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer+=LFH_MUST_HAVE_BOTH_SIZES_SET;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipLong(buffer,offset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>0){diskStart-=0;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>0){offset-=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset>=0){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset!=0){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=length;offset+=length;if(remaining>DWORD){disqueStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressedHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.charAt(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.subtract(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ReserveHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203ReferenceHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+compressedHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,extendedHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressedSize,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=rest;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remainder;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=remaining;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.MAX_VALUE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD-(remaining*LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD+2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.diskStart=newZipLong(buffer,offset);offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.discStart=newZipLong(buffer,offset);offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);position+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=2;offset+=1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;offset+=2);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECIMAL;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){referHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>0){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length());
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();offset+=LFH_MUST_HAVE_BOTHSIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.charAt(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*(relativeHeaderOffset>=0)?0:relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining[Delete]DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(relativeHeaderOffset,buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset+=length;offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZIPEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+3*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;fileStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;fileStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT||relativeHeaderOffset==LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT||relativeHeaderOffset!=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<0){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.computeLength(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.computeLength(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.computeLength(buffer);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.computeLength(buffer);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeHeaderOffset();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.intValue()-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=buffer.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0.0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+extendedHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset+=2;offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}offset=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.LEFT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.LEFT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset-=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=3*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RelativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+RELATIVE_HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,buffer,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(length>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,buffer,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RELATIVEHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=2;offset=4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;offset+=2;offset=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=1;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>=-1){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RELATIVEHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;}if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;RelatedHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;offset+=0;}if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset-=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset-=DWORD;offset=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;DefinedRelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;DefinedRelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;this.diskStart=newZipLong(buffer,offset);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);position+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;offset+=length-1;DefinedRelativeHeaderOffset=newZipEightByteInteger(buffer,offset);off+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<0){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset<0){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(relativeHeaderOffset!=null){offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;buffer+=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;off+=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(relativeHeaderOffset>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(relativeHeaderOffset!=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;buffer+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;off+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.compute(buffer,offset);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset<0){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=READER_ID;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=READER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BEFORE_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=resting+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=2;offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BYTE_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining<DWORD){discStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining<=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset+=length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>0){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){offset+=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<0){offset+=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining!=0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset=length-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=residual.substring(LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=2;offset-=2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=2;offset-=4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=rest;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remainder;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RELATIVEHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>DWORD){discStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=rest;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.computeLength();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset.computeLength();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.computeLocalFileData();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVEHeaderOffset.HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD+1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){offset-=DWORD;offset-=DWORD;}else{buffer[offset++]=relativeHeaderOffset;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset-=DWORD;offset-=DWORD;}else{buffer[offset++]=relativeHeaderOffset;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.RELATIVE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset.add(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest-2,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,relativeHeaderOffset-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}while(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}if(relativeHeaderOffset==null){referHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset-=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(Remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=width-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);offset+=length-(remaining*DWORD));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset+=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);final-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset.doubleValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset-=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;buffer.length+=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;off+=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;offset==DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.TOP;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.NUMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset.append(ZipEightByteInteger.valueOf(buffer,offset));}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);position-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;offset-=remaining;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,length-2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD,compressionHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset!=null){referHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}if(relativeHeaderOffset==null){relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;offset==remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+devHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE*remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intoffset=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.indexOf('',remaining)+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=relativeHeaderOffset.computeLength();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength()-offset;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength()-remaining;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength()+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;offset==length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;offset+=3;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset+=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset+=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);offset-=DWORD;offset-=DWORD;this.diskLong=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RélativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeLength(buffer);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=0){offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;buffer-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset-=2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}offset+=remaining;offset+=other;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.indexOf('');offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.computeLength();offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;intlength=relativeHeaderOffset.getLength();offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+extendedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+long;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeHeaderName;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset=newZipLong(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZIPLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=buffer.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=parent.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=diskStart,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(RelativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset+1);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset.length);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,compressionHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=1*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2/DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;offset+=2-DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=diskStart-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset!=null){referHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;buffer+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=0){offset+=remaining;offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>DWORD){offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<DWORD){offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;intlength=relativeHeaderOffset.indexOf('')+1;offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;intlength=relativeHeaderOffset.length();offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;intlength=relativeHeaderOffset.computeLength(buffer);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffset<ZipEightByteInteger>relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;}else{buffer[offset]=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,buffer,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;offset-=DWORD;offset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining-=LBH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;buffer+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+parent.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_LITERAL;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset+3);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset+=2;offset+=2;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);offset=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;offset==1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;buffer+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;position+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.discardStart=newZipLong(buffer,offset);offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;offset+=length-remaining;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,size);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset<length){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining,buffer.length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset<length){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset<length){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.indexOf('',remaining);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset++]=ZipEightByteInteger.
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;}else{buffer[offset]=ZipEightByteInteger.
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressedHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=parent.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_WAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD,compressionHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length/1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=1;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;offset+=2;offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);offset-=DWORD;offset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZIPLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining+2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=0){offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset-=DWORD;offset-=DWORD;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HEAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}offset+=2;offset+=3;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset==LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset!=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset==LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER||relativeHeaderOffset==LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;offset==2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT||relativeHeaderOffset==0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}offset+=remaining;offset+=remaining;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.indexOf('',remaining);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.length();offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length*2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);if(length>0){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset+=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);offset-=DWORD;offset=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=SIZES_MSG;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;buffer.append(relativeHeaderOffset);offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset<0){offset+=remaining;offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==0){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=0){offset+=remaining;offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset<length){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset>=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}if(relativeHeaderOffset==null){referHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;}else{buffer=newZipEightByteInteger(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeLength(buffer,offset+length);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEADER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);offset+=length-(Remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG|RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203intlength=relativeHeaderOffset.computeValue(buffer,offset,remaining);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;}else{buffer[offset]=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=compressionHeaderOffset,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length+2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);}else{buffer=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;offset+=1;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(relativeHeaderOffset==null){relativeHeaderOffset=newZIPEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE*2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}offset-=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(remaining<length){diskStart-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0*relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203while(relativeHeaderOffset<length){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RestRelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset+=2;}else{diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset+=0;}else{diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=rest;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+parent.relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
