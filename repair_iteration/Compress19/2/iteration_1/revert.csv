projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_HeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{relativeHeaderOffset.add(relativeHeaderOffset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){intdiskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RELATIVE_HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.MAX_VALUE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RELATIVE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=HEADER_ID;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=size;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.substring(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressedSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressionSize;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203RelativeHeaderOffsetdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD+fileStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2*relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,compressedSize,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;System.arraycopy(buffer,offset,relativeHeaderOffset,0,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.intValue();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=relativeHeaderOffset.toCharArray();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LEFT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;buffer+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=2;offset=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+2*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=DWORD,compressionHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);return;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining*DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length-(remaining-DWORD);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.toString();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining<DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>=DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(remaining>DWORD){offset-=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203if(relativeHeaderOffset==null){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}else{buffer.append(RelativeHeaderOffset.toString());}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=RelativeHeaderOffset.RELATIVE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeValue(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.indexOf('')+1;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.indexOf('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeValue(buffer);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java203offset+=length;intlength=relativeHeaderOffset.computeLength();offset+=length;
