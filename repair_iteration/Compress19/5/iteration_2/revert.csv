projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_FIRST;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_STANDARD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('W');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARATION;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARED_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);System.arraycopy(diskStart,0,buffer,offset+remaining,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskEnd=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_NSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_AMG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),diskStart);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_FIRST;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskSize=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskSize=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_FILE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('/');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append(length);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(dialogStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0.0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=remaining;offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG.toLowerCase();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG.charAt(remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=NORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('/');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('/');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset+=length;buffer.append(diskStart).append('/');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;buffer.append(diskStart).append('/');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=length;buffer.append(diskStart).append('/');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=length;buffer.append(diskStart).append('/');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset=newZipLong(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;buffer.append(diskStart).append(length-DWORD);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;buffer.append(diskStart).append(length-1);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;buffer.append(diskStart).append(length-2);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;buffer.append(diskStart).append('/');offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset=newZipLong(buffer,offset);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining!=DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining<WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining<WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}if(diskStart==null){discStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}If(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==WORD){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>diskStart){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining<WORD){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>diskStart){remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;resetRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;isRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remainder-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>3){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>3){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>length){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>0){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>0){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>0){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>0){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append(remaining-WORD);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append(remaining-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append(diskStart-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining-2);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining-1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipEightByteInteger(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-remaining*WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-remaining,length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart/remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=LIVE_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}elseif(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append('');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append('');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;buffer.append(diskStart).append('');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset-=WORD;buffer.append(diskStart).append('');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append('');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>3){discStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>3){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>length){discStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECEMBER_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart-DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=1;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;returnelse{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;returnelse{diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining<DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;offset+=remaining;offset+=remaining;relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;if(this.relativeHeaderOffset!=null){this.relativeHeaderOffset=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(remaining);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(length-2);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(length-1);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append('n');offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(remaining-1);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(remaining-2);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart).append(remaining-=2);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append(length-1);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append(remaining-1);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append(remaining);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append(length+1);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append('');offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;buffer.append(diskStart).append(remaining+1);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=0;while(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;while(remaining>0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>3){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=1;while(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append(remaining);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append(remaining);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(remaining).append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining+1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;offset+=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RELATIVEHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ReclativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ComparableHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){relativeHeaderOffset=newZipLong(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG-diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=discStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart.length+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart.length+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart,remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('/');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append('/');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append('/');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=length-3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length-3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;offset+=length-3;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskSize=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskSize=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;}elseif(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}elseif(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskEnd=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskEnd=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskEnd=newZipLong(buffer,offset);offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append(length-2);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length/2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length*2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=width;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==null){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208diskSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=null){diskSize=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining!=0){diskSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining!=null){diskSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208nisipSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remainder-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){discStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=10;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart).append(length-1);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart,length-1);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart).append('');offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart).append(length-1);remaining-=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart).append(length-1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer.append(diskStart,remaining);offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining==0){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining==0){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=DWORD){diskStart=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=length-2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length-2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;this.diskStart=newZipEightByteInteger(buffer,offset);offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;offset+=length-2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<=0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_FILE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_FILE_SIZE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}offset+=2;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>DWORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==DWORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer.append(diskStart).append(length-1);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer.append(diskStart);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer.append(diskStart).append('');offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer.append(diskStart).append(length+1);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer.append(diskStart).append(length-2);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer=newZipLong(remaining,offset);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;buffer=newZipLong(buffer,offset);offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>1){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset-=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset+=2;offset+=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset+=2;offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset+=3;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;offset+=2;offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;remaining+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart==null){discStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}If(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset+remaining);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset+1);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset+2);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset+diskStart);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset=newZipLong(buffer,offset+length);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=3;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining<WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;offset+=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;offset+=DWORD;offset+=DWORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;offset-=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;offset=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;offset+=DWORD;offset=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<=0){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208DiskStartdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208discardStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208DiscardLongdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208iskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208DispatcherDiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208DiscardSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining<WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining==WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart+DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE+remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithLocalFileData(buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithFieldSize(buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithFieldSize(remaining,buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithFiles(remaining,buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithLocalFileData.length;remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithFieldSize(remaining);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;intlength=fileEndsWithLocalFileData(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208DiscardStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=remaining;}else{diskStart=newZipLong(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=remaining;}else{relativeHeaderOffset=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length-length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset+1);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset+2);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(remaining,buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset+remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(remaining,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-4;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length/3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart,remaining-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart,remaining);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;buffer.append(diskStart);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart!=null){discStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart>=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;offset-=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;offset+=remaining;offset+=rest;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;offset=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;offset+=remaining;offset+=remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset-=WORD;offset-=WORD;remainder-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset+=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset-=WORD;offset-=WORD;rest-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset=newZipLong(buffer,offset);offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset-=WORD;offset-=BORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;offset-=WORD;offset-=GORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_SIZE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_SIZE+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining<DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining<=DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining<DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=0.0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(relativeHeaderOffset!=0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining!=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>>WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>=WORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_FIRST;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset+=length;buffer.append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=length;buffer.append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=diskStart){offset+=length;buffer.append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==diskStart){offset+=length;buffer.append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=length;buffer.append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=0){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<=0){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(remaining);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(length-1);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(length-2);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(remaining-1);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(remaining);remaining-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;buffer.append(diskStart).append(long);offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart+DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart+DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append('W');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('W');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append('W');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;buffer.append(diskStart).append('W');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset-=WORD;buffer.append(diskStart).append('W');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append('W');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);System.
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;elseif(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;elseif(remaining==LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;elseif(remaining==LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);System.
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=length;offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('n');offset+=length;}else{remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECLARATION;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);ZipLongdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);ZZLongdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);ZipLongdiskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);ZipLongdiscStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+diskStart),remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset,diskStart);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),diskStart,remaining);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),diskStart,length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+diskStart),length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+diskStart));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),diskStart);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_LAST_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-2*remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart/2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart==null){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart>=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}If(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZipLong(buffer,off);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining!=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>>WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=WORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=3;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}offset=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining<diskStart){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining<diskStart){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>=diskStart){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>=diskStart){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE/1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;returnelse{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;returnelse{diskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=remaining;offset+=remaining;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remainder-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append(length-1);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append(length);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append(length+1);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append(length-2);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;offset=newZipLong(buffer,offset);offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;offset=newZipLong(buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart).append(remaining+0);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart).append(remaining);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart).append('');offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart).append(length-0);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(remaining-diskStart);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;buffer.append(diskStart).append(remaining-0);offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;remaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;while(remaining>WORD){remaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;remainder-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;rest-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;remaining=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;while(remaining>WORD){remaining-=WORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;longremaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;Rest-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskEnd.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=BORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=WORD;resetRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=WORD;SetRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZIPEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset=newZipLong(buffer,offset);offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset=Math.max(remaining,diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset=Math.max(remaining,diskStart)-DWORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset=Math.max(remaining,diskStart)-1;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset+=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset=Math.max(remaining,diskStart)/2;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskSize=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskSize=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=1;while(remaining>0){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>3){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<=0){offset+=DWORD;offset+=DWORD;}elseif(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>diskStart){offset+=DWORD;}else{relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;}else{relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;remaining-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;offset-=WORD;remaining-=WORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;remaining-=WORD;}else{diskStart=newZipLong(buffer,offset+length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;remaining-=WORD;}else{diskStart=newZipLong(buffer,offset+1);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;offset-=WORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG,diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;}elseif(remaining==WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}elseif(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart>=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset-=WORD;offset-=WORD;}else{setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+diskStart),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),relativeHeaderOffset,diskStart);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+2),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;buffer.append(diskStart);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart);offset+=length;}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart);offset+=length;}else{remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset+=length;buffer.append(diskStart);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remainder-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}if(remaining<WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}offset+=remaining;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=0){diskSize=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskSize=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=null){diskSize=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>=0){diskSize=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>-1){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;resetRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,off));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;SetRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZIPEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));offset-=WORD;offset-=WORD;isRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES_MSG+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARED_SIZE+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECLARED_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARED_SIZE+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append(length-1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<WORD){offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(remaining).append(length-1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;buffer.append(diskStart).append('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset+=length;buffer.append(diskStart).append('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=length;buffer.append(diskStart).append('');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('');offset+=length;}else{remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart*DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart*DEFAULT_DECIMAL_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}if(diskStart>=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}if(diskStart!=null){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}if(diskStart>>null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}If(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECLARATION;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining==WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining!=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=WORD){if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=DWORD){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInt
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(remaining);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(dialogStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(dialogStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){offset+=length;}else{diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=remaining;offset+=remaining;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=remaining;offset+=remaining;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECEMBER+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZE+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZE+2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=remaining;offset+=remaining;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset+=remaining;offset+=remaining;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==0){offset+=remaining;offset+=remaining;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=0){offset+=remaining;offset+=remaining;}else{this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_STANDARD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){discStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remainder-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining<discStart){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining<discStart){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining<diskStart){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>=diskStart){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>discStart){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){offset+=DWORD;}else{discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong(buffer,offset);offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=3;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset+=2;offset+=2;if(remaining>=DWORD){discStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}offset=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;if(remaining>=-1){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining!=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining>>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(diskStart).append(length);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset+=length;buffer.append(diskStart).append(length);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}else{remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD)
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE;offset+=DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECLARATION;offset+=DEFAULT_DECLARATION;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>diskEnd){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=DWORD;}else{relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset+=DWORD;}else{relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<=0){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}else{buffer.append("n");}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}else{buffer.append('-');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append(length);offset+=length;}else{buffer.append('/');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=-1){offset+=DWORD;offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>length){discStart=newZipLong(buffer,offset);remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+DEFAULT_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-buffer.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining!=0){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;buffer.append(diskStart).append(remaining-WORD);offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(remaining-WORD).append(diskStart-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208buffer.append(remaining).append(diskStart-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;buffer.append(diskStart).append(remaining-WORD);offset-=WORD;}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart!=0){offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,relativeHeaderOffset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=length;offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==0){offset+=length;offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset+=length;offset+=length;}elseif(remaining>=0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0.0){offset+=length;offset+=length;}elseif(remaining>=0.0){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining==-1){offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset-=WORD;offset-=WORD;remaining-=WORD;}else{diskStart=newZipLong(buffer,offset+2*diskStart);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}if(diskStart==null){diskStart=newZIPLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=length;buffer.append(diskStart);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;buffer.append(diskStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=length;buffer.append(diskStart);offset+=length;}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=1;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=SHORT;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208while(remaining>1){diskStart=newZipLong(buffer,offset);remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;offset+=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_SIZE;offset+=DEFAULT_DECEMBER_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE;offset+=DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);position-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=ZipEightByteInteger(buffer,offset);offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;offset-=DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);off+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskEnd-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskHeaderOffset-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*DEFAULT_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart*DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}if(remaining<
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(length>diskStart){offset+=length;buffer.append(diskStart).append('n');offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){offset+=length;buffer.append(diskStart).append('n');offset+=length;}else{buffer.append("n");offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){discStart=newZipLong(buffer,offset);remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);remainder-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;while(remaining>DWORD){diskEnd=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;offset-=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;buffer+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;offset+=size-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;off+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;offset=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length+LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining==DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining>>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining!=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}elseif(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>0){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(relativeHeaderOffset!=null){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(relativeHeaderOffset!=0){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;if(remaining>0){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}if(remaining>=WORD){diskStart
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=0){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DW
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>0){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>-1){diskStart=newZipLong(buffer,offset);offset+=-WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HEAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG.trim();
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(remaining,buffer);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(remaining,buffer.length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARATION+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARATION+1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;while(remaining>diskStart){remaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;while(remaining>diskStart){remaining-=WORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;remaining-=WORD;remaining-=WORD;parseFromLocalFileData(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;remaining-=WORD;remainder-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=-1){offset+=DWORD;offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=-1){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset+=DWORD;offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=-1){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<0){diskStart=newZipLong(buffer,offset);offset+=0;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStartLength;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DEFAULT_SIZE;buffer.append(diskStart).append('/');offset-=DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=4;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=3;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(relativeHeaderOffset==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=0){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208RelativeHeaderOffsetrelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-deFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=2;while(remaining<=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;this.relativeHeaderOffset=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;this.diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;offset-=WORD;offset-=WORD;setRelativeHeaderOffset(relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;offset+=2*DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset-=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;buffer+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;offset+=length;offset+=length.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(remaining<DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remainder-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=offset;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=HEADER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);offset-=WORD;offset-=SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset-=3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);remaining-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;offset-=2;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;buffer.append(diskStart).append('n');offset-=length;
