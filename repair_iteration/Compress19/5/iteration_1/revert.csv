projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_FIRST;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_STANDARD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2*DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=0;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(length-1);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining-WORD);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(remaining);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append(length-2);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('W');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=discStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECEMBER;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARATION;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECLARED_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=READER_ID;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=size;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);continue-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}elseif(remaining>=DWORD){diskStart=newZipLong(buffer,offset);System.arraycopy(diskStart,0,buffer,offset+remaining,length);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>DWORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>WORD){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskSize=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECEMBER_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length-3;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){discStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskStart=newZipLong(buffer,offset);remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){diskEnd=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}elseif(remaining>=LFH_MUST_HAVE_BOTH_SIZES_MSG){relativeHeaderOffset=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;offset+=length;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_MSGS;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_NSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_HAVE_BOTH_SIZES_AMG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>diskStart){diskStart=newZipLong(buffer,offset);offset+=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-1;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart-length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=diskStart,remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZE+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(discStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;remaining-=WORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;this.relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>DWORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=remaining;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>diskStart){remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=diskStart.length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;RelativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;}if(remaining>=WORD){diskStart=newZipLong(buffer,offset);offset+=2;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),diskStart);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset));remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset+length));
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset),relativeHeaderOffset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;setRelativeHeaderOffset(newZipEightByteInteger(buffer,offset);offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);offset+=DWORD;}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_FIRST;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=diskEnd;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG+diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG-diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG*diskStart;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskSize=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=remaining;offset+=remaining;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskSize=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LFH_MUST_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DWORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_FILE_SIZE;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DEFAULT_DECIMAL_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208ZipLongdiskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart==null){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskStart=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208if(diskStart!=null){diskSize=newZipLong(buffer,offset);}else{buffer.append('n');}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=DEFAULT_DECIMAL_SIZES;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=WORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=2;offset+=2;if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);}else{diskStart=newZipLong(buffer,offset);}
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_DECIMAL_MUST_HAVE_BOTH_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=LAST_DECIMAL_SIZES_MSG;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;buffer.append(diskStart).append('/');offset-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset-=WORD;offset-=WORD;}else{diskStart=newZipLong(buffer,offset+length);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{relativeHeaderOffset=newZipEightByteInteger(buffer
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=DWORD;offset+=DWORD;}if(remaining>=DWORD){diskStart=newZipLong(buffer,offset);offset+=DWORD;}else{diskStart=newZipEightByteInteger(buffer,offset
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append('/');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append('n');offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(diskStart).append(length);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208offset+=length;buffer.append(dialogStart);offset+=length;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){diskStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){diskStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){discStart=newZipLong(buffer,offset);remaining-=WORD;
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0){discStart=newZipLong(buffer,offset);
projects/Compress19/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java208remaining-=WORD;while(remaining>0.0){diskStart=newZipLong(buffer,offset);
