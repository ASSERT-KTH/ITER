bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  numerator    =    BigInteger.valueOf(q1);    denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
2	[BUG]  [BUGGY]  denominator  =  BigInteger.valueOf(q1);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  denominator  =  BigInteger.valueOf(q1);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	denominator  =  BigInteger.valueOf(q1);	  numerator    =    BigInteger.valueOf(q1);    denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	30	None	replace
3	[BUG]  [BUGGY]  nator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2);  [CE]  cannot  find  symbol  nator  [FE]              FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  nator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	nator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2);	  numDenominator    =    BigInteger.valueOf(p1);    denominator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  cannot  find  symbol  nator	24	None	replace
4	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                  FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);	  BigInteger    p1    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	11	None	replace
5	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                    FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);	  BigInteger    p1    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	11	None	replace
6	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(maxDenominator);	  numerator    =    BigInteger.valueOf(maxDenominator);    denominator    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	27	None	replace
7	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(maxDenominator);	  numerator    =    BigInteger.valueOf(maxDenominator);    denominator    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	27	None	replace
8	[BUG]  [BUGGY]  Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(q2);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(q2);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(q2);	  Numerator    p1    =    BigInteger.valueOf(0);    denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
9	[BUG]  [BUGGY]  denominator  =  BigInteger.valueOf(p1);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  denominator  =  BigInteger.valueOf(p1);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	denominator  =  BigInteger.valueOf(p1);	  denominator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	3	None	replace
10	[BUG]  [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(p1);  [CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(p1);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	BigInteger  p1  =  BigInteger.valueOf(p1);	  BigInteger    p1    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	33	None	replace
11	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  n  =  BigInteger.valueOf(maxDenominator);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  n  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1);  n  =  BigInteger.valueOf(maxDenominator);	  numerator    =    BigInteger.valueOf(maxDenominator);    n    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  incompatible  types	26	None	replace
12	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(maxDenominator);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(maxDenominator);	  numerator    =    BigInteger.valueOf(maxDenominator);    n    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  incompatible  types	26	None	replace
13	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(p1,  numerator);  [CE]  no  suitable  method  found  for  valueOf(long,BigInteger)  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(p1,  numerator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(p1,  numerator);	  n    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,BigInteger)	18	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	add	numerator  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(p2);    numerator    =    BigInteger.valueOf(p2);    	compilable	  [FE]  AssertionError  	25	2	replace
15	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(q2);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(p2);    numerator    =    BigInteger.valueOf(p2);    	compilable	  [FE]  AssertionError  	25	2	replace
16	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2,  maxDenominator);  [CE]  incompatible  types  [FE]              FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2,  maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q2,  maxDenominator);	  n    =    BigInteger.valueOf(p1);    denominator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  incompatible  types	31	None	replace
17	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(q2,  p2);  denominator  =  BigInteger.valueOf(denominator);  [CE]  no  suitable  method  found  for  valueOf(long,long)  [FE]                  FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(q2,  p2);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(q2,  p2);  denominator  =  BigInteger.valueOf(denominator);	  numerator    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,long)	5	None	replace
18	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1,  num);  denominator  =  BigInteger.valueOf(denominator);  [CE]  cannot  find  symbol  num  [FE]                    FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1,  num);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1,  num);  denominator  =  BigInteger.valueOf(denominator);	  numerator    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  cannot  find  symbol  num	5	None	replace
19	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(numerator);  denominator  =  BigInteger.valueOf(denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(numerator);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(numerator);  denominator  =  BigInteger.valueOf(denominator);	  n    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	29	None	replace
20	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(q1);  numerator  =  BigInteger.valueOf(q2);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(q1);  numerator  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(q1);  numerator  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(q1);    numerator    =    BigInteger.valueOf(p);    	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	9	None	replace
21	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(numerator,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(numerator,  denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(numerator,  denominator);	  n    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)	18	None	replace
22	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1,  0);  denominator  =  BigInteger.valueOf(denominator);  [CE]  no  suitable  method  found  for  valueOf(long,int)  [FE]                  FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1,  0);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1,  0);  denominator  =  BigInteger.valueOf(denominator);	  numerator    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,int)	5	None	replace
23	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(denominator);  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(denominator);	  n    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  incompatible  types	29	None	replace
24	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(q2);  [CE]  incompatible  types  [FE]              FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(q2);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(maxDenominator);  denominator  =  BigInteger.valueOf(q2);	  n    =    BigInteger.valueOf(p1);    denominator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  incompatible  types	31	None	replace
25	[BUG]  [BUGGY]  Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(p1);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(p1);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	Numerator  p1  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(p1);	  Numerator    p1    =    BigInteger.valueOf(0);    denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
26	[BUG]  [BUGGY]  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	denominator  =  BigInteger.valueOf(maxDenominator);	  denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	4	None	replace
27	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(0);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(0);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(0);	  numerator    =    BigInteger.valueOf(0);    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	35	None	replace
28	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p2,  epsilon);  denominator  =  BigInteger.valueOf(denominator);  [CE]  no  suitable  method  found  for  valueOf(long,double)  [FE]                  FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p2,  epsilon);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p2,  epsilon);  denominator  =  BigInteger.valueOf(denominator);	  numerator    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,double)	5	None	replace
29	[BUG]  [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(numerator);  [CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                  FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(numerator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	BigInteger  p1  =  BigInteger.valueOf(numerator);	  BigInteger    p1    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
30	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(p2);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(p2);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(p2);	  numerator    =    BigInteger.valueOf(q1);    denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	30	None	replace
31	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(0);  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(0);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(0);	  numerator    =    BigInteger.valueOf(0);    denominator    =    BigInteger.valueOf(q1);    	non-compiled	[CE]  incompatible  types	6	None	replace
32	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(p2,  numerator);  [CE]  no  suitable  method  found  for  valueOf(long,BigInteger)  [FE]            FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(p2,  numerator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(p2,  numerator);	  n    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,BigInteger)	18	None	replace
33	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(0);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(0);  [BUGGY]      denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(0);  denominator  =  BigInteger.valueOf(0);	  numerator    =    BigInteger.valueOf(0);    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  incompatible  types	35	None	replace
34	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(denominator);  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(denominator);	  n    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(denominator);    	non-compiled	[CE]  incompatible  types	29	None	replace
35	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q1);  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {      [BUGGY]  n  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q1);  [BUGGY]      numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.5	332	332	2	replace	n  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q1);	  n    =    BigInteger.valueOf(p2);    denominator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  incompatible  types	32	None	replace
