bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  a1  =  (int)FastMath.floor(r0);  [CE]  incompatible  types  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  (int)FastMath.floor(r0);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  (int)FastMath.floor(r0);	      BigInteger    a1    =    (long)FastMath.floor(r0);    	non-compiled	[CE]  incompatible  types	6	None	replace
2	[BUG]  [BUGGY]  BigInteger  a1  =  (long)FastMath.floor(r0,  overflow);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  (long)FastMath.floor(r0,  overflow);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  (long)FastMath.floor(r0,  overflow);	      BigInteger    a1    =    (long)FastMath.floor(r0);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	6	None	replace
3	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.floor(value);  long  a0  =  (long)FastMath.floor(value);  [CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  (long)FastMath.floor(value);  long  a0  =  (long)FastMath.floor(value);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	long    a0    =    (long)FastMath.floor(value);    long  a0  =  (long)FastMath.floor(value);	  	non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	add
4	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.floor(value);  int  a0  =  (long)FastMath.floor(value);  [CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  (long)FastMath.floor(value);  int  a0  =  (long)FastMath.floor(value);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	long    a0    =    (long)FastMath.floor(value);    int  a0  =  (long)FastMath.floor(value);	  	non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	add
5	[BUG]  [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	double  a0  =  (double)FastMath.floor(r0);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)	1	None	replace
6	[BUG]  [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0,  overflow);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0,  overflow);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =(BigInteger)FastMath.floor(r0,  overflow);	      BigInteger    a1    =(BigInteger)FastMath.floor(r0);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0,  value);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0,  value);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =(BigInteger)FastMath.floor(r0,  value);	      BigInteger    a1    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	5	None	replace
8	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r0);  [CE]  cannot  find  symbol  a0  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a1  =(long)FastMath.floor(r0);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	long  a1  =(long)FastMath.floor(r0);	      int    a1    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol  a0	9	None	replace
9	[BUG]  [BUGGY]  int  a0  =  (int)FastMath.floor(value);  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  a0  =  (int)FastMath.floor(value);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	int  a0  =  (int)FastMath.floor(value);	  long    a0    =    (long)FastMath.floor(value);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
10	[BUG]  [BUGGY]  BigInteger  a1  =  value.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  value.doubleValue();  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  value.doubleValue();	      	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
11	[BUG]  [BUGGY]  BigInteger  a1  =  numerator;  [CE]  cannot  find  symbol  a0  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  numerator;  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  numerator;	      	non-compiled	[CE]  cannot  find  symbol  a0	2	None	replace
12	[BUG]  [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0  +  1);  [CE]  inconvertible  types  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =(BigInteger)FastMath.floor(r0  +  1);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =(BigInteger)FastMath.floor(r0  +  1);	      BigInteger    a1    =(BigInteger)FastMath.floor(r0);    	non-compiled	[CE]  inconvertible  types	4	None	replace
13	[BUG]  [BUGGY]  BigInteger  a1  =  BigInteger.valueOf(r0);  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  BigInteger.valueOf(r0);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  BigInteger.valueOf(r0);	      	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	2	None	replace
14	[BUG]  [BUGGY]  BigInteger  a1  =  BigInteger.valueOf(r1);  [CE]  cannot  find  symbol  r1  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  BigInteger  a1  =  BigInteger.valueOf(r1);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	BigInteger  a1  =  BigInteger.valueOf(r1);	      	non-compiled	[CE]  cannot  find  symbol  r1	2	None	replace
15	[BUG]  [BUGGY]  long  a0  =  value.longValue();  [CE]  double  cannot  be  dereferenced  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  value.longValue();  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	long  a0  =  value.longValue();	      	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
16	[BUG]  [BUGGY]  int  a0  =(int)FixMath.floor(r0);  [CE]  cannot  find  symbol  FixMath  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  a0  =(int)FixMath.floor(r0);  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	274	274	2	replace	int  a0  =(int)FixMath.floor(r0);	      long    a0    =(long)FixMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol  FixMath	3	None	replace
