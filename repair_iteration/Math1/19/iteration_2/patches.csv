bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1l;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  overflow  +  1l;	  double    r0    =    overflow    +    1;    	compilable	  [FE]  FractionConversionException  	18	6	replace
2	[BUG]  [BUGGY]  double  r0  =  overflow  +  1l;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1l;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  overflow  +  1l;	  double    r0    =    overflow    +    1;    	compilable	  [FE]  FractionConversionException  	18	6	replace
3	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  *  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  overflow  *  1;	  double    r0    =    overflow    +    1;    	compilable	  [FE]  FractionConversionException  	18	6	replace
4	[BUG]  [BUGGY]  double  r0  =  overflow  *  1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  *  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  overflow  *  1;	  double    r0    =    overflow    +    1;    	compilable	  [FE]  FractionConversionException  	18	6	replace
5	[BUG]  [BUGGY]  int  r0  =  overflow;  long  r0  =  overflow;  [CE]  possible  loss  of  precision  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  int  r0  =  overflow;  long  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	int  r0  =  overflow;  long  r0  =  overflow;	  double    r0    =    overflow;    long    r0    =    overflow;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
6	[BUG]  [BUGGY]  int  r0  =  overflow;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  int  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	int  r0  =  overflow;	  long    r0    =    overflow;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
7	[BUG]  [BUGGY]  long  r0  =  overflow;  int  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  long  r0  =  overflow;  int  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;  int  r0  =  overflow;	  double    r0    =    overflow;    int    r0    =    overflow;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
8	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(0);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(0);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(0);	  BigInteger    value    =    BigInteger.valueOf(intValue);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	22	None	replace
9	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);	  BigInteger    value    =(BigInteger)FastMath.ceil(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
10	[BUG]  [BUGGY]  double  r0  =  this.overflow.doubleValue();  [CE]  cannot  find  symbol  overflow  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  this.overflow.doubleValue();  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  this.overflow.doubleValue();	  double    r0    =    overflow.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  overflow	7	None	replace
11	[BUG]  [BUGGY]  double  r0  =  0;  double  r0  =  0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0;  double  r0  =  0;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    0;    double  r0  =  0;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	15	None	add
12	[BUG]  [BUGGY]  double  r0  =  0;  long  r0  =  0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0;  long  r0  =  0;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    0;    long  r0  =  0;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	15	None	add
13	[BUG]  [BUGGY]  double  r0  =  0;  int  r0  =  0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0;  int  r0  =  0;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    0;    int  r0  =  0;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	15	None	add
14	[BUG]  [BUGGY]  long  r0  =  overflow;  Double  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  long  r0  =  overflow;  Double  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;  Double  r0  =  overflow;	  double    r0    =    overflow;    Double    r0    =    overflow;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	19	None	replace
15	[BUG]  [BUGGY]  Double  r0  =  overflow;  [CE]  incompatible  types  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  Double  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	Double  r0  =  overflow;	  double    r0    =    overflow;    Double    r0    =    overflow;    	non-compiled	[CE]  incompatible  types	19	None	replace
16	[BUG]  [BUGGY]  BigInteger  value  =  FastMath.floor(numerator,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  FastMath.floor(numerator,  denominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  FastMath.floor(numerator,  denominator);	  BigInteger    value    =    FastMath.floor(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	replace
17	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  double  r0  =  overflow  +  1;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1;  double  r0  =  overflow  +  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow    +    1;    double  r0  =  overflow  +  1;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	17	None	add
18	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  long  r0  =  overflow  +  1;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1;  long  r0  =  overflow  +  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow    +    1;    long  r0  =  overflow  +  1;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	17	None	add
19	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  int  r0  =  overflow  +  1;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1;  int  r0  =  overflow  +  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow    +    1;    int  r0  =  overflow  +  1;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	17	None	add
20	[BUG]  [BUGGY]  long  r0  =  overflow;  long  r1  =  overflow;  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  long  r0  =  overflow;  long  r1  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;  long  r1  =  overflow;	  double    r0    =    overflow;    int    r1    =    overflow;    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
21	[BUG]  [BUGGY]  long  r0  =  overflow;  int  r1  =  overflow;  [CE]  possible  loss  of  precision  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  long  r0  =  overflow;  int  r1  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;  int  r1  =  overflow;	  double    r0    =    overflow;    int    r1    =    overflow;    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
22	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  /  overflow);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  /  overflow);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(value  /  overflow);	  BigInteger    value    =(BigInteger)FastMath.floor(value    -    overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	20	None	replace
23	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  a0);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  a0);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(value,  a0);	  BigInteger    value    =(BigInteger)FastMath.ceil(value,    overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	14	None	replace
24	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	13	None	replace
25	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0L;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  0L;	  double    r0    =    0;    	compilable	  [FE]  FractionConversionException  	16	6	replace
26	[BUG]  [BUGGY]  double  r0  =  0L;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0L;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  0L;	  double    r0    =    0;    	compilable	  [FE]  FractionConversionException  	16	6	replace
27	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(denominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(denominator);	  BigInteger    value    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
28	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  maxIterations);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  maxIterations);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(value,  maxIterations);	  BigInteger    value    =(BigInteger)FastMath.ceil(value,    overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	14	None	replace
29	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  1;	  double    r0    =    0;    	compilable	  [FE]  FractionConversionException  	16	6	replace
30	[BUG]  [BUGGY]  double  r0  =  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  1;	  double    r0    =    0;    	compilable	  [FE]  FractionConversionException  	16	6	replace
31	[BUG]  [BUGGY]  long  r0  =  overflow;  double  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  long  r0  =  overflow;  double  r0  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;  double  r0  =  overflow;	  double    r0    =    overflow;    double    r0    =    overflow;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	replace
32	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(maxDenominator);	  BigInteger    value    =    BigInteger.valueOf(maxIterations);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
33	[BUG]  [BUGGY]  BigInteger  value  =  FastMath.floor(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  FastMath.floor(numerator  -  1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  FastMath.floor(numerator  -  1);	  BigInteger    value    =    FastMath.floor(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	replace
34	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator  -  1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(numerator  -  1);	  BigInteger    value    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
35	[BUG]  [BUGGY]  double  r0  =  overflow;  long  r1  =  overflow;  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow;  long  r1  =  overflow;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  overflow;  long  r1  =  overflow;	  double    r0    =    overflow;    int    r1    =    overflow;    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
36	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  Double  r0  =  overflow  +  1;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  overflow  +  1;  Double  r0  =  overflow  +  1;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow    +    1;    Double  r0  =  overflow  +  1;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	17	None	add
37	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);	  BigInteger    value    =(BigInteger)FastMath.ceil(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
38	[BUG]  [BUGGY]  double  r0  =  0;  Double  r0  =  0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;      [BUGGY]  double  r0  =  0;  Double  r0  =  0;  [BUGGY]      long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    0;    Double  r0  =  0;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	15	None	add
