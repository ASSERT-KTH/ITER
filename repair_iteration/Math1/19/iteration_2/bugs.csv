bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  value  =  FastMath.floor(overflow);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  FastMath.floor(overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  FastMath.floor(overflow);	      BigInteger    value    =    FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
2	[BUG]  [BUGGY]  BigInteger  value  =  FastMath.floor(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  FastMath.floor(numerator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  FastMath.floor(numerator);	      BigInteger    value    =    FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
3	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(overflow);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(overflow);	      BigInteger    value    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
4	[BUG]  [BUGGY]  double  r0  =  overflow;  double  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow;  double  r0  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow;    double  r0  =  overflow;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
5	[BUG]  [BUGGY]  double  r0  =  overflow;  long  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow;  long  r0  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow;    long  r0  =  overflow;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
6	[BUG]  [BUGGY]  double  r0  =  overflow;  int  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow;  int  r0  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow;    int  r0  =  overflow;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
7	[BUG]  [BUGGY]  double  r0  =  overflow.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow.doubleValue();  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  overflow.doubleValue();	  double    r0    =    value.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	5	None	replace
8	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(numerator);	      BigInteger    value    =    BigInteger.valueOf(overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
9	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator);	      BigInteger    value    =(BigInteger)FastMath.ceil(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	replace
10	[BUG]  [BUGGY]  long  r0  =  overflow;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  r0  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	long  r0  =  overflow;	  double    r0    =    overflow;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
11	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(maxIterations);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(maxIterations);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(maxIterations);	      BigInteger    value    =    BigInteger.valueOf(overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
12	[BUG]  [BUGGY]  double  r0  =  overflow;  int  r1  =  overflow;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow;  int  r1  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow;    int  r1  =  overflow;	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
13	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator);	      BigInteger    value    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
14	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  overflow);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(value,  overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(value,  overflow);	      BigInteger    value    =(BigInteger)FastMath.ceil(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	replace
15	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  0;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  0;	  double    r0    =    overflow;    	compilable	  [FE]  FractionConversionException  	4	6	replace
16	[BUG]  [BUGGY]  double  r0  =  0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  0;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  0;	  double    r0    =    overflow;    	compilable	  [FE]  FractionConversionException  	4	6	replace
17	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow  +  1;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	add	double  r0  =  overflow  +  1;	  double    r0    =    overflow;    	compilable	  [FE]  FractionConversionException  	4	6	replace
18	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow  +  1;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double  r0  =  overflow  +  1;	  double    r0    =    overflow;    	compilable	  [FE]  FractionConversionException  	4	6	replace
19	[BUG]  [BUGGY]  double  r0  =  overflow;  Double  r0  =  overflow;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow;  Double  r0  =  overflow;  [BUGGY]    long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	double    r0    =    overflow;    Double  r0  =  overflow;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
20	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  -  overflow);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  -  overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(value  -  overflow);	      BigInteger    value    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
21	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(int);  [CE]  '.class'  expected  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(int);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(int);	      BigInteger    value    =    BigInteger.valueOf(overflow);    	non-compiled	[CE]  '.class'  expected	6	None	replace
22	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(intValue);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(intValue);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	273	273	2	replace	BigInteger  value  =  BigInteger.valueOf(intValue);	      BigInteger    value    =    BigInteger.valueOf(overflow);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
