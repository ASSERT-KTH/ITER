bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  p0  =  0;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  double  p0  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	double  p0  =  0;	  int    p0    =    0;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
2	[BUG]  [BUGGY]  long  p0  =  a0  +  numerator;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  numerator;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  a0  +  numerator;	  long    p0    =    a0    +    denominator;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	24	None	replace
3	[BUG]  [BUGGY]  int  p0  =  a0  +  denominator;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0  +  denominator;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0  +  denominator;	  long    p0    =    a0    +    denominator;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	24	None	replace
4	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  value);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  n  =  Math.min(numerator,  denominator,  value);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)	11	None	replace
5	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  n  =  Math.min(numerator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  n  =  Math.min(numerator,  denominator);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)	11	None	replace
6	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  value);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,double)  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  value);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  value);	  BigInteger    gcd    =    BigInteger.valueOf(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,double)	18	None	replace
7	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,int)  [FE]                  FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  maxIterations);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  maxIterations);	  BigInteger    gcd    =    BigInteger.valueOf(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,int)	18	None	replace
8	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  value,  denominator);  [CE]  no  suitable  method  found  for  valueOf(long,double,BigInteger)  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  value,  denominator);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(a0,  value,  denominator);	  BigInteger    gcd    =    BigInteger.valueOf(a0,    value);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,double,BigInteger)	14	None	replace
9	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator,  value);  [CE]  no  suitable  method  found  for  valueOf(long,BigInteger,double)  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator,  value);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator,  value);	  BigInteger    gcd    =    BigInteger.valueOf(a0,    value);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,BigInteger,double)	14	None	replace
10	[BUG]  [BUGGY]  BigInteger  p1  =  denominator.doubleValue();  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p1  =  denominator.doubleValue();  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p1  =  denominator.doubleValue();	  BigInteger    p1    =    numerator.doubleValue();    	non-compiled	[CE]  incompatible  types	28	None	replace
11	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  a0);  [CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,long)  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  a0);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator,  denominator,  a0);	  BigInteger    n    =    Math.abs(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,long)	6	None	replace
12	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  value);  [CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,double)  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  value);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator,  denominator,  value);	  BigInteger    n    =    Math.abs(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,double)	6	None	replace
13	[BUG]  [BUGGY]  int  p0  =  a0;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0;	  long    p0    =    a0;    int    p0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
14	[BUG]  [BUGGY]  BigInteger  p0  =  a0;  [CE]  incompatible  types  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p0  =  a0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p0  =  a0;	  long    p0    =    a0;    BigInteger    p0    =    a0;    	non-compiled	[CE]  incompatible  types	26	None	replace
15	[BUG]  [BUGGY]  BigInteger  p0  =  numerator;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p0  =  numerator;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p0  =  numerator;	  long    p0    =    a0;    BigInteger    p0    =    a0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	26	None	replace
16	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)denominator.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =(BigInteger)denominator.clone();  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =(BigInteger)denominator.clone();	  BigInteger    n    =(BigInteger)numerator.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	20	None	replace
17	[BUG]  [BUGGY]  long  p0  =  a0  +  1;  long  p0  =  a0  +  1;  [CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  1;  long  p0  =  a0  +  1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long    p0    =    a0    +    1;    long  p0  =  a0  +  1;	  	non-compiled	[CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
18	[BUG]  [BUGGY]  long  p0  =  a0  +  1;  int  n  =  Math.min(numerator,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,double)  [FE]      FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  1;  int  n  =  Math.min(numerator,  value);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long    p0    =    a0    +    1;    int  n  =  Math.min(numerator,  value);	  	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double)	4	None	add
19	[BUG]  [BUGGY]  long  p0  =  a0  +  1;  int  n  =  Math.min(numerator,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)  [FE]        FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  1;  int  n  =  Math.min(numerator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long    p0    =    a0    +    1;    int  n  =  Math.min(numerator,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)	4	None	add
20	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  *  epsilon);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  *  epsilon);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  *  epsilon);	  BigInteger    n    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	7	None	replace
21	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  *  epsilon,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  *  epsilon,  denominator);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  *  epsilon,  denominator);	  BigInteger    n    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	7	None	replace
22	[BUG]  [BUGGY]  int  p0  =  0;  int  p0  =  0;  [CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  0;  int  p0  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  0;  int  p0  =  0;	  long    p0    =    0;    long    p0    =    0;    	non-compiled	[CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	15	None	replace
23	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  value);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  value);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  -  denominator,  value);	  BigInteger    n    =    Math.abs(numerator    -    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	27	None	replace
24	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  n  =  Math.min(numerator,  denominator,  maxIterations);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)	12	None	replace
25	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  numerator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,BigInteger)  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  numerator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  n  =  Math.min(numerator,  denominator,  numerator);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,BigInteger)	12	None	replace
26	[BUG]  [BUGGY]  BigInteger  p1  =  0;  [CE]  incompatible  types  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p1  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p1  =  0;	  long    p0    =    0;    BigInteger    p1    =    0;    	non-compiled	[CE]  incompatible  types	17	None	replace
27	[BUG]  [BUGGY]  BigInteger  p0  =  0;  [CE]  incompatible  types  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p0  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p0  =  0;	  long    p0    =    0;    BigInteger    p0    =    0;    	non-compiled	[CE]  incompatible  types	16	None	replace
28	[BUG]  [BUGGY]  BigInteger  p1  =  denominator.valueOf(a0);  [CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                  FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p1  =  denominator.valueOf(a0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p1  =  denominator.valueOf(a0);	  BigInteger    p1    =    numerator.valueOf(a0);    	non-compiled	[CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	29	None	replace
29	[BUG]  [BUGGY]  long  p0  =  a1;  [CE]  cannot  find  symbol  a1  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  a1;	  long    p0    =    a0;    long    p0    =    a0;    	non-compiled	[CE]  cannot  find  symbol  a1	10	None	replace
30	[BUG]  [BUGGY]  long  p0  =  a0;  int  p0  =  0;  [CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0;  int  p0  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  a0;  int  p0  =  0;	  long    p0    =    0;    int    p0    =    0;    	non-compiled	[CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	22	None	replace
31	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  maxIterations);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  -  denominator,  maxIterations);	  BigInteger    n    =    Math.abs(numerator    -    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	27	None	replace
32	[BUG]  [BUGGY]  int  p0  =  a0;  int  p0  =  a0;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0;  int  p0  =  a0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0;  int  p0  =  a0;	  long    p0    =    a0;    long    p0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
33	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  /  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  /  denominator);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  /  denominator);	  BigInteger    n    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	7	None	replace
34	[BUG]  [BUGGY]  long  p0  =  a0  +  1;  BigInteger  p0  =  a0  +  1;  [CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  1;  BigInteger  p0  =  a0  +  1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long    p0    =    a0    +    1;    BigInteger  p0  =  a0  +  1;	  	non-compiled	[CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
35	[BUG]  [BUGGY]  long  p0  =  a0  +  1;  int  p0  =  a0  +  1;  [CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0  +  1;  int  p0  =  a0  +  1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long    p0    =    a0    +    1;    int  p0  =  a0  +  1;	  	non-compiled	[CE]  variable  p0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
36	[BUG]  [BUGGY]  long  p0  =  numerator  +  denominator;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  numerator  +  denominator;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  numerator  +  denominator;	  long    p0    =    a0    +    denominator;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	24	None	replace
37	[BUG]  [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  maxIterations);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
38	[BUG]  [BUGGY]  int  p0  =  numerator;  int  n  =  Math.min(numerator,  denominator);  [CE]  incompatible  types  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  numerator;  int  n  =  Math.min(numerator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  numerator;  int  n  =  Math.min(numerator,  denominator);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  incompatible  types	12	None	replace
39	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,int)  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator,  denominator,  maxIterations);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator,  denominator,  maxIterations);	  BigInteger    n    =    Math.abs(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(BigInteger,BigInteger,int)	6	None	replace
40	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator);  [CE]  no  suitable  method  found  for  valueOf(long,BigInteger)  [FE]              FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(a0,  numerator);	  BigInteger    gcd    =    BigInteger.valueOf(a0,    value);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(long,BigInteger)	14	None	replace
41	[BUG]  [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0;  int  n  =  Math.min(numerator,  denominator);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
42	[BUG]  [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(value,  numerator);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  a0;  int  n  =  Math.min(value,  numerator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  a0;  int  n  =  Math.min(value,  numerator);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
43	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0  +  1);  [CE]  cannot  find  symbol  p0  [FE]        FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a0  +  1);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(a0  +  1);	          BigInteger    gcd    =    BigInteger.valueOf(a0);    BigInteger    gcd    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  cannot  find  symbol  p0	8	None	replace
44	[BUG]  [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  epsilon);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  n  =  Math.abs(numerator  -  denominator,  epsilon);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  n  =  Math.abs(numerator  -  denominator,  epsilon);	  BigInteger    n    =    Math.abs(numerator    -    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	27	None	replace
45	[BUG]  [BUGGY]  BigInteger  p1  =  numerator.valueOf(a0  +  denominator);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  p1  =  numerator.valueOf(a0  +  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  p1  =  numerator.valueOf(a0  +  denominator);	  BigInteger    p1    =    numerator.valueOf(a0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	29	None	replace
46	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  a0);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,long)  [FE]                FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  a0);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  a0);	  BigInteger    gcd    =    BigInteger.valueOf(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,long)	18	None	replace
47	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)  [FE]                  FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  numerator);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(numerator,  denominator,  numerator);	  BigInteger    gcd    =    BigInteger.valueOf(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)	18	None	replace
48	[BUG]  [BUGGY]  long  p0  =  value  +  1;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  value  +  1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  value  +  1;	  long    p0    =    a0    +    1;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
49	[BUG]  [BUGGY]  long  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  epsilon);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  long  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  epsilon);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	long  p0  =  a0;  int  n  =  Math.min(numerator,  denominator,  epsilon);	  long    p0    =    a0;    int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)	12	None	replace
50	[BUG]  [BUGGY]  int  p0  =  0;  BigInteger  p1  =  0;  [CE]  incompatible  types  [FE]            FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  int  p0  =  0;  BigInteger  p1  =  0;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	int  p0  =  0;  BigInteger  p1  =  0;	  long    p0    =    0;    BigInteger    p1    =    0;    	non-compiled	[CE]  incompatible  types	17	None	replace
51	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a1);  [CE]  cannot  find  symbol  a1  [FE]          FractionConversionException      [CONTEXT]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(a1);  [BUGGY]      long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	287	287	2	replace	BigInteger  gcd  =  BigInteger.valueOf(a1);	          BigInteger    gcd    =    BigInteger.valueOf(a0);    BigInteger    gcd    =    BigInteger.valueOf(a1);    	non-compiled	[CE]  cannot  find  symbol  a1	9	None	replace
