bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(q1  <  maxDenominator)  {  if(q1  <  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(q1  <  maxDenominator)  {  if(q1  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q1    <    maxDenominator)    {    if(q1  <  maxDenominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
2	[BUG]  [BUGGY]  if(q1  <  maxDenominator)  {  if(q2  <  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(q1  <  maxDenominator)  {  if(q2  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q1    <    maxDenominator)    {    if(q2  <  maxDenominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
3	[BUG]  [BUGGY]  long  q2  =  value;  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =  value;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =  value;	      int    q2    =    value;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  double  q2  =  value;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =  value;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =  value;	      int    q2    =    value;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  double  q2  =  r0.doubleValue();  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =  r0.doubleValue();  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =  r0.doubleValue();	      int    q2    =    r0.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  long  q2  =  r0.doubleValue();  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =  r0.doubleValue();  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =  r0.doubleValue();	      int    q2    =    r0.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  if(value  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(value  <  =  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(value  <  =  maxDenominator)  {	  if(q2    <    =    maxDenominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  if(n  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(n  <  =  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(n  <  =  maxDenominator)  {	  if(q2    <    =    maxDenominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  double  q2  =  value.doubleValue();  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =  value.doubleValue();  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =  value.doubleValue();	      int    q2    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  int  q2  =  numerator;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =  numerator;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =  numerator;	      int    q2    =    n;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  long  q2  =  n;  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =  n;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =  n;	      int    q2    =    n;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  long  q2  =(long)value;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =(long)value;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =(long)value;	      int    q2    =(int)value;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  long  q2  =(long)Math.floor(value);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =(long)Math.floor(value);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =(long)Math.floor(value);	      int    q2    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if  (n  <  maxIterations)  {  if  (n  <  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if  (n  <  maxIterations)  {  if  (n  <  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if    (n    <    maxIterations)    {    if  (n  <  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
15	[BUG]  [BUGGY]  if  (n  <  maxIterations)  {  If  (n  <  maxIterations)  {  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if  (n  <  maxIterations)  {  If  (n  <  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if    (n    <    maxIterations)    {    If  (n  <  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
16	[BUG]  [BUGGY]  if(n  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(n  <  =  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(n  <  =  maxIterations)  {	  if    (n    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  if  (n  <  maxDenominator)  {  if  (n  <  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if  (n  <  maxDenominator)  {  if  (n  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if    (n    <    maxDenominator)    {    if  (n  <  maxDenominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
18	[BUG]  [BUGGY]  if  (n  <  maxDenominator)  {  If  (n  <  maxDenominator)  {  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if  (n  <  maxDenominator)  {  If  (n  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if    (n    <    maxDenominator)    {    If  (n  <  maxDenominator)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
19	[BUG]  [BUGGY]  long  q2  =(long)Math.rint(value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  long  q2  =(long)Math.rint(value);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	long  q2  =(long)Math.rint(value);	      int    q2    =(int)Math.rint(value);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  if(numerator  <  maxDenominator)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(numerator  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(numerator  <  maxDenominator)  {	  if(q1    <    maxDenominator)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	14	None	replace
21	[BUG]  [BUGGY]  int  q2  =  0;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =  0;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =  0;	      int    q2    =    n;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  if(q1  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(q1  <  =  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q1  <  =  maxDenominator)  {	  if(q2    <    =    maxDenominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  int  q2  =  r0;  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =  r0;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =  r0;	      int    q2    =    value;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  int  q2  =(int)Math.rint(value,  n);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =(int)Math.rint(value,  n);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =(int)Math.rint(value,  n);	      int    q2    =(int)Math.rint(value);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  float  q2  =(float)Math.floor(value);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  float  q2  =(float)Math.floor(value);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	float  q2  =(float)Math.floor(value);	      int    q2    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  if(numerator  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(numerator  <  =  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(numerator  <  =  maxDenominator)  {	  if    (n    <    maxDenominator)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(n  <  0)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	add	if(n  <  0)  {	  if    (n    <    maxDenominator)    {    	compilable	  [FE]  FractionConversionException  	7	6	replace
28	[BUG]  [BUGGY]  if(n  <  0)  {  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(n  <  0)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(n  <  0)  {	  if    (n    <    maxDenominator)    {    	compilable	  [FE]  FractionConversionException  	7	6	replace
29	[BUG]  [BUGGY]  double  q2  =(double)value;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =(double)value;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =(double)value;	      int    q2    =(int)value;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  int  q2  =  epsilon;  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =  epsilon;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =  epsilon;	      int    q2    =    value;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(q2  <  =  epsilon)  {  [CE]  illegal  start  of  expression  [FE]        FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(q2  <  =  epsilon)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q2  <  =  epsilon)  {	  if(q2    <    =    maxDenominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  int  q2  =  n  -  1;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  int  q2  =  n  -  1;  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	int  q2  =  n  -  1;	      int    q2    =    n;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  if(q2  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(q2  <  =  0)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q2  <  =  0)  {	  if    (n    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  if(n  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  if(n  <  =  0)  {  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(n  <  =  0)  {	  if    (n    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  double  q2  =(double)Math.rint(value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =(double)Math.rint(value);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =(double)Math.rint(value);	      int    q2    =(int)Math.rint(value);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  double  q2  =(double)Math.floor(value);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }    [BUGGY]  double  q2  =(double)Math.floor(value);  [BUGGY]    if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	double  q2  =(double)Math.floor(value);	      int    q2    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
