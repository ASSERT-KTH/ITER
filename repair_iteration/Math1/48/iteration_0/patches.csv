bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  q2  =  value.doubleValue();  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =  value.doubleValue();  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =  value.doubleValue();		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
2	[BUG]  [BUGGY]    int  q2  =(int)Math.floor(value);  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =(int)Math.floor(value);  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =(int)Math.floor(value);		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
3	[BUG]  [BUGGY]    int  q2  =(int)Math.rint(value);  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =(int)Math.rint(value);  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =(int)Math.rint(value);		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
4	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if  (n  <  maxIterations)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	add	if  (n  <  maxIterations)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
5	[BUG]  [BUGGY]  if  (n  <  maxIterations)  {  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if  (n  <  maxIterations)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if  (n  <  maxIterations)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
6	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if  (n  <  maxDenominator)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	add	if  (n  <  maxDenominator)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
7	[BUG]  [BUGGY]  if  (n  <  maxDenominator)  {  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if  (n  <  maxDenominator)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if  (n  <  maxDenominator)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
8	[BUG]  [BUGGY]    int  q2  =  value;  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =  value;  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =  value;		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
9	[BUG]  [BUGGY]    int  q2  =(int)value;  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =(int)value;  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =(int)value;		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
10	[BUG]  [BUGGY]    int  q2  =  r0.doubleValue();  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =  r0.doubleValue();  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =  r0.doubleValue();		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
11	[BUG]  [BUGGY]    int  q2  =  n;  [CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]    int  q2  =  n;  [BUGGY]  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	    int  q2  =  n;		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  Fraction(double,double,int,int)	96	None	add
12	[BUG]  [BUGGY]  if(q2  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if(q2  <  =  maxDenominator)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q2  <  =  maxDenominator)  {	if  (q2  <  maxDenominator)  {  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if(q1  <  maxDenominator)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	add	if(q1  <  maxDenominator)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
14	[BUG]  [BUGGY]  if(q1  <  maxDenominator)  {  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  [BUGGY]  if(q1  <  maxDenominator)  {  [BUGGY]  this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2886751345948129	235	235	2	replace	if(q1  <  maxDenominator)  {	if  (q2  <  maxDenominator)  {  	compilable	  [FE]  FractionConversionException  	95	2	replace
