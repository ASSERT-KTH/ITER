projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=a1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(epsilon,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(epsilon,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=r1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=r2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=newBigInteger(value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=a0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=numerator;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.abs(value-q1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=n;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=a1;a0=a1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=a1;a0=a2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=n;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=num;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(value,epsilon);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(maxIterations,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a0;r0=a0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a0;intr0=a0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a0;r0=a1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.abs(value/q1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.abs(value-q0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(maxDenominator,epsilon);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=newBigInteger(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=newBigInteger(n);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=q2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=q1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(numerator,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=q2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=value;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=q1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318r0=a0;BigIntegerr0=a0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=a1;a0=a1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318a0=a1;a0=a1.;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318BigIntegerr1=a0+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.abs(convergent-value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.abs(q1-value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java318n=Math.min(denominator,epsilon);
