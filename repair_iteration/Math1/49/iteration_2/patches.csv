bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  r0  =  stop  =  false;  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  stop  =  false;	  stop    =    false;    r0    =    stop    =    false;    	non-compiled	[CE]  incompatible  types	25	None	replace
2	[BUG]  [BUGGY]  r0  =  stop  =  true;  [CE]  incompatible  types  [FE]                  FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  stop  =  true;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  stop  =  true;	  stop    =    false;    r0    =    stop    =    false;    	non-compiled	[CE]  incompatible  types	25	None	replace
3	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r0  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    value;    r0  =  value;	  timeout    	compilable	  [FE]  FractionConversionException  	27	2	add
4	[BUG]  [BUGGY]  r0  =  value;  r0  =  value;  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r0  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    value;    r0  =  value;	  timeout    	compilable	  [FE]  FractionConversionException  	27	2	add
5	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r1  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    value;    r1  =  value;	  timeout    	compilable	  [FE]  FractionConversionException  	27	2	add
6	[BUG]  [BUGGY]  r0  =  value;  r1  =  value;  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r1  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    value;    r1  =  value;	  timeout    	compilable	  [FE]  FractionConversionException  	27	2	add
7	[BUG]  [BUGGY]  n  =  Math.abs(value)/  epsilon;  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value)/  epsilon;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value)/  epsilon;	          n    =    Math.abs(value)/    denominator;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
8	[BUG]  [BUGGY]  r0  =  r2;  r0  =  r1;  [CE]  cannot  find  symbol  r2  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r2;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  r2;  r0  =  r1;	          r0    =    r1;    r0    =    r1;    	non-compiled	[CE]  cannot  find  symbol  r2	18	None	replace
9	[BUG]  [BUGGY]  stop  =  true;  Stop  =  false;  [CE]  cannot  find  symbol  Stop  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  true;  Stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  true;  Stop  =  false;	  stop    =    false;    Stop    =    false;    	non-compiled	[CE]  cannot  find  symbol  Stop	24	None	replace
10	[BUG]  [BUGGY]  Stop  =  false;  [CE]  cannot  find  symbol  Stop  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Stop  =  false;	  stop    =    false;    Stop    =    false;    	non-compiled	[CE]  cannot  find  symbol  Stop	24	None	replace
11	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	                r0        =        r1;        r0    =    r1;    r0  =  r1;  r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	17	2	add
12	[BUG]  [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r1;  r0  =  r1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                r0        =        r1;        r0    =    r1;    r0  =  r1;  r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	17	2	add
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r1  =  r1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	                r0        =        r1;        r0    =    r1;    r1  =  r1;  r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	17	2	add
14	[BUG]  [BUGGY]          r0    =    r1;    r0  =  r1;  r1  =  r1;  r0  =  r1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r1  =  r1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                r0        =        r1;        r0    =    r1;    r1  =  r1;  r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	17	2	add
15	[BUG]  [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r2;  r0  =  r1;  [CE]  cannot  find  symbol  r2  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r2;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                r0        =        r1;        r0    =    r1;    r0  =  r2;  r0  =  r1;	  	non-compiled	[CE]  cannot  find  symbol  r2	17	None	add
16	[BUG]  [BUGGY]  Numerator  r1  =(Numerator)numerator.clone();  [CE]  cannot  find  symbol  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Numerator  r1  =(Numerator)numerator.clone();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Numerator  r1  =(Numerator)numerator.clone();	          Numerator    r1    =(Numerator)n.clone();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
17	[BUG]  [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON,  denominator);  [CE]  no  suitable  method  found  for  abs(double,int)  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON,  denominator);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  DEFAULT_EPSILON,  denominator);	  n    =    Math.abs(value    /    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,int)	8	None	replace
18	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  n;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	a0  =  n;	  a0    =    a2;    	compilable	  [FE]  FractionConversionException  	21	7	replace
19	[BUG]  [BUGGY]  a0  =  n;  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  n;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  n;	  a0    =    a2;    	compilable	  [FE]  FractionConversionException  	21	7	replace
20	[BUG]  [BUGGY]  n  =  Math.abs(a0  -  value);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(a0  -  value);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(a0  -  value);	  n    =    Math.abs(value    -    a0);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
21	[BUG]  [BUGGY]  n  =  Math.abs(value  /  a0);  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  a0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  a0);	  n    =    Math.abs(value    -    a0);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
22	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  DEFAULT_EPSILON;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  DEFAULT_EPSILON;	  r0    =    value;    timeout    	compilable	  [FE]  FractionConversionException  	28	7	replace
23	[BUG]  [BUGGY]  r0  =  DEFAULT_EPSILON;  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  DEFAULT_EPSILON;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  DEFAULT_EPSILON;	  r0    =    value;    timeout    	compilable	  [FE]  FractionConversionException  	28	7	replace
24	[BUG]  [BUGGY]  Numerator  r1  =(Numerator)n.get(denominator);  [CE]  cannot  find  symbol  [FE]                  FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Numerator  r1  =(Numerator)n.get(denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Numerator  r1  =(Numerator)n.get(denominator);	          Numerator    r1    =(Numerator)n.get(value);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
25	[BUG]  [BUGGY]  a0  =  a2;  a0  =  a1.;  [CE]  <identifier>  expected  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a2;  a0  =  a1.;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a2;  a0  =  a1.;	          a0    =    a1;    a0    =    a1.;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  n  =  Math.abs(value  /  1);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  1);	  n    =    Math.abs(value    -    1);    	non-compiled	[CE]  possible  loss  of  precision	26	None	replace
27	[BUG]  [BUGGY]  n  =  Math.abs(denominator  -  value);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(denominator  -  value);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(denominator  -  value);	  n    =    Math.abs(value    -    denominator);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
28	[BUG]  [BUGGY]  n  =  Math.abs(value  /  denominator);  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  denominator);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  denominator);	  n    =    Math.abs(value    -    denominator);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
29	[BUG]  [BUGGY]  a0  =  r0;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  r0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  r0;	  a0    =    r1;    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
30	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  stop  =  false;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        stop    =    false;    stop  =  false;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
31	[BUG]  [BUGGY]  stop    =    false;    stop  =  false;  stop  =  false;  stop  =  false;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  stop  =  false;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        stop    =    false;    stop  =  false;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
32	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
33	[BUG]  [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  stop  =  false;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
34	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	22	2	add
35	[BUG]  [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	22	2	add
36	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  /  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  Math.abs(value  /  r0);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
37	[BUG]  [BUGGY]  r0  =  Math.abs(value  /  r0);  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  /  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  Math.abs(value  /  r0);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
38	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  /  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  Math.abs(value  /  r1);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
39	[BUG]  [BUGGY]  r0  =  Math.abs(value  /  r1);  [FE]  FractionConversionException  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  /  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  Math.abs(value  /  r1);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
40	[BUG]  [BUGGY]  n  =  Math.min(value,  denominator);  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.min(value,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.min(value,  denominator);	  n    =    Math.min(denominator,    value);    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
41	[BUG]  [BUGGY]  r0  =  r2;  [CE]  cannot  find  symbol  r2  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r2;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  r2;	          r0    =    r1;    r0    =    r2;    	non-compiled	[CE]  cannot  find  symbol  r2	19	None	replace
42	[BUG]  [BUGGY]  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	a0  =  a1;  stop  =  false;	  stop    =    false;    a0    =    a1;    stop    =    false;    	compilable	timeout	35	1	replace
43	[BUG]  [BUGGY]  a0  =  a1;  stop  =  false;  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a1;  stop  =  false;	  stop    =    false;    a0    =    a1;    stop    =    false;    	compilable	timeout	35	1	replace
44	[BUG]  [BUGGY]  a0  =  a2;  a0  =  a1);  [CE]  ';'  expected  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a2;  a0  =  a1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a2;  a0  =  a1);	          a0    =    a1;    a0    =    a1);    	non-compiled	[CE]  ';'  expected	31	None	replace
45	[BUG]  [BUGGY]  a0  =  a1;  a0  =  a2.getValue();  [CE]  cannot  find  symbol  a2  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a1;  a0  =  a2.getValue();  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a1;  a0  =  a2.getValue();	          a0    =    a1;    a0    =    a1.getValue();    	non-compiled	[CE]  cannot  find  symbol  a2	42	None	replace
46	[BUG]  [BUGGY]  Neighbor  n  =  Math.abs(r0  -  value);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Neighbor  n  =  Math.abs(r0  -  value);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Neighbor  n  =  Math.abs(r0  -  value);	  Neighbor    n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
47	[BUG]  [BUGGY]  Neighbor  n  =  Math.abs(value  -  a0);  [CE]  cannot  find  symbol  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Neighbor  n  =  Math.abs(value  -  a0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Neighbor  n  =  Math.abs(value  -  a0);	  Neighbor    n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
48	[BUG]  [BUGGY]  a0  =  a2;  a0  =  a1;  [CE]  cannot  find  symbol  a2  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a2;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a2;  a0  =  a1;	          a0    =    a1;    a0    =    a1;    	non-compiled	[CE]  cannot  find  symbol  a2	14	None	replace
49	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    a1;    r0  =  a1;	  	compilable	  [FE]  FractionConversionException  	11	2	add
50	[BUG]  [BUGGY]  r0  =  a1;  r0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    r0  =  a1;	  	compilable	  [FE]  FractionConversionException  	11	2	add
51	[BUG]  [BUGGY]  r0  =  a1;  r0  =  a1.;  [CE]  <identifier>  expected  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  a1.;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    r0  =  a1.;	  	non-compiled	[CE]  <identifier>  expected	11	None	add
52	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r1  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    a1;    r1  =  a1;	  	compilable	  [FE]  FractionConversionException  	11	2	add
53	[BUG]  [BUGGY]  r0  =  a1;  r1  =  a1;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r1  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    r1  =  a1;	  	compilable	  [FE]  FractionConversionException  	11	2	add
54	[BUG]  [BUGGY]  n  =  Math.abs(convergent  -  value,  denominator);  [CE]  no  suitable  method  found  for  abs(double,int)  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(convergent  -  value,  denominator);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(convergent  -  value,  denominator);	  n    =    Math.abs(convergent    -    value);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,int)	4	None	replace
55	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  n;  a0  =  n;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	a0  =  n;  a0  =  n;	          a0    =    a1;    a0    =    a2;    	compilable	  [FE]  FractionConversionException  	15	7	replace
56	[BUG]  [BUGGY]  a0  =  n;  a0  =  n;  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  n;  a0  =  n;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  n;  a0  =  n;	          a0    =    a1;    a0    =    a2;    	compilable	  [FE]  FractionConversionException  	15	7	replace
57	[BUG]  [BUGGY]  timeout  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  p1;  a0  =  p2;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	a0  =  p1;  a0  =  p2;	          a0    =    a1;    a0    =    a2;    	compilable	timeout	15	1	replace
58	[BUG]  [BUGGY]  a0  =  p1;  a0  =  p2;  timeout  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  p1;  a0  =  p2;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  p1;  a0  =  p2;	          a0    =    a1;    a0    =    a2;    	compilable	timeout	15	1	replace
59	[BUG]  [BUGGY]  stop  =  DEFAULT_EPSILON;  [CE]  incompatible  types  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  DEFAULT_EPSILON;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  DEFAULT_EPSILON;	  stop    =    value;    	non-compiled	[CE]  incompatible  types	32	None	replace
60	[BUG]  [BUGGY]  a0  =  a1;  a0  =  a2.getDenominator();  [CE]  cannot  find  symbol  a2  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  a1;  a0  =  a2.getDenominator();  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a1;  a0  =  a2.getDenominator();	          a0    =    a1;    a0    =    a1.getDenominator();    	non-compiled	[CE]  cannot  find  symbol  a2	43	None	replace
61	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	                a0        =        a1;        a0    =    a1;    a0  =  a1;  a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	13	2	add
62	[BUG]  [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1;  a0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                a0        =        a1;        a0    =    a1;    a0  =  a1;  a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	13	2	add
63	[BUG]  [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a2;  a0  =  a1;  [CE]  cannot  find  symbol  a2  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a2;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                a0        =        a1;        a0    =    a1;    a0  =  a2;  a0  =  a1;	  	non-compiled	[CE]  cannot  find  symbol  a2	13	None	add
64	[BUG]  [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1;  a0  =  a1.;  [CE]  <identifier>  expected  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1;  a0  =  a1.;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                a0        =        a1;        a0    =    a1;    a0  =  a1;  a0  =  a1.;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
65	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        a0    =    a1;    stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	34	2	add
66	[BUG]  [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  stop  =  false;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        a0    =    a1;    stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	34	2	add
67	[BUG]  [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  long  stop  =  false;  a0  =  a1;  stop  =  false;  [CE]  variable  stop  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  long  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        a0    =    a1;    stop    =    false;    long  stop  =  false;  a0  =  a1;  stop  =  false;	  	non-compiled	[CE]  variable  stop  is  already  defined  in  constructor  Fraction(double,double,int,int)	34	None	add
68	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a1  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        a0    =    a1;    stop    =    false;    a1  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	34	2	add
69	[BUG]  [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a1  =  a1;  stop  =  false;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a1  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        a0    =    a1;    stop    =    false;    a1  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	34	2	add
70	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        r0    =    r1;    stop    =    false;    r0  =  r1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	36	2	add
71	[BUG]  [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  stop  =  false;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        r0    =    r1;    stop    =    false;    r0  =  r1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	36	2	add
72	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        r0    =    r1;    stop    =    false;    r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	36	2	add
73	[BUG]  [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  r0  =  r1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        r0    =    r1;    stop    =    false;    r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	36	2	add
74	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        r0    =    r1;    stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	36	2	add
75	[BUG]  [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  stop  =  false;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        r0    =    r1;    stop    =    false;    a0  =  a1;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	36	2	add
76	[BUG]  [BUGGY]  stop  =  a0;  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  a0;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  a0;	  stop    =    r0;    	non-compiled	[CE]  incompatible  types	3	None	replace
77	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a0;  r0  =  a0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    a0;    r0  =  a0;	  	compilable	  [FE]  FractionConversionException  	9	2	add
78	[BUG]  [BUGGY]  r0  =  a0;  r0  =  a0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a0;  r0  =  a0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a0;    r0  =  a0;	  	compilable	  [FE]  FractionConversionException  	9	2	add
79	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a0;  r1  =  a0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    a0;    r1  =  a0;	  	compilable	  [FE]  FractionConversionException  	9	2	add
80	[BUG]  [BUGGY]  r0  =  a0;  r1  =  a0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a0;  r1  =  a0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a0;    r1  =  a0;	  	compilable	  [FE]  FractionConversionException  	9	2	add
81	[BUG]  [BUGGY]  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  r1;  stop  =  false;	  stop    =    false;    r0    =    r1;    stop    =    false;    	compilable	timeout	37	1	replace
82	[BUG]  [BUGGY]  r0  =  r1;  stop  =  false;  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  r1;  stop  =  false;	  stop    =    false;    r0    =    r1;    stop    =    false;    	compilable	timeout	37	1	replace
83	[BUG]  [BUGGY]  timeout  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  true;  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop  =  true;  r0  =  r1;  stop  =  false;	  stop    =    false;    r0    =    r1;    stop    =    false;    	compilable	timeout	37	1	replace
84	[BUG]  [BUGGY]  stop  =  true;  r0  =  r1;  stop  =  false;  timeout  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  true;  r0  =  r1;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  true;  r0  =  r1;  stop  =  false;	  stop    =    false;    r0    =    r1;    stop    =    false;    	compilable	timeout	37	1	replace
85	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    Math.abs(value    -    r0);    r0  =  Math.abs(value  -  r0);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
86	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r0);  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    Math.abs(value    -    r0);    r0  =  Math.abs(value  -  r0);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
87	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r1  =  Math.abs(value  -  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    Math.abs(value    -    r0);    r1  =  Math.abs(value  -  r0);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
88	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  r0);  r1  =  Math.abs(value  -  r0);  [FE]  FractionConversionException  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r1  =  Math.abs(value  -  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    Math.abs(value    -    r0);    r1  =  Math.abs(value  -  r0);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
89	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]                  FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0    =    Math.abs(value    -    r0);    r0  =  Math.abs(value  -  r1);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
90	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r1);  [FE]  FractionConversionException  [FE]                  FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r0);  r0  =  Math.abs(value  -  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    Math.abs(value    -    r0);    r0  =  Math.abs(value  -  r1);	  timeout    	compilable	  [FE]  FractionConversionException  	40	2	add
91	[BUG]  [BUGGY]  Numerator  r1  =(Numerator)n2.clone();  [CE]  cannot  find  symbol  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Numerator  r1  =(Numerator)n2.clone();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Numerator  r1  =(Numerator)n2.clone();	          Numerator    r1    =(Numerator)n.clone();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
92	[BUG]  [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1.;  a0  =  a1;  [CE]  <identifier>  expected  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a0  =  a1.;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                a0        =        a1;        a0    =    a1;    a0  =  a1.;  a0  =  a1;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
93	[BUG]  [BUGGY]  r0  =  a1;  int  r0  =  a1;  [CE]  variable  r0  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  int  r0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    int  r0  =  a1;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  Fraction(double,double,int,int)	11	None	add
94	[BUG]  [BUGGY]  Numerator  r1  =(Numerator)n.get(a0);  [CE]  cannot  find  symbol  [FE]                  FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Numerator  r1  =(Numerator)n.get(a0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Numerator  r1  =(Numerator)n.get(a0);	          Numerator    r1    =(Numerator)n.get(value);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
95	[BUG]  [BUGGY]  stop  =  true;  r0  =  stop  =  false;  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  true;  r0  =  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  true;  r0  =  stop  =  false;	  stop    =    false;    r0    =    stop    =    false;    	non-compiled	[CE]  incompatible  types	25	None	replace
96	[BUG]  [BUGGY]  timeout  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  value;  r0  =  r1;	          r0    =    r1;    r0    =    r2;    	compilable	timeout	19	1	replace
97	[BUG]  [BUGGY]  r0  =  value;  r0  =  r1;  timeout  [FE]          FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  value;  r0  =  r1;	          r0    =    r1;    r0    =    r2;    	compilable	timeout	19	1	replace
98	[BUG]  [BUGGY]  a0  =  value;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  a0  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  value;	  a0    =    r1;    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
99	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        a0    =    a1;    stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	34	2	add
100	[BUG]  [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    a0  =  a1;  stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        a0    =    a1;    stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	34	2	add
101	[BUG]  [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r1;  r0  =  r2;  [CE]  cannot  find  symbol  r2  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          r0    =    r1;    r0  =  r1;  r0  =  r1;  r0  =  r2;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                r0        =        r1;        r0    =    r1;    r0  =  r1;  r0  =  r2;	  	non-compiled	[CE]  cannot  find  symbol  r2	17	None	add
102	[BUG]  [BUGGY]  r0  =  a0;  int  r0  =  a0;  [CE]  variable  r0  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a0;  int  r0  =  a0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a0;    int  r0  =  a0;	  	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  Fraction(double,double,int,int)	9	None	add
103	[BUG]  [BUGGY]  stop  =  r1;  [CE]  incompatible  types  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop  =  r1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  r1;	  stop    =    r0;    	non-compiled	[CE]  incompatible  types	3	None	replace
104	[BUG]  [BUGGY]  Neighbor  n  =  Math.abs(value  -  r1);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Neighbor  n  =  Math.abs(value  -  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Neighbor  n  =  Math.abs(value  -  r1);	  Neighbor    n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
105	[BUG]  [BUGGY]  n  =  Math.min(denominator,  r0);  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.min(denominator,  r0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.min(denominator,  r0);	  n    =    Math.min(denominator,    value);    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
106	[BUG]  [BUGGY]  n  =  Math.abs(value  /  r1);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  r1);	  n    =    Math.abs(value    /    r0);    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
107	[BUG]  [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON)+  1;  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON)+  1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  DEFAULT_EPSILON)+  1;	  n    =    Math.abs(value    /    DEFAULT_EPSILON);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
108	[BUG]  [BUGGY]  Stop  =  true;  [CE]  cannot  find  symbol  Stop  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  Stop  =  true;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Stop  =  true;	  stop    =    false;    stop    =    false;    	non-compiled	[CE]  cannot  find  symbol  Stop	23	None	replace
109	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a0;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        stop    =    false;    a0  =  a0;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
110	[BUG]  [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a0;  stop  =  false;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    stop  =  false;  a0  =  a0;  stop  =  false;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        stop    =    false;    a0  =  a0;  stop  =  false;	  	compilable	  [FE]  FractionConversionException  	22	2	add
111	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  Math.abs(value  -  r1);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
112	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  r1);  [FE]  FractionConversionException  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  Math.abs(value  -  r1);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	  [FE]  FractionConversionException  	41	7	replace
113	[BUG]  [BUGGY]  r0  =  value;  r0  =  r1);  [CE]  ';'  expected  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r0  =  r1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  value;  r0  =  r1);	          r0    =    r1;    r0    =    r1);    	non-compiled	[CE]  ';'  expected	20	None	replace
114	[BUG]  [BUGGY]  r0  =  a2;  [CE]  cannot  find  symbol  a2  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a2;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  a2;	  r0    =    a1;    	non-compiled	[CE]  cannot  find  symbol  a2	12	None	replace
115	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a1  =  a1;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	                a0        =        a1;        a0    =    a1;    a1  =  a1;  a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	13	2	add
116	[BUG]  [BUGGY]          a0    =    a1;    a0  =  a1;  a1  =  a1;  a0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]          a0    =    a1;    a0  =  a1;  a1  =  a1;  a0  =  a1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	                a0        =        a1;        a0    =    a1;    a1  =  a1;  a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	13	2	add
117	[BUG]  [BUGGY]  r0  =  value;  r2  =  value;  [CE]  cannot  find  symbol  r2  [FE]        FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  value;  r2  =  value;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    value;    r2  =  value;	  timeout    	non-compiled	[CE]  cannot  find  symbol  r2	27	None	add
118	[BUG]  [BUGGY]  n  =  Math.abs(denominator  -  a0);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(denominator  -  a0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(denominator  -  a0);	  n    =    Math.abs(value    -    a0);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
119	[BUG]  [BUGGY]  n  =  Math.abs(denominator  -  1);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(denominator  -  1);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(denominator  -  1);	  n    =    Math.abs(value    -    1);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	26	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  a0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  Math.abs(value  -  a0);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	timeout	41	1	replace
121	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  a0);  timeout  [FE]              FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  Math.abs(value  -  a0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  Math.abs(value  -  a0);	  r0    =    Math.abs(value    -    r0);    timeout    	compilable	timeout	41	1	replace
122	[BUG]  [BUGGY]  denominator  =  Math.abs(value)/  denominator;  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  denominator  =  Math.abs(value)/  denominator;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	denominator  =  Math.abs(value)/  denominator;	          n    =    Math.abs(value)/    denominator;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
123	[BUG]  [BUGGY]  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  a1;  r0  =  r1;	          r0    =    r1;    r0    =    r1;    	compilable	timeout	18	1	replace
124	[BUG]  [BUGGY]  r0  =  a1;  r0  =  r1;  timeout  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  r1;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  a1;  r0  =  r1;	          r0    =    r1;    r0    =    r1;    	compilable	timeout	18	1	replace
125	[BUG]  [BUGGY]  n  =  Math.abs(denominator  /  r0);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.abs(denominator  /  r0);  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(denominator  /  r0);	  n    =    Math.abs(denominator    -    r0);    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
126	[BUG]  [BUGGY]  r0  =  a1;  r0  =  a1.getDenominator();  [CE]  long  cannot  be  dereferenced  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  a1.getDenominator();  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    r0  =  a1.getDenominator();	  	non-compiled	[CE]  long  cannot  be  dereferenced	11	None	add
127	[BUG]  [BUGGY]  r0  =  a1;  r0  =  a1.getValue();  [CE]  long  cannot  be  dereferenced  [FE]      FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  a1;  r0  =  a1.getValue();  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0    =    a1;    r0  =  a1.getValue();	  	non-compiled	[CE]  long  cannot  be  dereferenced	11	None	add
128	[BUG]  [BUGGY]  n  =  Math.min(denominator,  a0);  [CE]  possible  loss  of  precision  [FE]                FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  n  =  Math.min(denominator,  a0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.min(denominator,  a0);	  n    =    Math.min(denominator,    value);    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
129	[BUG]  [BUGGY]  timeout  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r1;  r0  =  r0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  r1;  r0  =  r0;	          r0    =    r1;    r0    =    r1);    	compilable	timeout	20	1	replace
130	[BUG]  [BUGGY]  r0  =  r1;  r0  =  r0;  timeout  [FE]            FractionConversionException      [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  r0  =  r1;  r0  =  r0;  [BUGGY]      stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  r1;  r0  =  r0;	          r0    =    r1;    r0    =    r1);    	compilable	timeout	20	1	replace
131	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop        =        false;        r0    =    r1;    stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	36	2	add
132	[BUG]  [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {      [BUGGY]  stop    =    false;    r0  =  r1;  stop  =  false;  a0  =  a1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop        =        false;        r0    =    r1;    stop    =    false;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	36	2	add
