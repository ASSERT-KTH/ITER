bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      n  =  Math.abs(value)/  denominator;  [CE]  possible  loss  of  precision  [FE]            FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      n  =  Math.abs(value)/  denominator;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        n  =  Math.abs(value)/  denominator;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	4	None	add
2	[BUG]  [BUGGY]  stop  =  denominator;  [CE]  incompatible  types  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  denominator;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  denominator;	  stop    =    numerator;    	non-compiled	[CE]  incompatible  types	3	None	replace
3	[BUG]  [BUGGY]  stop  =  r0;  [CE]  incompatible  types  [FE]            FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  r0;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  r0;	  stop    =    numerator;    	non-compiled	[CE]  incompatible  types	3	None	replace
4	[BUG]  [BUGGY]  n  =  Math.abs(convergent  -  value);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(convergent  -  value);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(convergent  -  value);	      n    =    Math.abs(value    -    value);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
5	[BUG]  [BUGGY]  n  =  Math.abs(value  -  denominator);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(value  -  denominator);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  -  denominator);	      n    =    Math.abs(value    -    value);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
6	[BUG]  [BUGGY]  n  =  Math.abs(value  /  r0);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(value  /  r0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  r0);	      n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
7	[BUG]  [BUGGY]  n  =  Math.abs(value  -  a0);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(value  -  a0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  -  a0);	      n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
8	[BUG]  [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(value  /  DEFAULT_EPSILON);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  /  DEFAULT_EPSILON);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
9	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  a0;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  a0;	      r0    =    r1;    	compilable	  [FE]  FractionConversionException  	10	7	replace
10	[BUG]  [BUGGY]  r0  =  a0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  a0;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  a0;	      r0    =    r1;    	compilable	  [FE]  FractionConversionException  	10	7	replace
11	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  a1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  a1;	      r0    =    r1;    	compilable	  [FE]  FractionConversionException  	10	7	replace
12	[BUG]  [BUGGY]  r0  =  a1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  a1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  a1;	      r0    =    r1;    	compilable	  [FE]  FractionConversionException  	10	7	replace
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	        a0    =    a1;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	6	2	add
14	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a1;	  	compilable	  [FE]  FractionConversionException  	6	2	add
15	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a2;  [CE]  cannot  find  symbol  a2  [FE]      FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a2;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a2;	  	non-compiled	[CE]  cannot  find  symbol  a2	6	None	add
16	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a1.;  [CE]  <identifier>  expected  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1.;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a1.;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
17	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      r0  =  r1;  r0  =  r1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	        r0    =    r1;    r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	9	2	add
18	[BUG]  [BUGGY]      r0  =  r1;  r0  =  r1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      r0  =  r1;  r0  =  r1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        r0    =    r1;    r0  =  r1;	  	compilable	  [FE]  FractionConversionException  	9	2	add
19	[BUG]  [BUGGY]      r0  =  r1;  r0  =  r2;  [CE]  cannot  find  symbol  r2  [FE]      FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      r0  =  r1;  r0  =  r2;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        r0    =    r1;    r0  =  r2;	  	non-compiled	[CE]  cannot  find  symbol  r2	9	None	add
20	[BUG]  [BUGGY]      r0  =  r1;  r0  =  r1);  [CE]  ';'  expected  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      r0  =  r1;  r0  =  r1);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        r0    =    r1;    r0  =  r1);	  	non-compiled	[CE]  ';'  expected	9	None	add
21	[BUG]  [BUGGY]  a0  =  a2;  [CE]  cannot  find  symbol  a2  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  a0  =  a2;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  a2;	      a0    =    a1;    	non-compiled	[CE]  cannot  find  symbol  a2	7	None	replace
22	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop    =    false;    stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
23	[BUG]  [BUGGY]  stop  =  false;  stop  =  false;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop    =    false;    stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
24	[BUG]  [BUGGY]  stop  =  false;  Stop  =  false;  [CE]  cannot  find  symbol  Stop  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  Stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop    =    false;    Stop  =  false;	  timeout    	non-compiled	[CE]  cannot  find  symbol  Stop	1	None	add
25	[BUG]  [BUGGY]  stop  =  false;  r0  =  stop  =  false;  [CE]  incompatible  types  [FE]            FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  r0  =  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop    =    false;    r0  =  stop  =  false;	  timeout    	non-compiled	[CE]  incompatible  types	1	None	add
26	[BUG]  [BUGGY]  n  =  Math.abs(value  -  1);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(value  -  1);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(value  -  1);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
27	[BUG]  [BUGGY]  timeout  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  value;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  value;	      r0    =    r1;    	compilable	timeout	10	1	replace
28	[BUG]  [BUGGY]  r0  =  value;  timeout  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  value;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  value;	      r0    =    r1;    	compilable	timeout	10	1	replace
29	[BUG]  [BUGGY]      Numerator  r1  =(Numerator)n.clone();  [CE]  cannot  find  symbol  [FE]            FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      Numerator  r1  =(Numerator)n.clone();  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        Numerator  r1  =(Numerator)n.clone();	  timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	add
30	[BUG]  [BUGGY]      Numerator  r1  =(Numerator)n.get(value);  [CE]  cannot  find  symbol  [FE]              FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      Numerator  r1  =(Numerator)n.get(value);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        Numerator  r1  =(Numerator)n.get(value);	  timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	add
31	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a1);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a1);	  	non-compiled	[CE]  ';'  expected	6	None	add
32	[BUG]  [BUGGY]  stop  =  value;  [CE]  incompatible  types  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  value;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop  =  value;	  stop    =    numerator;    	non-compiled	[CE]  incompatible  types	3	None	replace
33	[BUG]  [BUGGY]  a0  =  r1;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  a0  =  r1;  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	a0  =  r1;	      a0    =    a1;    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
34	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop    =    false;    a0  =  a1;  stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
35	[BUG]  [BUGGY]  stop  =  false;  a0  =  a1;  stop  =  false;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  a0  =  a1;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop    =    false;    a0  =  a1;  stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
36	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  r0  =  r1;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	stop    =    false;    r0  =  r1;  stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
37	[BUG]  [BUGGY]  stop  =  false;  r0  =  r1;  stop  =  false;  [FE]  FractionConversionException  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  stop  =  false;  r0  =  r1;  stop  =  false;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	stop    =    false;    r0  =  r1;  stop  =  false;	  timeout    	compilable	  [FE]  FractionConversionException  	1	2	add
38	[BUG]  [BUGGY]  n  =  Math.min(denominator,  value);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.min(denominator,  value);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.min(denominator,  value);	      timeout    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
39	[BUG]  [BUGGY]  n  =  Math.abs(denominator  -  r0);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  n  =  Math.abs(denominator  -  r0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	n  =  Math.abs(denominator  -  r0);	      n    =    Math.abs(value    -    r0);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
40	[BUG]  [BUGGY]  timeout  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  Math.abs(value  -  r0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	add	r0  =  Math.abs(value  -  r0);	      n    =    Math.abs(value    -    r0);    	compilable	timeout	12	1	replace
41	[BUG]  [BUGGY]  r0  =  Math.abs(value  -  r0);  timeout  [FE]          FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  r0  =  Math.abs(value  -  r0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	r0  =  Math.abs(value  -  r0);	      n    =    Math.abs(value    -    r0);    	compilable	timeout	12	1	replace
42	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a1.getValue();  [CE]  long  cannot  be  dereferenced  [FE]    FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1.getValue();  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a1.getValue();	  	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	add
43	[BUG]  [BUGGY]      a0  =  a1;  a0  =  a1.getDenominator();  [CE]  long  cannot  be  dereferenced  [FE]      FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]      a0  =  a1;  a0  =  a1.getDenominator();  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	        a0    =    a1;    a0  =  a1.getDenominator();	  	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	add
44	[BUG]  [BUGGY]  Neighbor  n  =  Math.abs(value  -  r0);  [CE]  cannot  find  symbol  [FE]        FractionConversionException    [CONTEXT]    if  (n  <  maxIterations  &&  FastMath.abs(convergent  -  value)  >  epsilon  &&  q2  <  maxDenominator)  {  p0  =  p1;  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {    [BUGGY]  Neighbor  n  =  Math.abs(value  -  r0);  [BUGGY]    stop  =  true;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2672612419124244	227	227	2	replace	Neighbor  n  =  Math.abs(value  -  r0);	      n    =    Math.abs(value    -    value);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
