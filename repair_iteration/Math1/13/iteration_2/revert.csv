projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(q2<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=value;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=n;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=numerator;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=null;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n.doubleValue()+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxDenominator){if(n<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxDenominator){If(n<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=n-1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=n+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxIterations){if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<maxIterations){If(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=numerator;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=null;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328n=Math.min(numerator,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328n=Math.min(numerator,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(p1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(p0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=0){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=value;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=r0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=value.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=newBigInteger(value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<0){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=r0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<denominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<epsilon){if(n<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<epsilon){If(n<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328n=Math.min(numerator,denominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328n=Math.min(numerator,r0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n==epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328doubleq2=value;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=r0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n==0){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(q1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n+2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=denominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<0){if(n<0){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<0){If(n<0){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=r1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n+2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n.doubleValue()+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328If(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=r1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=newBigInteger(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=newBigInteger(n);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){if(n>=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){if(n!=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){if(n==maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(numerator<denominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=BigInteger.valueOf(r0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=BigInteger.valueOf(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328doubleq2=n+1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328doubleq2=0;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328doubleq2=n-1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328If(n<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328If(n<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=newBigInteger(numerator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=BigInteger.valueOf(p1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=BigInteger.valueOf(r0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=newBigInteger(numerator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=n*1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=newBigInteger(value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=n*1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(q0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=value-1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=0L;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerdenominator=BigInteger.valueOf(p2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n>=maxIterations){if(n>>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerq2=newBigInteger(n);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<0||n>epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328intq2=n/1;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=epsilon||n>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<=epsilon&&n<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=r0.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328if(n<denominator&&n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java328BigIntegerp2=BigInteger.valueOf(n);
