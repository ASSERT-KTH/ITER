bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]  long  p1  =  1;  [BUGGY]  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	add	long  p1  =  1;	long  p1  =  a0;  	compilable	  [FE]  FractionConversionException  	49	5	replace
2	[BUG]  [BUGGY]  long  p1  =  1;  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]  long  p1  =  1;  [BUGGY]  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	long  p1  =  1;	long  p1  =  a0;  	compilable	  [FE]  FractionConversionException  	49	5	replace
3	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]  long  p1  =  0;  [BUGGY]  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	add	long  p1  =  0;	long  p1  =  a0;  	compilable	  [FE]  FractionConversionException  	49	2	replace
4	[BUG]  [BUGGY]  long  p1  =  0;  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]  long  p1  =  0;  [BUGGY]  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	long  p1  =  0;	long  p1  =  a0;  	compilable	  [FE]  FractionConversionException  	49	2	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  p1  [FE]        FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    [BUGGY]  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	  	long  p1  =  a0;  	non-compiled	[CE]  cannot  find  symbol  p1	49	None	replace
6	[BUG]  [BUGGY]    BigInteger  a1  =  numerator.doubleValue();  [CE]  incompatible  types  [FE]    FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  a1  =  numerator.doubleValue();  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  a1  =  numerator.doubleValue();		non-compiled	[CE]  incompatible  types	50	None	add
7	[BUG]  [BUGGY]    BigInteger  a1  =  numerator;  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  a1  =  numerator;  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  a1  =  numerator;		non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	50	None	add
8	[BUG]  [BUGGY]    BigInteger  n  =  Math.min(a0,  value);  [CE]  incompatible  types  [FE]        FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  n  =  Math.min(a0,  value);  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  n  =  Math.min(a0,  value);		non-compiled	[CE]  incompatible  types	50	None	add
9	[BUG]  [BUGGY]    BigInteger  a0  =(BigInteger)n.clone();  [CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  a0  =(BigInteger)n.clone();  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  a0  =(BigInteger)n.clone();		non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	50	None	add
10	[BUG]  [BUGGY]    BigInteger  a1  =(BigInteger)n.clone();  [CE]  cannot  find  symbol  n  [FE]      FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  a1  =(BigInteger)n.clone();  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  a1  =(BigInteger)n.clone();		non-compiled	[CE]  cannot  find  symbol  n	50	None	add
11	[BUG]  [BUGGY]    BigInteger  n  =  Math.abs(value);  [CE]  incompatible  types  [FE]    FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  n  =  Math.abs(value);  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  n  =  Math.abs(value);		non-compiled	[CE]  incompatible  types	50	None	add
12	[BUG]  [BUGGY]    BigInteger  n  =  Math.abs(numerator);  [CE]  no  suitable  method  found  for  abs(BigInteger)  [FE]      FractionConversionException  [CONTEXT]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;  long  q0  =  0;  [BUGGY]    BigInteger  n  =  Math.abs(numerator);  [BUGGY]  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	289	289	2	replace	    BigInteger  n  =  Math.abs(numerator);		non-compiled	[CE]  no  suitable  method  found  for  abs(BigInteger)	50	None	add
