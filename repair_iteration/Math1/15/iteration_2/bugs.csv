bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.numerator  =  (int)q2;  this.numerator  =  (int)q2;  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  this.numerator  =  (int)q2;  this.numerator  =  (int)q2;  [BUGGY]    this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	this.numerator    =    (int)q2;    this.numerator  =  (int)q2;	  	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	4	None	add
2	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  this.numerator  =(int)Math.floor(q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	add	this.numerator  =(int)Math.floor(q2);	      this.numerator    =(int)Math.floor(value);    	compilable	  [FE]  FractionConversionException  	1	6	replace
3	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(q2);  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  this.numerator  =(int)Math.floor(q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	this.numerator  =(int)Math.floor(q2);	      this.numerator    =(int)Math.floor(value);    	compilable	  [FE]  FractionConversionException  	1	6	replace
4	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  this.numerator  =  (int)q1;  [BUGGY]    this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	add	this.numerator  =  (int)q1;	  this.numerator    =    (int)q2;    	compilable	  [FE]  FractionConversionException  	5	5	replace
5	[BUG]  [BUGGY]  this.numerator  =  (int)q1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  this.numerator  =  (int)q1;  [BUGGY]    this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	this.numerator  =  (int)q1;	  this.numerator    =    (int)q2;    	compilable	  [FE]  FractionConversionException  	5	5	replace
6	[BUG]  [BUGGY]  n  =  Math.min(denominator,  q2);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(denominator,  q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(denominator,  q2);	      n    =    Math.min(value,    q2);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
7	[BUG]  [BUGGY]  n  =  Math.min(p1,  q2);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(p1,  q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(p1,  q2);	      n    =    Math.min(value,    q2);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
8	[BUG]  [BUGGY]  n  =  Math.abs(value  -  1);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.abs(value  -  1);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.abs(value  -  1);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
9	[BUG]  [BUGGY]  n  =  Math.abs(value  /  2);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.abs(value  /  2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.abs(value  /  2);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
10	[BUG]  [BUGGY]  n  =  Math.min(numerator,  maxDenominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(numerator,  maxDenominator);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(numerator,  maxDenominator);	      n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	7	None	replace
11	[BUG]  [BUGGY]  n  =  Math.min(denominator,  maxDenominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(denominator,  maxDenominator);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(denominator,  maxDenominator);	      n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	7	None	replace
12	[BUG]  [BUGGY]  n  =  r0.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  r0.doubleValue();  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  r0.doubleValue();	      n    =    value.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	6	None	replace
13	[BUG]  [BUGGY]  int  p2  =(int)Math.floor(q2);  [CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  int  p2  =(int)Math.floor(q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	int  p2  =(int)Math.floor(q2);	      int    p2    =(int)Math.floor(value);    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)	9	None	replace
14	[BUG]  [BUGGY]  double  p2  =  value.doubleValue();  [CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]            FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  double  p2  =  value.doubleValue();  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	double  p2  =  value.doubleValue();	      int    p2    =    value.doubleValue();    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)	8	None	replace
15	[BUG]  [BUGGY]  n  =  q2.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  q2.doubleValue();  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  q2.doubleValue();	      n    =    value.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
16	[BUG]  [BUGGY]  float  p2  =(float)Math.floor(value);  [CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  float  p2  =(float)Math.floor(value);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	float  p2  =(float)Math.floor(value);	      int    p2    =(int)Math.floor(value);    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  Fraction(double,double,int,int)	9	None	replace
17	[BUG]  [BUGGY]  n  =  Math.min(p2,  q2);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(p2,  q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(p2,  q2);	      n    =    Math.min(value,    q2);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
18	[BUG]  [BUGGY]  n  =  Math.abs(q2);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.abs(q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.abs(q2);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
19	[BUG]  [BUGGY]  n  =  Math.min(denominator,  value);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.min(denominator,  value);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.min(denominator,  value);	      n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
20	[BUG]  [BUGGY]  n  =  Math.abs(value  /  q2);  [CE]  possible  loss  of  precision  [FE]          FractionConversionException    [CONTEXT]    }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {    [BUGGY]  n  =  Math.abs(value  /  q2);  [BUGGY]    this.numerator  =  (int)  p2;  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	236	236	2	replace	n  =  Math.abs(value  /  q2);	      n    =    Math.abs(value);    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
