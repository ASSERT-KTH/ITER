bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  a1  =  (double)r1.floor(r1);  [CE]  double  cannot  be  dereferenced  [FE]            FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)r1.floor(r1);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)r1.floor(r1);	  final    double    a1    =    (double)FathMath.floor(r1);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
2	[BUG]  [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)-  1;  final  int  a1  =  (int)FastMath.floor(r1)-  1;  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)-  1;  final  int  a1  =  (int)FastMath.floor(r1)-  1;  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final    int    a1    =    (int)FastMath.floor(r1)-    1;    final  int  a1  =  (int)FastMath.floor(r1)-  1;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	18	None	add
3	[BUG]  [BUGGY]  final  double  a1  =  (double)FastMath.floor(r1)-  1;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)FastMath.floor(r1)-  1;  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)FastMath.floor(r1)-  1;	  final    int    a1    =    (int)FastMath.floor(r1)-    1;    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
4	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)/  1;  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	add	final  int  a1  =  (int)FastMath.floor(r1)/  1;	  final    int    a1    =    (int)FastMath.floor(r1)-    1;    	compilable	  [FE]  FractionConversionException  	19	2	replace
5	[BUG]  [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)/  1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)/  1;  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  int  a1  =  (int)FastMath.floor(r1)/  1;	  final    int    a1    =    (int)FastMath.floor(r1)-    1;    	compilable	  [FE]  FractionConversionException  	19	2	replace
6	[BUG]  [BUGGY]  final  double  r1  =  1.0  /(a0  +  n);  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  r1  =  1.0  /(a0  +  n);  [BUGGY]      final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  r1  =  1.0  /(a0  +  n);	  final    double    r1    =    1.0    /(a0);    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	replace
7	[BUG]  [BUGGY]  final  double  r1  =  1.0  /(r2  -  a0);  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  r1  =  1.0  /(r2  -  a0);  [BUGGY]      final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  r1  =  1.0  /(r2  -  a0);	  final    double    r1    =    1.0    /(q2    -    a0);    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
8	[BUG]  [BUGGY]  final  double  a1  =  (double)Factory.floor(r1);  [CE]  cannot  find  symbol  Factory  [FE]            FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)Factory.floor(r1);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)Factory.floor(r1);	  final    int    a1    =    (int)Factory.floor(r1);    	non-compiled	[CE]  cannot  find  symbol  Factory	10	None	replace
9	[BUG]  [BUGGY]  final  double  r1  =  1.0  /(n  +  1);  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  r1  =  1.0  /(n  +  1);  [BUGGY]      final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  r1  =  1.0  /(n  +  1);	  final    double    r1    =    1.0    /(n);    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	replace
10	[BUG]  [BUGGY]  final  double  a1  =  (double)FaderMath.floor(r0);  [CE]  cannot  find  symbol  FaderMath  [FE]              FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)FaderMath.floor(r0);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)FaderMath.floor(r0);	  final    int    a1    =    (int)FaderMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol  FaderMath	14	None	replace
11	[BUG]  [BUGGY]  final  long  a1  =  (long)FastMath.floor(r1);  final  long  a1  =  (long)FastMath.floor(r2);  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  long  a1  =  (long)FastMath.floor(r1);  final  long  a1  =  (long)FastMath.floor(r2);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  long  a1  =  (long)FastMath.floor(r1);  final  long  a1  =  (long)FastMath.floor(r2);	  final    int    a1    =    (int)FastMath.floor(r1);    final    int    a1    =    (int)FastMath.floor(r2);    	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
12	[BUG]  [BUGGY]  final  double  r1  =  1.0  /(a0  -  a0);  [CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  r1  =  1.0  /(a0  -  a0);  [BUGGY]      final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  r1  =  1.0  /(a0  -  a0);	  final    double    r1    =    1.0    /(a0    -    r1);    	non-compiled	[CE]  variable  r1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
13	[BUG]  [BUGGY]  final  int  a1  =  (int)Factory.floor(r0);  [CE]  cannot  find  symbol  Factory  [FE]            FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =  (int)Factory.floor(r0);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  int  a1  =  (int)Factory.floor(r0);	  final    int    a1    =    (int)Factory.floor(r1);    	non-compiled	[CE]  cannot  find  symbol  Factory	10	None	replace
14	[BUG]  [BUGGY]  final  double  a1  =  (double)FathMath.floor(r0);  [CE]  cannot  find  symbol  FathMath  [FE]            FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)FathMath.floor(r0);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)FathMath.floor(r0);	  final    double    a1    =    (double)FathMath.floor(r1);    	non-compiled	[CE]  cannot  find  symbol  FathMath	20	None	replace
15	[BUG]  [BUGGY]  final  int  a1  =(int)FastMath.floor(r1);  final  int  a2  =(int)FastMath.floor(r2);  [CE]  cannot  find  symbol  r2  [FE]        FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =(int)FastMath.floor(r1);  final  int  a2  =(int)FastMath.floor(r2);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  int  a1  =(int)FastMath.floor(r1);  final  int  a2  =(int)FastMath.floor(r2);	  final    int    a1    =    (int)FastMath.floor(r1);    final    int    a2    =    (int)FastMath.floor(r1);    	non-compiled	[CE]  cannot  find  symbol  r2	21	None	replace
16	[BUG]  [BUGGY]  final  double  a1  =  (double)FastMath.floor(r1);  final  double  a2  =  (double)FastMath.floor(r1);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  double  a1  =  (double)FastMath.floor(r1);  final  double  a2  =  (double)FastMath.floor(r1);  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final  double  a1  =  (double)FastMath.floor(r1);  final  double  a2  =  (double)FastMath.floor(r1);	  final    int    a1    =    (int)FastMath.floor(r1);    final    int    a2    =    (int)FastMath.floor(r1);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
17	[BUG]  [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)-  1;  final  int  a2  =  (int)FastMath.floor(r1)-  1;  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  final  double  r1  =  1.0  /  (r0  -  a0);      [BUGGY]  final  int  a1  =  (int)FastMath.floor(r1)-  1;  final  int  a2  =  (int)FastMath.floor(r1)-  1;  [BUGGY]      p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  final  double  convergent  =  (double)  p2  /  (double)  q2;  if  ((n  <  maxIterations)  &&  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	300	300	2	replace	final    int    a1    =    (int)FastMath.floor(r1)-    1;    final  int  a2  =  (int)FastMath.floor(r1)-  1;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	18	None	add
