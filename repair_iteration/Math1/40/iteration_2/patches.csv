bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p0;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p0;  p1  =  p2;	          p1    =    p2;    p1    =    p2;    	compilable	  [FE]  FractionConversionException  	18	2	replace
2	[BUG]  [BUGGY]  p1  =  p0;  p1  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p0;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p0;  p1  =  p2;	          p1    =    p2;    p1    =    p2;    	compilable	  [FE]  FractionConversionException  	18	2	replace
3	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p2        =        p1;        p2    =    p1;    p2  =  p1;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	7	5	add
4	[BUG]  [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2  =  p1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p1;        p2    =    p1;    p2  =  p1;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	7	5	add
5	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p1  =  p1;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p2        =        p1;        p2    =    p1;    p1  =  p1;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	7	5	add
6	[BUG]  [BUGGY]          p2    =    p1;    p2  =  p1;  p1  =  p1;  p2  =  p1;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p1  =  p1;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p1;        p2    =    p1;    p1  =  p1;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	7	5	add
7	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p1  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p0    =    p0;    p1  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	2	add
8	[BUG]  [BUGGY]  p1    =    p0;    p0  =  p0;  p1  =  p0;  p0  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p1  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p0    =    p0;    p1  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	2	add
9	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p0  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p0    =    p0;    p0  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	2	add
10	[BUG]  [BUGGY]  p1    =    p0;    p0  =  p0;  p0  =  p0;  p0  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p0  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p0    =    p0;    p0  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	2	add
11	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p1  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p1        =        p2;        p1    =    p2;    p1  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	2	add
12	[BUG]  [BUGGY]          p1    =    p2;    p1  =  p2;  p1  =  p2;  p1  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p1  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p1    =    p2;    p1  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	2	add
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p2  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p1        =        p2;        p1    =    p2;    p2  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	2	add
14	[BUG]  [BUGGY]          p1    =    p2;    p1  =  p2;  p2  =  p2;  p1  =  p2;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p2  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p1    =    p2;    p2  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	2	add
15	[BUG]  [BUGGY]  n  =  Math.abs(value  /  q0);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  /  q0);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  /  q0);	  n    =    Math.abs(value    /    q1);    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
16	[BUG]  [BUGGY]  n  =  Math.abs(value  /  p0);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  /  p0);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  /  p0);	  n    =    Math.abs(value    /    q1);    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
17	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p2;  p2  =  p0;	  p1    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	14	2	replace
18	[BUG]  [BUGGY]  p1  =  p2;  p2  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p2;  p2  =  p0;	  p1    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	14	2	replace
19	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p1;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p1;  p2  =  p0;	  p1    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	14	5	replace
20	[BUG]  [BUGGY]  p1  =  p1;  p2  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p1;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p1;  p2  =  p0;	  p1    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	14	5	replace
21	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p2        +        1;        p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	2	add
22	[BUG]  [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2  +  1;  p1  =  p2  +  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	2	add
23	[BUG]  [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2,  +  1;  p1  =  p2  +  1;  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2,  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p1    =    p2    +    1;    p1  =  p2,  +  1;  p1  =  p2  +  1;	  	non-compiled	[CE]  ';'  expected	3	None	add
24	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p2  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p2        +        1;        p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	5	add
25	[BUG]  [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p2  =  p2  +  1;  p1  =  p2  +  1;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p2  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	5	add
26	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p1  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p1    =    p0;    p1  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	2	add
27	[BUG]  [BUGGY]  p1    =    p0;    p1  =  p0;  p1  =  p0;  p1  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p1  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p1    =    p0;    p1  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	2	add
28	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p0  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p1    =    p0;    p0  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	2	add
29	[BUG]  [BUGGY]  p1    =    p0;    p1  =  p0;  p0  =  p0;  p1  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p0  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p1    =    p0;    p0  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	2	add
30	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p2  =  p2;  p1  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p1        =        p2;        p2    =    p2;    p1  =  p2;  p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	19	2	add
31	[BUG]  [BUGGY]          p1    =    p2;    p2  =  p2;  p1  =  p2;  p2  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p2  =  p2;  p1  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p2    =    p2;    p1  =  p2;  p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	19	2	add
32	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p2  =  p2;  p2  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p1        =        p2;        p2    =    p2;    p2  =  p2;  p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	19	2	add
33	[BUG]  [BUGGY]          p1    =    p2;    p2  =  p2;  p2  =  p2;  p2  =  p2;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p2  =  p2;  p2  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p2    =    p2;    p2  =  p2;  p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	19	2	add
34	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q2;  p2  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2    =    q2;    p2  =  q2;	  	compilable	  [FE]  FractionConversionException  	29	5	add
35	[BUG]  [BUGGY]  p2  =  q2;  p2  =  q2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q2;  p2  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q2;    p2  =  q2;	  	compilable	  [FE]  FractionConversionException  	29	5	add
36	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q2;  p1  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2    =    q2;    p1  =  q2;	  	compilable	  [FE]  FractionConversionException  	29	5	add
37	[BUG]  [BUGGY]  p2  =  q2;  p1  =  q2;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q2;  p1  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q2;    p1  =  q2;	  	compilable	  [FE]  FractionConversionException  	29	5	add
38	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q0;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2  =  q0;  p2  =  p1;	          p2    =    p0;    p2    =    p1;    	compilable	  [FE]  FractionConversionException  	28	5	replace
39	[BUG]  [BUGGY]  p2  =  q0;  p2  =  p1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q0;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  q0;  p2  =  p1;	          p2    =    p0;    p2    =    p1;    	compilable	  [FE]  FractionConversionException  	28	5	replace
40	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2    =    p2;    p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	33	2	add
41	[BUG]  [BUGGY]  p2  =  p2;  p2  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p2;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    p2;    p2  =  p2;	  	compilable	  [FE]  FractionConversionException  	33	2	add
42	[BUG]  [BUGGY]  p2  =  p2;  p2  =  p2);  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p2;  p2  =  p2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    p2;    p2  =  p2);	  	non-compiled	[CE]  ';'  expected	33	None	add
43	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p2        =        p0;        p2    =    p1;    p2  =  p0;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	27	5	add
44	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p1;    p2  =  p0;  p2  =  p1;	  	compilable	  [FE]  FractionConversionException  	27	5	add
45	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1.;  [CE]  <identifier>  expected  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1.;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p1;    p2  =  p0;  p2  =  p1.;	  	non-compiled	[CE]  <identifier>  expected	27	None	add
46	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2  +  1;  p2  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p2        +        1;        p2    =    p2    +    1;    p1  =  p2  +  1;  p2  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	5	5	add
47	[BUG]  [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2  +  1;  p2  =  p2  +  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2  +  1;  p2  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p2    =    p2    +    1;    p1  =  p2  +  1;  p2  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	5	5	add
48	[BUG]  [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2,  +  1;  p2  =  p2  +  1;  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p1  =  p2,  +  1;  p2  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p2    =    p2    +    1;    p1  =  p2,  +  1;  p2  =  p2  +  1;	  	non-compiled	[CE]  ';'  expected	5	None	add
49	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p2  =  p2  +  1;  p2  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p2        +        1;        p2    =    p2    +    1;    p2  =  p2  +  1;  p2  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	5	5	add
50	[BUG]  [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p2  =  p2  +  1;  p2  =  p2  +  1;  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p2  =  p2  +  1;  p2  =  p2  +  1;  p2  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p2    =    p2    +    1;    p2  =  p2  +  1;  p2  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	5	5	add
51	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p2        =        p0;        p2    =    p0;    p2  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	25	5	add
52	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p0;    p2  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	25	5	add
53	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p2        =        p0;        p2    =    p0;    p1  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	25	5	add
54	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p0;    p1  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	25	5	add
55	[BUG]  [BUGGY]  p1  =  p2.  +  1;  [CE]  <identifier>  expected  [FE]        FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2.  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p2.  +  1;	  p1    =    p2    +    1;    p1    =    p2.    +    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
56	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p2    =    p0;    p1  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
57	[BUG]  [BUGGY]  p1    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p1  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p2    =    p0;    p1  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
58	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p0  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p2    =    p0;    p0  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
59	[BUG]  [BUGGY]  p1    =    p0;    p2  =  p0;  p0  =  p0;  p2  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p0  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p2    =    p0;    p0  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
60	[BUG]  [BUGGY]  p2  =  p0;  p2  =  p1.;  [CE]  <identifier>  expected  [FE]          FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p0;  p2  =  p1.;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p0;  p2  =  p1.;	          p2    =    p1;    p2    =    p1.;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  n  =  Math.abs(value  -convergent);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  -convergent);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  -convergent);	  n    =    Math.abs(convergent    -    value);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
62	[BUG]  [BUGGY]  n  =  Math.abs(value  convergent  -  value);  [CE]  ')'  expected  [FE]              FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  convergent  -  value);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  convergent  -  value);	  n    =    Math.abs(convergent    -    value);    	non-compiled	[CE]  ')'  expected	42	None	replace
63	[BUG]  [BUGGY]  BigInteger  p2  =  maxDenominator  +  1;  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  BigInteger  p2  =  maxDenominator  +  1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	BigInteger  p2  =  maxDenominator  +  1;	  BigInteger    p2    =    n    +    1;    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	35	None	replace
64	[BUG]  [BUGGY]  p1  =  p0  +  1;  p1  =  p2)+  1;  [CE]  ';'  expected  [FE]        FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p0  +  1;  p1  =  p2)+  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p0  +  1;  p1  =  p2)+  1;	  p1    =    p2    +    1;    p1    =    p2)    +    1;    	non-compiled	[CE]  ';'  expected	40	None	replace
65	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q1;  p2  =  q1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2    =    q1;    p2  =  q1;	  	compilable	  [FE]  FractionConversionException  	31	4	add
66	[BUG]  [BUGGY]  p2  =  q1;  p2  =  q1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q1;  p2  =  q1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q1;    p2  =  q1;	  	compilable	  [FE]  FractionConversionException  	31	4	add
67	[BUG]  [BUGGY]  p2  =  q1;  p2  =  q1,;  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q1;  p2  =  q1,;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q1;    p2  =  q1,;	  	non-compiled	[CE]  ';'  expected	31	None	add
68	[BUG]  [BUGGY]  BigInteger  p2  =  1;  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  BigInteger  p2  =  1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	BigInteger  p2  =  1;	  BigInteger    p2    =    0;    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
69	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p0  =  p0;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	5	replace
70	[BUG]  [BUGGY]  p0  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p0  =  p0;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	5	replace
71	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p2;  p0  =  p0;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	2	replace
72	[BUG]  [BUGGY]  p1  =  p2;  p0  =  p0;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p2;  p0  =  p0;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	2	replace
73	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p1;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p1;  p2  =  p2;	          p1    =    p2;    p2    =    p2;    	compilable	  [FE]  FractionConversionException  	20	5	replace
74	[BUG]  [BUGGY]  p1  =  p1;  p2  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p1;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p1;  p2  =  p2;	          p1    =    p2;    p2    =    p2;    	compilable	  [FE]  FractionConversionException  	20	5	replace
75	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  q2;  p1  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1    =    q2;    p1  =  q2;	  	compilable	  [FE]  FractionConversionException  	15	2	add
76	[BUG]  [BUGGY]  p1  =  q2;  p1  =  q2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  q2;  p1  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1    =    q2;    p1  =  q2;	  	compilable	  [FE]  FractionConversionException  	15	2	add
77	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  q2;  p2  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1    =    q2;    p2  =  q2;	  	compilable	  [FE]  FractionConversionException  	15	5	add
78	[BUG]  [BUGGY]  p1  =  q2;  p2  =  q2;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  q2;  p2  =  q2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1    =    q2;    p2  =  q2;	  	compilable	  [FE]  FractionConversionException  	15	5	add
79	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p2  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p1    =    p0;    p2  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	5	add
80	[BUG]  [BUGGY]  p1    =    p0;    p1  =  p0;  p2  =  p0;  p1  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p1  =  p0;  p2  =  p0;  p1  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p1    =    p0;    p2  =  p0;  p1  =  p0;	  	compilable	  [FE]  FractionConversionException  	11	5	add
81	[BUG]  [BUGGY]          p1    =    p2;    p2  =  p2;  p1  =  p2;  p2  =  p2);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p2  =  p2;  p1  =  p2;  p2  =  p2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p2    =    p2;    p1  =  p2;  p2  =  p2);	  	non-compiled	[CE]  ';'  expected	19	None	add
82	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2)  =  p1;  [CE]  not  a  statement  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2)  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p1;    p2  =  p0;  p2)  =  p1;	  	non-compiled	[CE]  not  a  statement	27	None	add
83	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p0  =  p1;  p0  =  p2;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p0  =  p1;  p0  =  p2;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	5	replace
84	[BUG]  [BUGGY]  p0  =  p1;  p0  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p0  =  p1;  p0  =  p2;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p0  =  p1;  p0  =  p2;	  p1    =    p0;    p0    =    p0;    	compilable	  [FE]  FractionConversionException  	39	5	replace
85	[BUG]  [BUGGY]  p2  =  q1;  p2  =  q1);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q1;  p2  =  q1);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q1;    p2  =  q1);	  	non-compiled	[CE]  ';'  expected	31	None	add
86	[BUG]  [BUGGY]  n  =  Math.abs(value  -  value);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  -  value);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  -  value);	  n    =    Math.abs(p1    -    value);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
87	[BUG]  [BUGGY]  p1    =    p0;    p2  =  p0;  p1  =  p0;  p2)  =  p0;  [CE]  not  a  statement  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p1  =  p0;  p2)  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p2    =    p0;    p1  =  p0;  p2)  =  p0;	  	non-compiled	[CE]  not  a  statement	13	None	add
88	[BUG]  [BUGGY]  n  =  Math.abs(value  /  q2);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(value  /  q2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(value  /  q2);	  n    =    Math.abs(value    /    q1);    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
89	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p0  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p2        +        1;        p1    =    p2    +    1;    p0  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	5	add
90	[BUG]  [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p0  =  p2  +  1;  p1  =  p2  +  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p0  =  p2  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p1    =    p2    +    1;    p0  =  p2  +  1;  p1  =  p2  +  1;	  	compilable	  [FE]  FractionConversionException  	3	5	add
91	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p1  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1  =  p2;  p1  =  p0;	          p1    =    p2;    p1    =    p2;    	compilable	  [FE]  FractionConversionException  	18	5	replace
92	[BUG]  [BUGGY]  p1  =  p2;  p1  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2;  p1  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p2;  p1  =  p0;	          p1    =    p2;    p1    =    p2;    	compilable	  [FE]  FractionConversionException  	18	5	replace
93	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p1;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2  =  p1;  p2  =  p2;	          p2    =    p1;    p2    =    p1.;    	compilable	  [FE]  FractionConversionException  	9	5	replace
94	[BUG]  [BUGGY]  p2  =  p1;  p2  =  p2;  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p1;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p1;  p2  =  p2;	          p2    =    p1;    p2    =    p1.;    	compilable	  [FE]  FractionConversionException  	9	5	replace
95	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p0;  p2  =  p0;  p2)  =  p0;  [CE]  not  a  statement  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p0;  p2  =  p0;  p2)  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p0;    p2  =  p0;  p2)  =  p0;	  	non-compiled	[CE]  not  a  statement	25	None	add
96	[BUG]  [BUGGY]  p2  =  p0;  p2  =  p1);  [CE]  ';'  expected  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p0;  p2  =  p1);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p0;  p2  =  p1);	          p2    =    p1;    p2    =    p1);    	non-compiled	[CE]  ';'  expected	10	None	replace
97	[BUG]  [BUGGY]  p2  =  q2;  p2  =  q2);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  q2;  p2  =  q2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    q2;    p2  =  q2);	  	non-compiled	[CE]  ';'  expected	29	None	add
98	[BUG]  [BUGGY]  p1  =  q2;  p1  =  q2);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  q2;  p1  =  q2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1    =    q2;    p1  =  q2);	  	non-compiled	[CE]  ';'  expected	15	None	add
99	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p1;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2  =  p1;  p2  =  p0;	          p2    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	26	5	replace
100	[BUG]  [BUGGY]  p2  =  p1;  p2  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p1;  p2  =  p0;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p1;  p2  =  p0;	          p2    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	26	5	replace
101	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p0;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p2  =  p0;  p2  =  p2;	          p2    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	26	5	replace
102	[BUG]  [BUGGY]  p2  =  p0;  p2  =  p2;  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p0;  p2  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p0;  p2  =  p2;	          p2    =    p0;    p2    =    p0;    	compilable	  [FE]  FractionConversionException  	26	5	replace
103	[BUG]  [BUGGY]  p2  =  p2;  p2  =  p2.;  [CE]  <identifier>  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p2;  p2  =  p2.;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2    =    p2;    p2  =  p2.;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
104	[BUG]  [BUGGY]          p1    =    p2;    p1  =  p2;  p1  =  p2;  p1  =  p2);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p1  =  p2;  p1  =  p2);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p1    =    p2;    p1  =  p2;  p1  =  p2);	  	non-compiled	[CE]  ';'  expected	17	None	add
105	[BUG]  [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2  =  p1.;  [CE]  <identifier>  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2  =  p1.;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p1;        p2    =    p1;    p2  =  p1;  p2  =  p1.;	  	non-compiled	[CE]  <identifier>  expected	7	None	add
106	[BUG]  [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2.  +  1;  p1  =  p2  +  1;  [CE]  <identifier>  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p2    +    1;    p1  =  p2  +  1;  p1  =  p2.  +  1;  p1  =  p2  +  1;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p2        +        1;        p1    =    p2    +    1;    p1  =  p2.  +  1;  p1  =  p2  +  1;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
107	[BUG]  [BUGGY]  p2  =  p1;  p2  =  p2.;  [CE]  <identifier>  expected  [FE]          FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p2  =  p1;  p2  =  p2.;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p2  =  p1;  p2  =  p2.;	          p2    =    p1;    p2    =    p1.;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
108	[BUG]  [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2)  =  p1;  [CE]  not  a  statement  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p1;    p2  =  p1;  p2  =  p1;  p2)  =  p1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p1;        p2    =    p1;    p2  =  p1;  p2)  =  p1;	  	non-compiled	[CE]  not  a  statement	7	None	add
109	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p0  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	                p1        =        p2;        p1    =    p2;    p0  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	5	add
110	[BUG]  [BUGGY]          p1    =    p2;    p1  =  p2;  p0  =  p2;  p1  =  p2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p1    =    p2;    p1  =  p2;  p0  =  p2;  p1  =  p2;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p1        =        p2;        p1    =    p2;    p0  =  p2;  p1  =  p2;	  	compilable	  [FE]  FractionConversionException  	17	5	add
111	[BUG]  [BUGGY]  p1  =  p2.next;  [CE]  long  cannot  be  dereferenced  [FE]        FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1  =  p2.next;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1  =  p2.next;	  p1    =    p2    +    1;    p1    =    p2.    +    1;    	non-compiled	[CE]  long  cannot  be  dereferenced	41	None	replace
112	[BUG]  [BUGGY]  BigInteger  p2  =  n  *  1;  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  BigInteger  p2  =  n  *  1;  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	BigInteger  p2  =  n  *  1;	  BigInteger    p2    =    n    +    1;    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	35	None	replace
113	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p2    =    p0;    p2  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
114	[BUG]  [BUGGY]  p1    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p2  =  p0;  p2  =  p0;  p2  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p2    =    p0;    p2  =  p0;  p2  =  p0;	  	compilable	  [FE]  FractionConversionException  	13	5	add
115	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p2  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	add	p1        =        p0;        p0    =    p0;    p2  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	5	add
116	[BUG]  [BUGGY]  p1    =    p0;    p0  =  p0;  p2  =  p0;  p0  =  p0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  p1    =    p0;    p0  =  p0;  p2  =  p0;  p0  =  p0;  [BUGGY]      q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	p1        =        p0;        p0    =    p0;    p2  =  p0;  p0  =  p0;	  	compilable	  [FE]  FractionConversionException  	38	5	add
117	[BUG]  [BUGGY]  n  =  Math.abs(convergent  -  value,  epsilon);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]            FractionConversionException      [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]  n  =  Math.abs(convergent  -  value,  epsilon);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	n  =  Math.abs(convergent  -  value,  epsilon);	  n    =    Math.abs(convergent    -    value);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	42	None	replace
118	[BUG]  [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1);  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;      [BUGGY]          p2    =    p0;    p2  =  p1;  p2  =  p0;  p2  =  p1);  [BUGGY]      p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	314	314	2	replace	                p2        =        p0;        p2    =    p1;    p2  =  p0;  p2  =  p1);	  	non-compiled	[CE]  ';'  expected	27	None	add
