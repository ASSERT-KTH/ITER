bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]  q0  =  q2;  [BUGGY]  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	add	q0  =  q2;	q0  =  q1;  	compilable	  [FE]  FractionConversionException  	81	5	replace
2	[BUG]  [BUGGY]  q0  =  q2;  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]  q0  =  q2;  [BUGGY]  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	q0  =  q2;	q0  =  q1;  	compilable	  [FE]  FractionConversionException  	81	5	replace
3	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    [BUGGY]  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	add	  	q0  =  q1;  	compilable	  [FE]  FractionConversionException  	81	5	replace
4	[BUG]  [BUGGY]    [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    [BUGGY]  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	  	q0  =  q1;  	compilable	  [FE]  FractionConversionException  	81	5	replace
5	[BUG]  [BUGGY]    n  =  Math.min(epsilon,  maxDenominator);  [CE]  possible  loss  of  precision  [FE]    FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.min(epsilon,  maxDenominator);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.min(epsilon,  maxDenominator);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
6	[BUG]  [BUGGY]    n  =  Math.min(epsilon,  value);  [CE]  possible  loss  of  precision  [FE]      FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.min(epsilon,  value);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.min(epsilon,  value);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
7	[BUG]  [BUGGY]    n  =  Math.abs(value  -  q2);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.abs(value  -  q2);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.abs(value  -  q2);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
8	[BUG]  [BUGGY]    BigInteger  q2  =  p1;  [CE]  variable  q2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    BigInteger  q2  =  p1;  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    BigInteger  q2  =  p1;		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	82	None	add
9	[BUG]  [BUGGY]    BigInteger  q2  =  p0;  [CE]  variable  q2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    BigInteger  q2  =  p0;  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    BigInteger  q2  =  p0;		non-compiled	[CE]  variable  q2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	82	None	add
10	[BUG]  [BUGGY]    BigInteger  q1  =  p0;  [CE]  variable  q1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    BigInteger  q1  =  p0;  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    BigInteger  q1  =  p0;		non-compiled	[CE]  variable  q1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	82	None	add
11	[BUG]  [BUGGY]    n  =  Math.abs(value  -  p1);  [CE]  possible  loss  of  precision  [FE]    FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.abs(value  -  p1);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.abs(value  -  p1);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
12	[BUG]  [BUGGY]    n  =  Math.abs(value  -  q1);  [CE]  possible  loss  of  precision  [FE]      FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.abs(value  -  q1);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.abs(value  -  q1);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
13	[BUG]  [BUGGY]    n  =  Math.abs(value  -  p0);  [CE]  possible  loss  of  precision  [FE]        FractionConversionException  [CONTEXT]  if  ((n  <  maxIterations)  &&  (FastMath.abs(convergent  -  value)  >  epsilon)  &&  (q2  <  maxDenominator))  {  p0  =  p1;  p1  =  p2;  [BUGGY]    n  =  Math.abs(value  -  p0);  [BUGGY]  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	315	315	2	replace	    n  =  Math.abs(value  -  p0);		non-compiled	[CE]  possible  loss  of  precision	82	None	add
