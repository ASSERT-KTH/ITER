bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (n  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]  if  (n  <  =  maxIterations)  {  [BUGGY]  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if  (n  <  =  maxIterations)  {	if  (n  >=  maxIterations)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    [BUGGY]  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	  	if  (n  >=  maxIterations)  {  	non-compiled	[CE]  illegal  start  of  type	93	None	replace
3	[BUG]  [BUGGY]    n  =  Math.min(value,  maxIterations);  [CE]  possible  loss  of  precision  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    n  =  Math.min(value,  maxIterations);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    n  =  Math.min(value,  maxIterations);		non-compiled	[CE]  possible  loss  of  precision	94	None	add
4	[BUG]  [BUGGY]    BigInteger  n  =  value.doubleValue();  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    BigInteger  n  =  value.doubleValue();  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    BigInteger  n  =  value.doubleValue();		non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
5	[BUG]  [BUGGY]    n  =  Math.min(numerator,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,double)  [FE]        FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    n  =  Math.min(numerator,  value);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    n  =  Math.min(numerator,  value);		non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double)	94	None	add
6	[BUG]  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(p2);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(p2);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    BigInteger  value  =  BigInteger.valueOf(p2);		non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
7	[BUG]  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(p1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(p1);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    BigInteger  value  =  BigInteger.valueOf(p1);		non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
8	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]  if(value  >  maxIterations)  {  [BUGGY]  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	add	if(value  >  maxIterations)  {	if  (n  >=  maxIterations)  {  	compilable	  [FE]  FractionConversionException  	93	3	replace
9	[BUG]  [BUGGY]  if(value  >  maxIterations)  {  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]  if(value  >  maxIterations)  {  [BUGGY]  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if(value  >  maxIterations)  {	if  (n  >=  maxIterations)  {  	compilable	  [FE]  FractionConversionException  	93	3	replace
10	[BUG]  [BUGGY]    int  n  =  value.doubleValue();  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    int  n  =  value.doubleValue();  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    int  n  =  value.doubleValue();		non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
11	[BUG]  [BUGGY]    BigInteger  n  =  Math.min(value,  maxIterations);  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    BigInteger  n  =  Math.min(value,  maxIterations);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    BigInteger  n  =  Math.min(value,  maxIterations);		non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
12	[BUG]  [BUGGY]    BigInteger  n  =  Math.min(value,  maxDenominator);  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException  [CONTEXT]  p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);  [BUGGY]    BigInteger  n  =  Math.min(value,  maxDenominator);  [BUGGY]  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	    BigInteger  n  =  Math.min(value,  maxDenominator);		non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	94	None	add
