projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(n>=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(n<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(value,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=value.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(numerator,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=BigInteger.valueOf(p2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=BigInteger.valueOf(p1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(value>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324intn=value.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(value,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(value,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(numerator,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(maxIterations,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324doublen=value.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=gcd.getValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(value<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(value>epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(value>maxIterations){if(value>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(value>maxIterations){If(value>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=p1.doubleValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=BigInteger.valueOf(q0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=BigInteger.valueOf(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(numerator,denominator,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(numerator,value,denominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(epsilon,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(value,epsilon);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(n<=value){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(numerator,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(numerator,value,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=(BigInteger)maxIterations.clone();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=(BigInteger)super.getValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(numerator,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(n,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(number,maxIterations);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(numerator,denominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegervalue=BigInteger.valueOf(r0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.max(numerator,maxDenominator);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324n=Math.min(denominator,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegerp1=BigInteger.valueOf(p1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegerr1=BigInteger.valueOf(p1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegerp2=BigInteger.valueOf(p2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(value,a0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegern=Math.min(numerator,value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324p1=p2;a0=q1;r0=q2;
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324BigIntegerp1=p2.getValue();
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(q1<=maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java324if(q0<=maxDenominator){
