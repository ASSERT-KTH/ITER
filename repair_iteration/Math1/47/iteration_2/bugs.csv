bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxIterations);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxIterations);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(numerator,  maxIterations);	      BigInteger    n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(maxIterations,  value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(maxIterations,  value);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(maxIterations,  value);	      BigInteger    n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  double  n  =  value.doubleValue();  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  double  n  =  value.doubleValue();  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	double  n  =  value.doubleValue();	      int    n    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  BigInteger  value  =  gcd.getValue();  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =  gcd.getValue();  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =  gcd.getValue();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(value  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if(value  <  =  maxIterations)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if(value  <  =  maxIterations)  {	  if(value    >    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if(value  >  epsilon)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	add	if(value  >  epsilon)  {	  if(value    >    maxIterations)    {    	compilable	  [FE]  FractionConversionException  	9	6	replace
7	[BUG]  [BUGGY]  if(value  >  epsilon)  {  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if(value  >  epsilon)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if(value  >  epsilon)  {	  if(value    >    maxIterations)    {    	compilable	  [FE]  FractionConversionException  	9	6	replace
8	[BUG]  [BUGGY]  if(value  >  maxIterations)  {  if(value  >  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if(value  >  maxIterations)  {  if(value  >  maxIterations)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if(value    >    maxIterations)    {    if(value  >  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
9	[BUG]  [BUGGY]  if(value  >  maxIterations)  {  If(value  >  maxIterations)  {  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if(value  >  maxIterations)  {  If(value  >  maxIterations)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if(value    >    maxIterations)    {    If(value  >  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
10	[BUG]  [BUGGY]  BigInteger  n  =  p1.doubleValue();  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  p1.doubleValue();  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  p1.doubleValue();	      BigInteger    n    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(q0);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(q0);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =  BigInteger.valueOf(q0);	      BigInteger    value    =    BigInteger.valueOf(p1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(0);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(0);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =  BigInteger.valueOf(0);	      BigInteger    value    =    BigInteger.valueOf(p1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  n  =  Math.min(numerator,  denominator,  value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(numerator,  denominator,  value);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(numerator,  denominator,  value);	      n    =    Math.min(numerator,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  n  =  Math.min(numerator,  value,  denominator);  [CE]  illegal  start  of  type  [FE]              FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(numerator,  value,  denominator);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(numerator,  value,  denominator);	      n    =    Math.min(numerator,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  n  =  Math.min(epsilon,  maxIterations);  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(epsilon,  maxIterations);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(epsilon,  maxIterations);	      n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  n  =  Math.min(value,  epsilon);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(value,  epsilon);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(value,  epsilon);	      n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if  (n  <  maxIterations)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	add	if  (n  <  maxIterations)  {	  if    (n    <    =    maxIterations)    {    	compilable	  [FE]  FractionConversionException  	1	7	replace
18	[BUG]  [BUGGY]  if  (n  <  maxIterations)  {  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if  (n  <  maxIterations)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if  (n  <  maxIterations)  {	  if    (n    <    =    maxIterations)    {    	compilable	  [FE]  FractionConversionException  	1	7	replace
19	[BUG]  [BUGGY]  if  (n  <  =  value)  {  [CE]  illegal  start  of  expression  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if  (n  <  =  value)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if  (n  <  =  value)  {	  if    (n    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxDenominator);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxDenominator);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(numerator,  maxDenominator);	      BigInteger    n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  maxDenominator);  [CE]  illegal  start  of  type  [FE]              FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  maxDenominator);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(numerator,  value,  maxDenominator);	      BigInteger    n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)maxIterations.clone();  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =(BigInteger)maxIterations.clone();  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =(BigInteger)maxIterations.clone();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)super.getValue();  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =(BigInteger)super.getValue();  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =(BigInteger)super.getValue();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  n  =  Math.min(numerator,  maxIterations);  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(numerator,  maxIterations);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(numerator,  maxIterations);	      n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  n  =  Math.min(n,  value);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(n,  value);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(n,  value);	      n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(number,  maxIterations);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(number,  maxIterations);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(number,  maxIterations);	      BigInteger    n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  n  =  Math.min(numerator,  denominator);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(numerator,  denominator);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(numerator,  denominator);	      n    =    Math.min(numerator,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(r0);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(r0);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  value  =  BigInteger.valueOf(r0);	      BigInteger    value    =    BigInteger.valueOf(p1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  BigInteger  n  =  Math.max(numerator,  maxDenominator);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.max(numerator,  maxDenominator);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.max(numerator,  maxDenominator);	      BigInteger    n    =    Math.min(value,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  n  =  Math.min(denominator,  value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  n  =  Math.min(denominator,  value);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	n  =  Math.min(denominator,  value);	      n    =    Math.min(numerator,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(p1);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(p1);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  p1  =  BigInteger.valueOf(p1);	      BigInteger    value    =    BigInteger.valueOf(p1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  BigInteger  r1  =  BigInteger.valueOf(p1);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  r1  =  BigInteger.valueOf(p1);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  r1  =  BigInteger.valueOf(p1);	      BigInteger    value    =    BigInteger.valueOf(p1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  BigInteger  p2  =  BigInteger.valueOf(p2);  [CE]  illegal  start  of  type  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  p2  =  BigInteger.valueOf(p2);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  p2  =  BigInteger.valueOf(p2);	      BigInteger    value    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(value,  a0);  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(value,  a0);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(value,  a0);	      BigInteger    n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  value);  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  n  =  Math.min(numerator,  value);  [BUGGY]    if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  n  =  Math.min(numerator,  value);	      BigInteger    n    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  p1  =  p2;  a0  =  q1;  r0  =  q2;  [CE]  illegal  start  of  type  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  p1  =  p2;  a0  =  q1;  r0  =  q2;  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	p1  =  p2;  a0  =  q1;  r0  =  q2;	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  BigInteger  p1  =  p2.getValue();  [CE]  illegal  start  of  type  [FE]            FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  BigInteger  p1  =  p2.getValue();  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	BigInteger  p1  =  p2.getValue();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  if  (q1  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]        FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if  (q1  <  =  maxDenominator)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if  (q1  <  =  maxDenominator)  {	  if    (n    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  if  (q0  <  =  maxDenominator)  {  [CE]  illegal  start  of  expression  [FE]          FractionConversionException    [CONTEXT]    p1  =  p2;  q0  =  q1;  q1  =  q2;  a0  =  a1;  r0  =  r1;  }  else  {  stop  =  true;  }  }  while  (!stop);    [BUGGY]  if  (q0  <  =  maxDenominator)  {  [BUGGY]    throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	324	324	2	replace	if  (q0  <  =  maxDenominator)  {	  if    (n    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
