bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(q1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	add	numerator  =  BigInteger.valueOf(q1);	  numerator    =    BigInteger.valueOf(q2);    numerator    =    BigInteger.valueOf(q2);    	compilable	  [FE]  AssertionError  	1	4	replace
2	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(q1);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(q1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator  =  BigInteger.valueOf(q1);	  numerator    =    BigInteger.valueOf(q2);    numerator    =    BigInteger.valueOf(q2);    	compilable	  [FE]  AssertionError  	1	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	add	numerator  =  BigInteger.valueOf(1);	  numerator    =    BigInteger.valueOf(0);    numerator    =    BigInteger.valueOf(1);    	compilable	  [FE]  AssertionError  	6	5	replace
4	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(1);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator  =  BigInteger.valueOf(1);	  numerator    =    BigInteger.valueOf(0);    numerator    =    BigInteger.valueOf(1);    	compilable	  [FE]  AssertionError  	6	5	replace
5	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  numerator  =  BigInteger.valueOf(p1);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  numerator  =  BigInteger.valueOf(p1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator    =    BigInteger.valueOf(p1);    numerator  =  BigInteger.valueOf(p1);	  	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	7	None	add
6	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  nmerator  =  BigInteger.valueOf(p1);  [CE]  cannot  find  symbol  nmerator  [FE]      AssertionError    [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  nmerator  =  BigInteger.valueOf(p1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator    =    BigInteger.valueOf(p1);    nmerator  =  BigInteger.valueOf(p1);	  	non-compiled	[CE]  cannot  find  symbol  nmerator	7	None	add
7	[BUG]  [BUGGY]  denominator  =  BigInteger.valueOf(p1);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  denominator  =  BigInteger.valueOf(p1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	denominator  =  BigInteger.valueOf(p1);	  denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	9	None	replace
8	[BUG]  [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(value);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(value);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigDenominator  p2  =  BigInteger.valueOf(value);	  BigDenominator    p2    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  nmerator  =  BigInteger.valueOf(q2);  [CE]  cannot  find  symbol  nmerator  [FE]          AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  nmerator  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	nmerator  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(q2);    nmerator    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  cannot  find  symbol  nmerator	2	None	replace
10	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(q1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(q1);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  denominator  =  BigInteger.valueOf(q1);	  BigInteger    p2    =    BigInteger.valueOf(q1);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	23	None	replace
11	[BUG]  [BUGGY]  BigInteger  denominator  =(BigInteger)n.clone();  [CE]  int  cannot  be  dereferenced  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  denominator  =(BigInteger)n.clone();  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  denominator  =(BigInteger)n.clone();	  BigInteger    p2    =(BigInteger)n.clone();    	non-compiled	[CE]  int  cannot  be  dereferenced	22	None	replace
12	[BUG]  [BUGGY]  n  =  BigInteger.valueOf(q2);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  n  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	n  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(q2);    n    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  incompatible  types	19	None	replace
13	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(q2);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(q2);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator  =  BigInteger.valueOf(p2);  n  =  BigInteger.valueOf(q2);	  numerator    =    BigInteger.valueOf(q2);    n    =    BigInteger.valueOf(q2);    	non-compiled	[CE]  incompatible  types	19	None	replace
14	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  numerator  =  BigInteger.valueOf(maxDenominator);	  BigInteger    p2    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	14	None	replace
15	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(value);  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(value);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  denominator  =  BigInteger.valueOf(value);	  BigInteger    p2    =    BigInteger.valueOf(value);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	11	None	replace
16	[BUG]  [BUGGY]  BigInteger  p2  =  BigInteger.valueOf(0);  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  p2  =  BigInteger.valueOf(0);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  p2  =  BigInteger.valueOf(0);	  BigInteger    p2    =    BigInteger.valueOf(value);    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
17	[BUG]  [BUGGY]  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	denominator  =  BigInteger.valueOf(maxDenominator);	  denominator    =    BigInteger.valueOf(p2);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	9	None	replace
18	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  Numerator  =  BigInteger.valueOf(p1);  [CE]  cannot  find  symbol  Numerator  [FE]    AssertionError    [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  Numerator  =  BigInteger.valueOf(p1);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator    =    BigInteger.valueOf(p1);    Numerator  =  BigInteger.valueOf(p1);	  	non-compiled	[CE]  cannot  find  symbol  Numerator	7	None	add
19	[BUG]  [BUGGY]  BigInteger  p2  =(BigInteger)q2.clone();  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  p2  =(BigInteger)q2.clone();  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  p2  =(BigInteger)q2.clone();	  BigInteger    p2    =(BigInteger)n.clone();    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	22	None	replace
20	[BUG]  [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(0);  [CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  p1  =  BigInteger.valueOf(0);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  p1  =  BigInteger.valueOf(0);	  BigInteger    p1    =    BigInteger.valueOf(q1);    	non-compiled	[CE]  variable  p1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	16	None	replace
21	[BUG]  [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(q2,  maxDenominator);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(q2,  maxDenominator);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigDenominator  p2  =  BigInteger.valueOf(q2,  maxDenominator);	  BigDenominator    p2    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
22	[BUG]  [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(numerator);  [CE]  cannot  find  symbol  [FE]            FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigDenominator  p2  =  BigInteger.valueOf(numerator);  [BUGGY]      numerator  =  BigInteger.valueOf(p2);  denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigDenominator  p2  =  BigInteger.valueOf(numerator);	  BigDenominator    p2    =    BigInteger.valueOf(maxDenominator);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
23	[BUG]  [BUGGY]  numerator  =  BigInteger.valueOf(p1);  numerator  =  BigInteger.valueOf(p2);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  numerator  =  BigInteger.valueOf(p1);  numerator  =  BigInteger.valueOf(p2);  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	numerator    =    BigInteger.valueOf(p1);    numerator  =  BigInteger.valueOf(p2);	  	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	7	None	add
24	[BUG]  [BUGGY]  BigInteger  p2  =(BigInteger)n.getValue();  [CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      }  else  {  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {      [BUGGY]  BigInteger  p2  =(BigInteger)n.getValue();  [BUGGY]      denominator  =  BigInteger.valueOf(q2);  }  else  {  numerator  =  BigInteger.valueOf(p1);  denominator  =  BigInteger.valueOf(q1);  }  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.35355339059327373	329	329	2	replace	BigInteger  p2  =(BigInteger)n.getValue();	  BigInteger    p2    =(BigInteger)n.clone();    	non-compiled	[CE]  variable  p2  is  already  defined  in  constructor  BigFraction(double,double,int,int)	22	None	replace
