bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  denominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q2,  denominator);	  this.numerator    =(int)Math.rint(value,    denominator);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	5	None	replace
2	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  denominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q1,  denominator);	  this.numerator    =(int)Math.rint(value,    denominator);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	5	None	replace
3	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  DEFAULT_EPSILON);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  DEFAULT_EPSILON);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q2,  DEFAULT_EPSILON);	  this.numerator    =(int)Math.rint(value,    DEFAULT_EPSILON);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	4	None	replace
4	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  DEFAULT_EPSILON,  denominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  DEFAULT_EPSILON,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  DEFAULT_EPSILON,  denominator);	  this.numerator    =(int)Math.rint(value,    DEFAULT_EPSILON);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	4	None	replace
5	[BUG]  [BUGGY]  this.denominator  =  (int)p2;  this.denominator  =  (int)p2;  [CE]  variable  denominator  might  already  have  been  assigned  [FE]    FractionConversionException    [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.denominator  =  (int)p2;  this.denominator  =  (int)p2;  [BUGGY]      }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.denominator    =    (int)p2;    this.denominator  =  (int)p2;	  	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	1	None	add
6	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  maxDenominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q2,  maxDenominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q2,  maxDenominator);	  this.numerator    =(int)Math.rint(value,    maxDenominator);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	14	None	replace
7	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  epsilon,  maxDenominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  epsilon,  maxDenominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  epsilon,  maxDenominator);	  this.numerator    =(int)Math.rint(value,    maxDenominator);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	14	None	replace
8	[BUG]  [BUGGY]  this.numerator  =  Math.abs(value  /  1);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(value  /  1);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(value  /  1);	  this.numerator    =    Math.abs(value    -    1);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
9	[BUG]  [BUGGY]  this.numerator  =  Math.abs(p1);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(p1);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(p1);	  this.numerator    =    Math.abs(q1);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
10	[BUG]  [BUGGY]  this.numerator  =  Math.abs(p2);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(p2);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(p2);	  this.numerator    =    Math.abs(q1);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
11	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  q2);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  q2);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q1,  q2);	  this.numerator    =(int)Math.rint(value,    q2);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	15	None	replace
12	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  epsilon,  q2);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  epsilon,  q2);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  epsilon,  q2);	  this.numerator    =(int)Math.rint(value,    q2);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	15	None	replace
13	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(q2);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.floor(q2);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.floor(q2);	  this.numerator    =(int)Math.floor(q1);    	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	13	None	replace
14	[BUG]  [BUGGY]  this.numerator  =  Math.abs(q2);  [CE]  possible  loss  of  precision  [FE]              FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(q2);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(q2);	  this.numerator    =    Math.abs(denominator);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
15	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(value,  q2,  denominator);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.floor(value,  q2,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.floor(value,  q2,  denominator);	  this.numerator    =(int)Math.floor(value,    denominator);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
16	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(value,  epsilon,  denominator);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]              FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.floor(value,  epsilon,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.floor(value,  epsilon,  denominator);	  this.numerator    =(int)Math.floor(value,    denominator);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
17	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  maxDenominator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  maxDenominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q1,  maxDenominator);	  this.numerator    =(int)Math.rint(value,    maxDenominator);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	14	None	replace
18	[BUG]  [BUGGY]  this.numerator  =  Math.abs(q1  -  1);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(q1  -  1);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(q1  -  1);	  this.numerator    =    Math.abs(value    -    1);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
19	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(value,  q1,  denominator);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.floor(value,  q1,  denominator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.floor(value,  q1,  denominator);	  this.numerator    =(int)Math.floor(value,    denominator);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
20	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q1);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q1);	  this.numerator    =(int)Math.rint(value,    q2);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	15	None	replace
21	[BUG]  [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  DEFAULT_EPSILON);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =(int)Math.rint(value,  q1,  DEFAULT_EPSILON);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =(int)Math.rint(value,  q1,  DEFAULT_EPSILON);	  this.numerator    =(int)Math.rint(value,    DEFAULT_EPSILON);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	4	None	replace
22	[BUG]  [BUGGY]  this.numerator  =  Math.abs(q2  -  1);  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(q2  -  1);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(q2  -  1);	  this.numerator    =    Math.abs(value    -    1);    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
23	[BUG]  [BUGGY]  this.numerator  =  Math.abs(numerator);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]              FractionConversionException      [CONTEXT]      stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;      [BUGGY]  this.numerator  =  Math.abs(numerator);  [BUGGY]      this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.numerator  =  Math.abs(numerator);	  this.numerator    =    Math.abs(denominator);    	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	9	None	replace
