bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]  this.denominator  =  (int)q1;  [BUGGY]  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	add	this.denominator  =  (int)q1;	this.denominator  =  (int)  q2;  	compilable	  [FE]  FractionConversionException  	31	6	replace
2	[BUG]  [BUGGY]  this.denominator  =  (int)q1;  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]  this.denominator  =  (int)q1;  [BUGGY]  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	this.denominator  =  (int)q1;	this.denominator  =  (int)  q2;  	compilable	  [FE]  FractionConversionException  	31	6	replace
3	[BUG]  [BUGGY]    [CE]  variable  denominator  might  not  have  been  initialized  [FE]      FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    [BUGGY]  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	  	this.denominator  =  (int)  q2;  	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	31	None	replace
4	[BUG]  [BUGGY]    this.numerator  =(int)Math.floor(value);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =(int)Math.floor(value);  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =(int)Math.floor(value);		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
5	[BUG]  [BUGGY]    this.numerator  =(int)value;  [CE]  variable  numerator  might  already  have  been  assigned  [FE]      FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =(int)value;  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =(int)value;		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
6	[BUG]  [BUGGY]    this.numerator  =(int)Math.rint(value);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]        FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =(int)Math.rint(value);  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =(int)Math.rint(value);		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
7	[BUG]  [BUGGY]    this.numerator  =  Math.abs(value);  [CE]  possible  loss  of  precision  [FE]    FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =  Math.abs(value);  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =  Math.abs(value);		non-compiled	[CE]  possible  loss  of  precision	32	None	add
8	[BUG]  [BUGGY]    this.numerator  =(int)Math.pow(10,  n);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =(int)Math.pow(10,  n);  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =(int)Math.pow(10,  n);		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
9	[BUG]  [BUGGY]    this.numerator  =(int)q1;  [CE]  variable  numerator  might  already  have  been  assigned  [FE]      FractionConversionException  [CONTEXT]  stop  =  true;  }  }  while  (!stop);  if  (n  >=  maxIterations)  {  throw  new  FractionConversionException(value,  maxIterations);  }  if  (q2  <  maxDenominator)  {  this.numerator  =  (int)  p2;  [BUGGY]    this.numerator  =(int)q1;  [BUGGY]  this.denominator  =  (int)  q2;  }  else  {  this.numerator  =  (int)  p1;  this.denominator  =  (int)  q1;  }  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  double  DEFAULT_EPSILON  convergent  epsilon  r0  r1  value  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.31622776601683794	237	237	2	replace	    this.numerator  =(int)q1;		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
