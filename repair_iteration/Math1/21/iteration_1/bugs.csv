bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    a1  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  a1  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    a1  =(int)FastMath.floor(r0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    a1  =(int)FastMath.floor(r0);		non-compiled	[CE]  cannot  find  symbol  a1	42	None	add
2	[BUG]  [BUGGY]    a1  =(int)FastMath.floor(a0);  [CE]  cannot  find  symbol  a1  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    a1  =(int)FastMath.floor(a0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    a1  =(int)FastMath.floor(a0);		non-compiled	[CE]  cannot  find  symbol  a1	42	None	add
3	[BUG]  [BUGGY]    int  a1  =(int)FastMath.floor(value);  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    int  a1  =(int)FastMath.floor(value);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    int  a1  =(int)FastMath.floor(value);		non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	42	None	add
4	[BUG]  [BUGGY]  if(a0  <  =  overflow)  {  [CE]  illegal  start  of  expression  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]  if(a0  <  =  overflow)  {  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	if(a0  <  =  overflow)  {	if  (a0  >  overflow)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]  if(a0  <  overflow)  {  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	add	if(a0  <  overflow)  {	if  (a0  >  overflow)  {  	compilable	  [FE]  FractionConversionException  	41	6	replace
6	[BUG]  [BUGGY]  if(a0  <  overflow)  {  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]  if(a0  <  overflow)  {  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	if(a0  <  overflow)  {	if  (a0  >  overflow)  {  	compilable	  [FE]  FractionConversionException  	41	6	replace
7	[BUG]  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(a0);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(a0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    BigInteger  value  =  BigInteger.valueOf(a0);		non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	42	None	add
8	[BUG]  [BUGGY]    BigInteger  a1  =  BigInteger.valueOf(a0);  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    BigInteger  a1  =  BigInteger.valueOf(a0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    BigInteger  a1  =  BigInteger.valueOf(a0);		non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	42	None	add
9	[BUG]  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(r0);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    BigInteger  value  =  BigInteger.valueOf(r0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    BigInteger  value  =  BigInteger.valueOf(r0);		non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	42	None	add
10	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]  if(a0  >=  overflow)  {  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	add	if(a0  >=  overflow)  {	if  (a0  >  overflow)  {  	compilable	  [FE]  FractionConversionException  	41	2	replace
11	[BUG]  [BUGGY]  if(a0  >=  overflow)  {  [FE]  FractionConversionException  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]  if(a0  >=  overflow)  {  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	if(a0  >=  overflow)  {	if  (a0  >  overflow)  {  	compilable	  [FE]  FractionConversionException  	41	2	replace
12	[BUG]  [BUGGY]    int  a1  =(int)FastMath.floor(r0);  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    int  a1  =(int)FastMath.floor(r0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    int  a1  =(int)FastMath.floor(r0);		non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	42	None	add
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    BigInteger  l  =  BigInteger.valueOf(a0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	add	    BigInteger  l  =  BigInteger.valueOf(a0);		compilable	  [FE]  FractionConversionException  	42	2	add
14	[BUG]  [BUGGY]    BigInteger  l  =  BigInteger.valueOf(a0);  [FE]  FractionConversionException  [FE]      FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    BigInteger  l  =  BigInteger.valueOf(a0);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    BigInteger  l  =  BigInteger.valueOf(a0);		compilable	  [FE]  FractionConversionException  	42	2	add
15	[BUG]  [BUGGY]    int  a1  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  r1  [FE]        FractionConversionException  [CONTEXT]  throws  FractionConversionException  {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  [BUGGY]    int  a1  =(int)FastMath.floor(r1);  [BUGGY]  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	275	275	2	replace	    int  a1  =(int)FastMath.floor(r1);		non-compiled	[CE]  cannot  find  symbol  r1	42	None	add
