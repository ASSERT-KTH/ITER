bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  1;  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  1;	      int    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	13	None	replace
2	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  a0  +  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	add	long  q0  =  a0  +  1;	  long    q0    =    a0;    	compilable	  [FE]  FractionConversionException  	7	5	replace
3	[BUG]  [BUGGY]  long  q0  =  a0  +  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  a0  +  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  a0  +  1;	  long    q0    =    a0;    	compilable	  [FE]  FractionConversionException  	7	5	replace
4	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  a0);	      int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)	11	None	replace
5	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  p0);	      int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)	11	None	replace
6	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)denominator.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =(BigInteger)denominator.clone();  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =(BigInteger)denominator.clone();	      BigInteger    n    =(BigInteger)numerator.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	1	None	replace
7	[BUG]  [BUGGY]  BigInteger  a1  =  denominator;  [CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  a1  =  denominator;  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  a1  =  denominator;	      BigInteger    a1    =    numerator;    	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
8	[BUG]  [BUGGY]  long  q0  =  1;  long  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  1;  long  q0  =  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    1;    long  q0  =  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
9	[BUG]  [BUGGY]  long  q0  =  1;  int  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  1;  int  q0  =  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    1;    int  q0  =  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
10	[BUG]  [BUGGY]  long  q0  =  1;  Long  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  1;  Long  q0  =  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    1;    Long  q0  =  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	4	None	add
11	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)numerator.doubleValue()  +  1;  [CE]  inconvertible  types  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =(BigInteger)numerator.doubleValue()  +  1;  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =(BigInteger)numerator.doubleValue()  +  1;	      BigInteger    n    =(BigInteger)numerator.doubleValue();    	non-compiled	[CE]  inconvertible  types	2	None	replace
12	[BUG]  [BUGGY]  long  q0  =  a0;  long  q0  =  a0;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  a0;  long  q0  =  a0;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0;    long  q0  =  a0;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	add
13	[BUG]  [BUGGY]  long  q0  =  a0;  int  q0  =  a0;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  a0;  int  q0  =  a0;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0;    int  q0  =  a0;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	add
14	[BUG]  [BUGGY]  long  q0  =  a0;  Long  q0  =  a0;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  a0;  Long  q0  =  a0;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0;    Long  q0  =  a0;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	add
15	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  denominator,  value);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  value);	      int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double)	12	None	replace
16	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger)  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  value,  denominator);	      int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger)	12	None	replace
17	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations);	      BigInteger    n    =    Math.min(numerator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)	10	None	replace
18	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)  [FE]              FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxDenominator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  maxDenominator);	      BigInteger    n    =    Math.min(numerator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)	10	None	replace
19	[BUG]  [BUGGY]  BigInteger  a1  =  denominator.doubleValue();  [CE]  incompatible  types  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  a1  =  denominator.doubleValue();  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  a1  =  denominator.doubleValue();	      BigInteger    a1    =    numerator.doubleValue();    	non-compiled	[CE]  incompatible  types	3	None	replace
20	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  p0);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  p0);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  p0);	      BigInteger    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)	9	None	replace
21	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  a0);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  a0);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  a0);	      BigInteger    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long)	9	None	replace
22	[BUG]  [BUGGY]  long  q0  =  value;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  long  q0  =  value;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  value;	  long    q0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxIterations);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  maxIterations);	      int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)	11	None	replace
24	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(numerator,  denominator,  maxDenominator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  maxDenominator);	      int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int)	11	None	replace
25	[BUG]  [BUGGY]  int  q0  =  1;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  q0  =  1;  [BUGGY]    long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  q0  =  1;	  long    q0    =    1;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
26	[BUG]  [BUGGY]  BigInteger  a1  =  0;  [CE]  incompatible  types  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  a1  =  0;  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  a1  =  0;	      BigInteger    a1    =    numerator;    	non-compiled	[CE]  incompatible  types	8	None	replace
27	[BUG]  [BUGGY]  int  n  =  Math.min(value,  numerator);  [CE]  no  suitable  method  found  for  min(double,BigInteger)  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(value,  numerator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(value,  numerator);	      int    n    =    Math.min(numerator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,BigInteger)	12	None	replace
28	[BUG]  [BUGGY]  int  n  =  Math.min(denominator,  numerator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)  [FE]        FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  int  n  =  Math.min(denominator,  numerator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(denominator,  numerator);	      int    n    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger)	11	None	replace
29	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(maxDenominator,  numerator);  [CE]  no  suitable  method  found  for  min(int,BigInteger)  [FE]            FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =  Math.min(maxDenominator,  numerator);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(maxDenominator,  numerator);	      BigInteger    n    =    Math.min(numerator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,BigInteger)	10	None	replace
30	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)numerator.multiply(gcd);  [CE]  cannot  find  symbol  gcd  [FE]          FractionConversionException    [CONTEXT]      if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;    [BUGGY]  BigInteger  n  =(BigInteger)numerator.multiply(gcd);  [BUGGY]    long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =(BigInteger)numerator.multiply(gcd);	      BigInteger    n    =(BigInteger)numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  gcd	2	None	replace
