bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  q0  =  a0;  int  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a0;  int  q0  =  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  a0;  int  q0  =  1;	  long    q0    =    1;    int    q0    =    1;    	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
2	[BUG]  [BUGGY]  long  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  n  =  1;  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  n  =  1;	  int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
3	[BUG]  [BUGGY]  long  q0  =  a1;  [CE]  cannot  find  symbol  a1  [FE]        FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  a1;	  long    q0    =    a0;    long    q0    =    a0;    	non-compiled	[CE]  cannot  find  symbol  a1	12	None	replace
4	[BUG]  [BUGGY]  int  q0  =  a0;  [CE]  possible  loss  of  precision  [FE]          FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  q0  =  a0;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  q0  =  a0;	  long    q0    =    a0;    int    q0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
5	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  p0,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  p0,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  p0,  denominator);	  int    n    =    Math.min(numerator,    denominator,    p0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)	5	None	replace
6	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  a0);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,long)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  a0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  p0,  a0);	  int    n    =    Math.min(numerator,    denominator,    p0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,long)	5	None	replace
7	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  a0,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  a0,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  a0,  denominator);	  BigInteger    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)	21	None	replace
8	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  a0,  p1);  [CE]  cannot  find  symbol  p1  [FE]                  FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  a0,  p1);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  a0,  p1);	  BigInteger    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  cannot  find  symbol  p1	21	None	replace
9	[BUG]  [BUGGY]  long  q0  =  value  +  1;  [CE]  possible  loss  of  precision  [FE]    FractionConversionException    [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  value  +  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  value  +  1;	  long    q0    =    a0    +    1;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
10	[BUG]  [BUGGY]  long  q0  =  a0;  Long  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a0;  Long  q0  =  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  a0;  Long  q0  =  1;	  long    q0    =    1;    Long    q0    =    1;    	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	10	None	replace
11	[BUG]  [BUGGY]  int  q0  =  value;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  q0  =  value;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  q0  =  value;	  long    q0    =    value;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
12	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  a0,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  a0,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  a0,  denominator);	  int    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)	4	None	replace
13	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  p1);  [CE]  cannot  find  symbol  p1  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  p1);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  a0,  p1);	  int    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  cannot  find  symbol  p1	4	None	replace
14	[BUG]  [BUGGY]  long  q0  =  a0  +  1;  long  q0  =  a0  +  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a0  +  1;  long  q0  =  a0  +  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0    +    1;    long  q0  =  a0  +  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
15	[BUG]  [BUGGY]  long  q0  =  a0  +  1;  int  q0  =  a0  +  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a0  +  1;  int  q0  =  a0  +  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0    +    1;    int  q0  =  a0  +  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
16	[BUG]  [BUGGY]  long  q0  =  a0  +  1;  Long  q0  =  a0  +  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  a0  +  1;  Long  q0  =  a0  +  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long    q0    =    a0    +    1;    Long  q0  =  a0  +  1;	  	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
17	[BUG]  [BUGGY]  int  n  =  Math.min(denominator,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,double)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(denominator,  value);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(denominator,  value);	  int    n    =    Math.min(value,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double)	27	None	replace
18	[BUG]  [BUGGY]  double  q0  =  1;  [CE]  possible  loss  of  precision  [FE]        FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  double  q0  =  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	double  q0  =  1;	  int    q0    =    1;    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
19	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)numerator.multiply(denominator);  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =(BigInteger)numerator.multiply(denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =(BigInteger)numerator.multiply(denominator);	  BigInteger    n    =(BigInteger)numerator.multiply(gcd);    	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	30	None	replace
20	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)  [FE]                  FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)	18	None	replace
21	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int,BigInteger)  [FE]                    FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  maxIterations,  denominator);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,int,BigInteger)	18	None	replace
22	[BUG]  [BUGGY]  int  n  =  Math.min(denominator,  value,  numerator);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(denominator,  value,  numerator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(denominator,  value,  numerator);	  int    n    =    Math.min(numerator,    value,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger)	16	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  value);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,double)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  value);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  p0,  value);	  int    n    =    Math.min(numerator,    denominator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,double)	15	None	replace
24	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  value,  denominator,  maxIterations);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)	17	None	replace
25	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  p0,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)  [FE]                  FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  p0,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  p0,  maxIterations);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)	17	None	replace
26	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);	  int    n    =    Math.min(numerator,    denominator,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)	23	None	replace
27	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  value,  denominator,  maxIterations);	  int    n    =    Math.min(numerator,    denominator,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)	23	None	replace
28	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  p0,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  p0,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  p0,  denominator);	  BigInteger    n    =    Math.min(numerator,    denominator,    p0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger)	20	None	replace
29	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  a0,  denominator,  p0);  [CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger,long)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  a0,  denominator,  p0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  a0,  denominator,  p0);	  BigInteger    n    =    Math.min(numerator,    denominator,    p0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long,BigInteger,long)	20	None	replace
30	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  value,  denominator,  maxDenominator);	  int    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,int)	24	None	replace
31	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  p0,  maxDenominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  p0,  maxDenominator);	  int    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)	24	None	replace
32	[BUG]  [BUGGY]  long  q0  =  value;  int  q0  =  a0;  [CE]  possible  loss  of  precision  [FE]          FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  value;  int  q0  =  a0;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  value;  int  q0  =  a0;	  long    q0    =    a0;    int    q0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
33	[BUG]  [BUGGY]  long  q0  =  value;  Long  q0  =  a0;  [CE]  possible  loss  of  precision  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  long  q0  =  value;  Long  q0  =  a0;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	long  q0  =  value;  Long  q0  =  a0;	  long    q0    =    a0;    Long    q0    =    a0;    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
34	[BUG]  [BUGGY]  int  n  =  Math.min(denominator,  p0);  [CE]  no  suitable  method  found  for  min(BigInteger,long)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(denominator,  p0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(denominator,  p0);	  int    n    =    Math.min(denominator,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long)	28	None	replace
35	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  a0);  [CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,long)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  value,  denominator,  a0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  value,  denominator,  a0);	  BigInteger    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,double,BigInteger,long)	21	None	replace
36	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxDenominator,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,int,BigInteger)  [FE]                  FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  maxDenominator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  maxDenominator,  denominator);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,int,BigInteger)	18	None	replace
37	[BUG]  [BUGGY]  int  q0  =  1;  int  q0  =  1;  [CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  q0  =  1;  int  q0  =  1;  [BUGGY]      long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  q0  =  1;  int  q0  =  1;	  long    q0    =    1;    long    q0    =    1;    	non-compiled	[CE]  variable  q0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
38	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  maxDenominator,  denominator);  [CE]  no  suitable  method  found  for  min(BigInteger,int,BigInteger)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  maxDenominator,  denominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  maxDenominator,  denominator);	  int    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,int,BigInteger)	24	None	replace
39	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  maxDenominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  a0,  maxDenominator);	  int    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,int)	4	None	replace
40	[BUG]  [BUGGY]  int  n  =  Math.min(denominator,  a0);  [CE]  no  suitable  method  found  for  min(BigInteger,long)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(denominator,  a0);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(denominator,  a0);	  int    n    =    Math.min(denominator,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,long)	28	None	replace
41	[BUG]  [BUGGY]  int  n  =  Math.min(value,  denominator,  numerator);  [CE]  no  suitable  method  found  for  min(double,BigInteger,BigInteger)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(value,  denominator,  numerator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(value,  denominator,  numerator);	  int    n    =    Math.min(numerator,    denominator,    value);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,BigInteger,BigInteger)	15	None	replace
42	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  epsilon,  maxDenominator);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)  [FE]              FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  epsilon,  maxDenominator);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  epsilon,  maxDenominator);	  int    n    =    Math.min(numerator,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)	24	None	replace
43	[BUG]  [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)  [FE]                FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  BigInteger  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	BigInteger  n  =  Math.min(numerator,  denominator,  epsilon,  maxIterations);	  BigInteger    n    =    Math.min(numerator,    denominator,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,double,int)	17	None	replace
44	[BUG]  [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  epsilon);  [CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,double)  [FE]            FractionConversionException      [CONTEXT]        if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  denominator  =  BigInteger.ONE;  return;  }  long  p0  =  1;      [BUGGY]  int  n  =  Math.min(numerator,  denominator,  a0,  epsilon);  [BUGGY]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {  ++n;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	288	288	2	replace	int  n  =  Math.min(numerator,  denominator,  a0,  epsilon);	  int    n    =    Math.min(numerator,    denominator,    a0);    	non-compiled	[CE]  no  suitable  method  found  for  min(BigInteger,BigInteger,long,double)	4	None	replace
