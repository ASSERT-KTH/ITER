bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(value);  [CE]  inconvertible  types  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(value);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  n  =(BigInteger)FastMath.floor(value);	  BigInteger    n    =(BigInteger)FastMath.floor(n);    	non-compiled	[CE]  inconvertible  types	4	None	replace
2	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(value,  n);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(value,  n);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  n  =(BigInteger)FastMath.floor(value,  n);	  BigInteger    n    =(BigInteger)FastMath.floor(n);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
3	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  long  overflow  =  Integer.MIN_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  long  overflow  =  Integer.MIN_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE;  long  overflow  =  Integer.MIN_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    int    overflow    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
4	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  short  overflow  =  Integer.MIN_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  short  overflow  =  Integer.MIN_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE;  short  overflow  =  Integer.MIN_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    int    overflow    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
5	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE  -  1l;	  long    overflow    =    Integer.MAX_VALUE    -    1;    int    overflow    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	20	None	replace
6	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE    -    1;    int  overflow  =  Integer.MAX_VALUE  -  1l;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
7	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE    -    1;    int  overflow  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
8	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l);  [CE]  ';'  expected  [FE]        FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE    -    1;    int  overflow  =  Integer.MAX_VALUE  -  1l);	  	non-compiled	[CE]  ';'  expected	2	None	add
9	[BUG]  [BUGGY]  BigInteger  value  =  Integer.MAX_VALUE;  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =  Integer.MAX_VALUE;  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  Integer.MAX_VALUE;	  BigInteger    value    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
10	[BUG]  [BUGGY]  BigInteger  value  =  0;  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =  0;  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  0;	  BigInteger    value    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
11	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  0;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	double  overflow  =  0;	  double    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	29	6	replace
12	[BUG]  [BUGGY]  double  overflow  =  0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  0;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double  overflow  =  0;	  double    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	29	6	replace
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  Integer  overflow  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	Integer  overflow  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    Integer    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	21	2	replace
14	[BUG]  [BUGGY]  Integer  overflow  =  Integer.MAX_VALUE;  [FE]  FractionConversionException  [FE]        FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  Integer  overflow  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	Integer  overflow  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    Integer    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	21	2	replace
15	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  /  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	int  overflow  =  Integer.MAX_VALUE  /  1;	  int    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	3	2	replace
16	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  /  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  /  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int  overflow  =  Integer.MAX_VALUE  /  1;	  int    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	3	2	replace
17	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1l;  [CE]  possible  loss  of  precision  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int  overflow  =  Integer.MAX_VALUE  -  1l;	  int    overflow    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
18	[BUG]  [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  double  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  double  overflow  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double    overflow    =    Integer.MAX_VALUE;    double  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	28	None	add
19	[BUG]  [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  Double  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  Double  overflow  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double    overflow    =    Integer.MAX_VALUE;    Double  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	28	None	add
20	[BUG]  [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double    overflow    =    Integer.MAX_VALUE;    int  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	28	None	add
21	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	long  overflow  =  Integer.MAX_VALUE  -  1l;	  long    overflow    =    Integer.MAX_VALUE    -    1;    long    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	14	2	replace
22	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1l;  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE  -  1l;	  long    overflow    =    Integer.MAX_VALUE    -    1;    long    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	14	2	replace
23	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  maxDenominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  maxDenominator);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator,  maxDenominator);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator,    denominator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
24	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  gcd);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  gcd);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator,  gcd);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator,    denominator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
25	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator,  denominator);	  BigInteger    value    =(BigInteger)FastMath.ceil(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
26	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  long  a0  =  Integer.MAX_VALUE;  [CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE;  long  a0  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE;  long  a0  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    int    a0    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
27	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r0,  r1);  [CE]  cannot  find  symbol  r0  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r0,  r1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =  (BigInteger)FastMath.floor(r0,  r1);	  BigInteger    r1    =    (BigInteger)FastMath.floor(r1);    	non-compiled	[CE]  cannot  find  symbol  r0	23	None	replace
28	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r1,  value);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                  FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r1,  value);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =  (BigInteger)FastMath.floor(r1,  value);	  BigInteger    r1    =    (BigInteger)FastMath.floor(r1);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	23	None	replace
29	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  denominator  =  BigInteger.valueOf(numerator);	  BigInteger    denominator    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	5	None	replace
30	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                    FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(denominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  denominator  =  BigInteger.valueOf(denominator);	  BigInteger    denominator    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	5	None	replace
31	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  1l;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  1l;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    /    1;    long  overflow  =  Integer.MAX_VALUE  /  1l;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	16	None	add
32	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  2;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  2;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    /    1;    long  overflow  =  Integer.MAX_VALUE  /  2;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	16	None	add
33	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  1;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    /    1;    long  overflow  =  Integer.MAX_VALUE  /  1;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	16	None	add
34	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator  -  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(numerator  -  1);	  BigInteger    value    =    BigInteger.valueOf(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
35	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  /  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  /  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator  /  1);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator    -    1);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	18	None	replace
36	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1l);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1l);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1l);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator    -    1);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	18	None	replace
37	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  2;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	long  overflow  =  Integer.MAX_VALUE  /  2;	  long    overflow    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  FractionConversionException  	17	2	replace
38	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  2;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  2;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE  /  2;	  long    overflow    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  FractionConversionException  	17	2	replace
39	[BUG]  [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value,  1);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value,  1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =(BigInteger)FastMath.floor(value,  1);	  BigInteger    r1    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	19	None	replace
40	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);  [CE]  cannot  find  symbol  overflow  [FE]                  FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  denominator  =  BigInteger.valueOf(maxDenominator);	  BigInteger    denominator    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  cannot  find  symbol  overflow	5	None	replace
41	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value,  denominator);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(value,  denominator);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator,    denominator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
42	[BUG]  [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value,  maxIterations);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value,  maxIterations);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =(BigInteger)FastMath.floor(value,  maxIterations);	  BigInteger    r1    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	19	None	replace
43	[BUG]  [BUGGY]  float  overflow  =  Integer.MAX_VALUE;  float  overflow  =  Integer.MIN_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  float  overflow  =  Integer.MAX_VALUE;  float  overflow  =  Integer.MIN_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	float  overflow  =  Integer.MAX_VALUE;  float  overflow  =  Integer.MIN_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    int    overflow    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
44	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	double  overflow  =  Integer.MAX_VALUE  -  1;	  double    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	29	2	replace
45	[BUG]  [BUGGY]  double  overflow  =  Integer.MAX_VALUE  -  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  double  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double  overflow  =  Integer.MAX_VALUE  -  1;	  double    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	29	2	replace
46	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0  +  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0  +  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(a0  +  1);	  BigInteger    value    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	10	None	replace
47	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(n  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(n  -  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(n  -  1);	  BigInteger    value    =(BigInteger)FastMath.floor(n);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	27	None	replace
48	[BUG]  [BUGGY]  float  overflow  =  Integer.MAX_VALUE;  float  a0  =  Integer.MAX_VALUE;  [CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  float  overflow  =  Integer.MAX_VALUE;  float  a0  =  Integer.MAX_VALUE;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	float  overflow  =  Integer.MAX_VALUE;  float  a0  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    int    a0    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
49	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator  -  1);	  BigInteger    value    =(BigInteger)FastMath.ceil(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
50	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(value  -  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(value  -  1);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator    -    1);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	18	None	replace
51	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  a0  =  Integer.MAX_VALUE  -  1;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  int  a0  =  Integer.MAX_VALUE  -  1;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE    -    1;    int  a0  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	2	None	add
52	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(value,  r1);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(value,  r1);  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =  (BigInteger)FastMath.floor(value,  r1);	  BigInteger    r1    =    (BigInteger)FastMath.floor(r1);    	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	23	None	replace
53	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  4;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  long  overflow  =  Integer.MAX_VALUE  /  4;  [BUGGY]      double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    /    1;    long  overflow  =  Integer.MAX_VALUE  /  4;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	16	None	add
54	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  epsilon);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  epsilon);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator,  epsilon);	  BigInteger    value    =(BigInteger)FastMath.floor(numerator,    denominator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	12	None	replace
55	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]                FractionConversionException      [CONTEXT]      throws  FractionConversionException  {      [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0  -  1);  [BUGGY]      long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(a0  -  1);	  BigInteger    value    =    BigInteger.valueOf(a0);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	10	None	replace
