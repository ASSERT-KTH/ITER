bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.MAX_VALUE;  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =  BigInteger.MAX_VALUE;  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.MAX_VALUE;	      BigInteger    value    =    BigInteger.valueOf(0);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	11	None	replace
2	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	int  overflow  =  Integer.MAX_VALUE  -  1;	  int    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	2	2	replace
3	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int  overflow  =  Integer.MAX_VALUE  -  1;	  int    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	2	2	replace
4	[BUG]  [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(n);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  n  =(BigInteger)FastMath.floor(n);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  n  =(BigInteger)FastMath.floor(n);	      	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	5	None	replace
5	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(a0);  [CE]  cannot  find  symbol  a0  [FE]              FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(a0);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  denominator  =  BigInteger.valueOf(a0);	      	non-compiled	[CE]  cannot  find  symbol  a0	5	None	replace
6	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE;    int  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	add
7	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  a0  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  a0  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE;    int  a0  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	add
8	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MIN_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  int  overflow  =  Integer.MIN_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE;    int  overflow  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	add
9	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(numerator);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(numerator);	      BigInteger    value    =    BigInteger.valueOf(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	10	None	replace
10	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(a0);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(a0);	      BigInteger    value    =    BigInteger.valueOf(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	10	None	replace
11	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.ceil(numerator);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.ceil(numerator);	      BigInteger    value    =(BigInteger)FastMath.ceil(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
12	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator,  denominator);	      BigInteger    value    =(BigInteger)FastMath.floor(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
13	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  long  overflow  =  Integer.MAX_VALUE  -  1l;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  long  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    -    1;    long  overflow  =  Integer.MAX_VALUE  -  1l;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
14	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  long  overflow  =  Integer.MAX_VALUE  -  1;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  long  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    -    1;    long  overflow  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
15	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1l;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    -    1;    int  overflow  =  Integer.MAX_VALUE  -  1l;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
16	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	long  overflow  =  Integer.MAX_VALUE  /  1;	  long    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	4	2	replace
17	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  /  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long  overflow  =  Integer.MAX_VALUE  /  1;	  long    overflow    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  FractionConversionException  	4	2	replace
18	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(numerator  -  1);	      BigInteger    value    =(BigInteger)FastMath.floor(numerator);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
19	[BUG]  [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value);  [CE]  inconvertible  types  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  r1  =(BigInteger)FastMath.floor(value);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =(BigInteger)FastMath.floor(value);	      	non-compiled	[CE]  inconvertible  types	5	None	replace
20	[BUG]  [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  long  overflow  =  Integer.MAX_VALUE  -  1;  int  overflow  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	long    overflow    =    Integer.MAX_VALUE    -    1;    int  overflow  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
21	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  Integer  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  Integer  overflow  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE;    Integer  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	add
22	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(int);  [CE]  '.class'  expected  [FE]          FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(int);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(int);	      BigInteger    value    =    BigInteger.valueOf(value);    	non-compiled	[CE]  '.class'  expected	10	None	replace
23	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r1);  [CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r1);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =  (BigInteger)FastMath.floor(r1);	      	non-compiled	[CE]  method  floor  in  class  FastMath  cannot  be  applied  to  given  types;	5	None	replace
24	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r0);  [CE]  cannot  find  symbol  r0  [FE]              FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  r1  =  (BigInteger)FastMath.floor(r0);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  r1  =  (BigInteger)FastMath.floor(r0);	      	non-compiled	[CE]  cannot  find  symbol  r0	5	None	replace
25	[BUG]  [BUGGY]  BigInteger  value  =  BigInteger.valueOf(n);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =  BigInteger.valueOf(n);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =  BigInteger.valueOf(n);	      BigInteger    value    =    BigInteger.valueOf(maxIterations);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
26	[BUG]  [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  long  overflow  =  Integer.MAX_VALUE;  [CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  int  overflow  =  Integer.MAX_VALUE;  long  overflow  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	int    overflow    =    Integer.MAX_VALUE;    long  overflow  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  overflow  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	add
27	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(n);  [CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  BigInteger  value  =(BigInteger)FastMath.floor(n);  [BUGGY]    long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	BigInteger  value  =(BigInteger)FastMath.floor(n);	      BigInteger    value    =(BigInteger)FastMath.floor(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  constructor  BigFraction(double,double,int,int)	6	None	replace
28	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	add	double  overflow  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	2	2	replace
29	[BUG]  [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]    throws  FractionConversionException  {    [BUGGY]  double  overflow  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)  FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  numerator  =  BigInteger.valueOf(a0);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	272	272	2	replace	double  overflow  =  Integer.MAX_VALUE;	  int    overflow    =    Integer.MAX_VALUE;    	compilable	  [FE]  FractionConversionException  	2	2	replace
