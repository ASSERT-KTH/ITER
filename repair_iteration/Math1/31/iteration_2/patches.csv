bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(n  +  1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(n  +  1);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldUtils.floor(n  +  1);	  BigInteger    r0    =(BigInteger)FieldUtils.floor(n);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
2	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++a0;  }  if(stop)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)    {    ++a0;    }    if(stop)  {  ++a0;  }	  	compilable	  [FE]  FractionConversionException  	16	2	add
3	[BUG]  [BUGGY]  if(stop)  {  ++a0;  }  if(stop)  {  ++a0;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++a0;  }  if(stop)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)    {    ++a0;    }    if(stop)  {  ++a0;  }	  	compilable	  [FE]  FractionConversionException  	16	2	add
4	[BUG]  [BUGGY]  if(stop)  {  ++a0;  }  If(stop)  {  ++a0;  }  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++a0;  }  If(stop)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)    {    ++a0;    }    If(stop)  {  ++a0;  }	  	non-compiled	[CE]  ';'  expected	16	None	add
5	[BUG]  [BUGGY]  int  n  =  0;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  int  n  =  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	int  n  =  0;	  n    =    0;    int    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	34	None	replace
6	[BUG]  [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1))  +  a0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1))  +  a0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  1.0  /(FastMath.floor(r1))  +  a0;	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1))    +    p0;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	27	None	replace
7	[BUG]  [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1))    +    p0;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	27	None	replace
8	[BUG]  [BUGGY]  n  >  1;  [CE]  not  a  statement  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  >  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  >  1;	  n    >    0;    	non-compiled	[CE]  not  a  statement	14	None	replace
9	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  1;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	n    =    1;    n  =  1;	  	compilable	  [FE]  FractionConversionException  	3	3	add
10	[BUG]  [BUGGY]  n  =  1;  n  =  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  1;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    1;    n  =  1;	  	compilable	  [FE]  FractionConversionException  	3	3	add
11	[BUG]  [BUGGY]  n  =  1;  int  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  1;  int  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    1;    int  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
12	[BUG]  [BUGGY]  n  =  1;  final  double  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  1;  final  double  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    1;    final  double  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	3	None	add
13	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  0;  n  =  0;  n  =  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	n        =        0;        n    =    0;    n  =  0;  n  =  0;	  	compilable	  [FE]  FractionConversionException  	5	3	add
14	[BUG]  [BUGGY]  n    =    0;    n  =  0;  n  =  0;  n  =  0;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  0;  n  =  0;  n  =  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    0;    n  =  0;  n  =  0;	  	compilable	  [FE]  FractionConversionException  	5	3	add
15	[BUG]  [BUGGY]  n    =    0;    n  =  0;  int  n  =  0;  n  =  0;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  0;  int  n  =  0;  n  =  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    0;    int  n  =  0;  n  =  0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	5	None	add
16	[BUG]  [BUGGY]  n    =    0;    n  =  0;  final  double  n  =  0;  n  =  0;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  0;  final  double  n  =  0;  n  =  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    0;    final  double  n  =  0;  n  =  0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	5	None	add
17	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++n;  }  if(!stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(!stop)    {    ++n;    }    if(!stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	23	2	add
18	[BUG]  [BUGGY]  if(!stop)  {  ++n;  }  if(!stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++n;  }  if(!stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(!stop)    {    ++n;    }    if(!stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	23	2	add
19	[BUG]  [BUGGY]  if(!stop)  {  ++n;  }  If(!stop)  {  ++n;  }  [CE]  ';'  expected  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++n;  }  If(!stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(!stop)    {    ++n;    }    If(!stop)  {  ++n;  }	  	non-compiled	[CE]  ';'  expected	23	None	add
20	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  1;  n  =  0;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	n        =        0;        n    =    1;    n  =  0;  n  =  1;	  	compilable	  [FE]  FractionConversionException  	35	3	add
21	[BUG]  [BUGGY]  n    =    0;    n  =  1;  n  =  0;  n  =  1;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  1;  n  =  0;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    1;    n  =  0;  n  =  1;	  	compilable	  [FE]  FractionConversionException  	35	3	add
22	[BUG]  [BUGGY]  n    =    0;    n  =  1;  int  n  =  0;  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  1;  int  n  =  0;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    1;    int  n  =  0;  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	35	None	add
23	[BUG]  [BUGGY]  n    =    0;    n  =  1;  final  double  n  =  0;  n  =  1;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n    =    0;    n  =  1;  final  double  n  =  0;  n  =  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n        =        0;        n    =    1;    final  double  n  =  0;  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	35	None	add
24	[BUG]  [BUGGY]  n  =  n  >  1;  [CE]  incompatible  types  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n  >  1;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  n  >  1;	  n    =    n    >    0;    	non-compiled	[CE]  incompatible  types	28	None	replace
25	[BUG]  [BUGGY]  if(n  <  =  0)  {  if(stop)  {  ++n;  }  [CE]  illegal  start  of  expression  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  <  =  0)  {  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(n  <  =  0)  {  if(stop)  {  ++n;  }	  if(stop)    {    ++n;    }    if(stop)    {    ++n;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n;  n  =  n;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	n    =    n;    n  =  n;	  	compilable	  [FE]  FractionConversionException  	32	2	add
27	[BUG]  [BUGGY]  n  =  n;  n  =  n;  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n;  n  =  n;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    n;    n  =  n;	  	compilable	  [FE]  FractionConversionException  	32	2	add
28	[BUG]  [BUGGY]  n  =  n;  int  n  =  n;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n;  int  n  =  n;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    n;    int  n  =  n;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	32	None	add
29	[BUG]  [BUGGY]  n  =  n;  final  double  n  =  n;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n;  final  double  n  =  n;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    n;    final  double  n  =  n;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	32	None	add
30	[BUG]  [BUGGY]  final  double  r0  =  (long)Factory.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  (long)Factory.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  (long)Factory.floor(r0);	  n    =    0;    n    =    0;    final    double    r0    =    (long)Factory.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
31	[BUG]  [BUGGY]  final  double  r0  =  (long)Factory.floor(r1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  (long)Factory.floor(r1);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  (long)Factory.floor(r1);	  n    =    0;    n    =    0;    final    double    r0    =    (long)Factory.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
32	[BUG]  [BUGGY]  n  >  1)  {  ++n;  }  else  {  throw  new  FractionConversionException( " ");  }  [CE]  not  a  statement  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  >  1)  {  ++n;  }  else  {  throw  new  FractionConversionException( " ");  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  >  1)  {  ++n;  }  else  {  throw  new  FractionConversionException( " ");  }	  n    >    0)    {    ++n;    }    else    {    throw    new    FractionConversionException(   "   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
33	[BUG]  [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(a0));  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(a0));  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  1.0  /(FastMath.floor(a0));	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1));    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	26	None	replace
34	[BUG]  [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1));  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  1.0  /(FastMath.floor(r1));  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  1.0  /(FastMath.floor(r1));	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1));    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	26	None	replace
35	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }	  if(stop)    {    ++n;    }    If(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	13	3	replace
36	[BUG]  [BUGGY]  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }	  if(stop)    {    ++n;    }    If(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	13	3	replace
37	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(q1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(q1);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FixMath.floor(q1);	          BigInteger    r0    =(BigInteger)FixMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	21	None	replace
38	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(n);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(n);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FixMath.floor(n);	          BigInteger    r0    =(BigInteger)FixMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	21	None	replace
39	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(q1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(q1);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldMath.floor(q1);	          BigInteger    r0    =(BigInteger)FieldMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
40	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(n);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(n);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldMath.floor(n);	          BigInteger    r0    =(BigInteger)FieldMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
41	[BUG]  [BUGGY]  final  double  r0  =  (long)FastMath.floor(r1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  (long)FastMath.floor(r1);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  (long)FastMath.floor(r1);	  n    =    0;    n    =    0;    final    double    r0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
42	[BUG]  [BUGGY]  final  double  r0  =  (long)FastMath.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  (long)FastMath.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  (long)FastMath.floor(r0);	  n    =    0;    n    =    0;    final    double    r0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
43	[BUG]  [BUGGY]  BigInteger  r1  =  (BigInteger)Factory.floor(q1);  [CE]  cannot  find  symbol  Factory  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r1  =  (BigInteger)Factory.floor(q1);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r1  =  (BigInteger)Factory.floor(q1);	  BigInteger    r1    =    (BigInteger)Factory.floor(r0);    	non-compiled	[CE]  cannot  find  symbol  Factory	18	None	replace
44	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
45	[BUG]  [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
46	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
47	[BUG]  [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
48	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
49	[BUG]  [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]        FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
50	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  >  0)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(n  >  0)  {  ++a0;  }	  if(stop)    {    ++a0;    }    	compilable	  [FE]  FractionConversionException  	17	3	replace
51	[BUG]  [BUGGY]  if(n  >  0)  {  ++a0;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  >  0)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(n  >  0)  {  ++a0;  }	  if(stop)    {    ++a0;    }    	compilable	  [FE]  FractionConversionException  	17	3	replace
52	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FixMath.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FixMath.floor(r0);	          BigInteger    r0    =(BigInteger)FixMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	21	None	replace
53	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldMath.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldMath.floor(r0);	          BigInteger    r0    =(BigInteger)FieldMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	9	None	replace
54	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(q2);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(q2);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)Factory.floor(q2);	  BigInteger    r0    =(BigInteger)Factory.floor(n);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	20	None	replace
55	[BUG]  [BUGGY]  final  double  r0  =  (long)Factory.floor(a0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  final  double  r0  =  (long)Factory.floor(a0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	final  double  r0  =  (long)Factory.floor(a0);	  n    =    0;    n    =    0;    final    double    r0    =    (long)Factory.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
56	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
57	[BUG]  [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
58	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
59	[BUG]  [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [FE]  FractionConversionException  [FE]      FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)        {        ++n;        }        if(stop)    {    ++n;    }    if(stop)  {  ++n;  }  else  if(stop)  {  ++n;  }	  	compilable	  [FE]  FractionConversionException  	11	2	add
60	[BUG]  [BUGGY]  if(!stop)  {  if(stop)  {  ++n;  }  [CE]  while  expected  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(!stop)  {  if(stop)  {  ++n;  }	  if(stop)    {    ++n;    }    If(stop)    {    ++n;    }    	non-compiled	[CE]  while  expected	13	None	replace
61	[BUG]  [BUGGY]  if(stop)  {  ++num;  }  else  {  throw  new  FractionConversionException(value,  denominator,  maxIterations);  }  [CE]  cannot  find  symbol  num  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(stop)  {  ++num;  }  else  {  throw  new  FractionConversionException(value,  denominator,  maxIterations);  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(stop)  {  ++num;  }  else  {  throw  new  FractionConversionException(value,  denominator,  maxIterations);  }	  if(stop)    {    ++n;    }    else    {    throw    new    FractionConversionException(value,    denominator,    maxIterations);    }    	non-compiled	[CE]  cannot  find  symbol  num	10	None	replace
62	[BUG]  [BUGGY]  if(n  >  0)  {  if(stop)  {  ++n;  }  [CE]  while  expected  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  >  0)  {  if(stop)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(n  >  0)  {  if(stop)  {  ++n;  }	  if(stop)    {    ++n;    }    if(stop)    {    ++n;    }    	non-compiled	[CE]  while  expected	12	None	replace
63	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++n;  }  else  {  throw  new  FractionConversionException(value,  p1,  q2);  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(!stop)  {  ++n;  }  else  {  throw  new  FractionConversionException(value,  p1,  q2);  }	  if(stop)    {    ++n;    }    If(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	13	2	replace
64	[BUG]  [BUGGY]  if(!stop)  {  ++n;  }  else  {  throw  new  FractionConversionException(value,  p1,  q2);  }  [FE]  FractionConversionException  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++n;  }  else  {  throw  new  FractionConversionException(value,  p1,  q2);  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(!stop)  {  ++n;  }  else  {  throw  new  FractionConversionException(value,  p1,  q2);  }	  if(stop)    {    ++n;    }    If(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	13	2	replace
65	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(!stop)  {  ++a0;  }	  if(!stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	24	5	replace
66	[BUG]  [BUGGY]  if(!stop)  {  ++a0;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(!stop)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(!stop)  {  ++a0;  }	  if(!stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	24	5	replace
67	[BUG]  [BUGGY]  n  =  0;  final  double  r0  =  (long)FastMath.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  0;  final  double  r0  =  (long)FastMath.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  0;  final  double  r0  =  (long)FastMath.floor(r0);	  n    =    0;    n    =    0;    final    double    r0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	7	None	replace
68	[BUG]  [BUGGY]  n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1));  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]        FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1));  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1));	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1));    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	26	None	replace
69	[BUG]  [BUGGY]  n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]          FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  0;  final  double  r0  =  1.0  /(FastMath.floor(r1))  *  p0;	  n    =    0;    n    =    0;    final    double    r0    =    1.0    /(FastMath.floor(r1))    +    p0;    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	27	None	replace
70	[BUG]  [BUGGY]  n  =  1;  int  n  =  1)  {  throw  new  FractionConversionException(value,  0);  }  [CE]  ';'  expected  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  1;  int  n  =  1)  {  throw  new  FractionConversionException(value,  0);  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    1;    int  n  =  1)  {  throw  new  FractionConversionException(value,  0);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
71	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(a0,  n);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(a0,  n);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldUtils.floor(a0,  n);	  BigInteger    r0    =(BigInteger)FieldUtils.floor(a0);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	31	None	replace
72	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(a0,  n);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(a0,  n);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)Factory.floor(a0,  n);	  BigInteger    r0    =(BigInteger)Factory.floor(a0);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	29	None	replace
73	[BUG]  [BUGGY]  n  =  n  <  0;  [CE]  incompatible  types  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n  <  0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  n  <  0;	  n    =    n    >    0;    	non-compiled	[CE]  incompatible  types	28	None	replace
74	[BUG]  [BUGGY]  n  =  0;  final  double  r0  =  (long)Factory.floor(r0);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  0;  final  double  r0  =  (long)Factory.floor(r0);  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n  =  0;  final  double  r0  =  (long)Factory.floor(r0);	  n    =    0;    n    =    0;    final    double    r0    =    (long)Factory.floor(r1);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	8	None	replace
75	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(n  +  1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]              FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)Factory.floor(n  +  1);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)Factory.floor(n  +  1);	  BigInteger    r0    =(BigInteger)Factory.floor(n);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	20	None	replace
76	[BUG]  [BUGGY]  n  =  n;  int  n  =  a0;  [CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  n  =  n;  int  n  =  a0;  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	n    =    n;    int  n  =  a0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  constructor  BigFraction(double,double,int,int)	32	None	add
77	[BUG]  [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(n  -  1);  [CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)  [FE]            FractionConversionException      [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  BigInteger  r0  =(BigInteger)FieldUtils.floor(n  -  1);  [BUGGY]      ++n;  final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	BigInteger  r0  =(BigInteger)FieldUtils.floor(n  -  1);	  BigInteger    r0    =(BigInteger)FieldUtils.floor(n);    	non-compiled	[CE]  variable  r0  is  already  defined  in  constructor  BigFraction(double,double,int,int)	1	None	replace
78	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  <  0)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(n  <  0)  {  ++a0;  }	  if(stop)    {    ++a0;    }    	compilable	  [FE]  FractionConversionException  	17	3	replace
79	[BUG]  [BUGGY]  if(n  <  0)  {  ++a0;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  <  0)  {  ++a0;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(n  <  0)  {  ++a0;  }	  if(stop)    {    ++a0;    }    	compilable	  [FE]  FractionConversionException  	17	3	replace
80	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  >  0)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	add	if(n  >  0)  {  ++n;  }	  if(stop)    {    ++n;    }    if(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	12	3	replace
81	[BUG]  [BUGGY]  if(n  >  0)  {  ++n;  }  [FE]  FractionConversionException  [FE]    FractionConversionException    [CONTEXT]      long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  int  n  =  0;  boolean  stop  =  false;  do  {      [BUGGY]  if(n  >  0)  {  ++n;  }  [BUGGY]      final  double  r1  =  1.0  /  (r0  -  a0);  final  long  a1  =  (long)  FastMath.floor(r1);  p2  =  (a1  *  p1)  +  p0;  q2  =  (a1  *  q1)  +  q0;  if  ((p2  >  overflow)  ||  (q2  >  overflow))  {    throw  new  FractionConversionException(value,  p2,  q2);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigFraction(double,double,int,int)  final  double  value  final  double  epsilon  final  int  maxDenominator  int  maxIterations  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  stop  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  a0  a1  bits  exponent  m  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  convergent  epsilon  r0  r1  value  int  maxDenominator  maxIterations  n  	projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java	0.2886751345948129	298	298	2	replace	if(n  >  0)  {  ++n;  }	  if(stop)    {    ++n;    }    if(stop)    {    ++n;    }    	compilable	  [FE]  FractionConversionException  	12	3	replace
