projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Math.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(q2<maxDenominator)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(q2<=maxDenominator)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(maxDenominator<=0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=BigInteger.valueOf(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Factory.floor(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(maxDenominator<=1)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(r2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(value-epsilon)>epsilon)&&(q2<=maxDenominator)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Math.floor(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegerr1=(BigInteger)Math.floor(r2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop&&!converter.equals(convergent)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop&&!converter.equals(gcd)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<maxIterations){if(convergent<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<maxIterations){If(convergent<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<maxIterations){if(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<maxIterations){If(n<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a0<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<=maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Factory.floor(r2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Factory.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=BigInteger.valueOf(0);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=BigInteger.valueOf(p2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop){if(!stop){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop){If(!stop){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a2>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop&&value<=maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop&&value>epsilon){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Factory.floor(p2);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1>=0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a2>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegerr0=(BigInteger)Math.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent>maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegerr0=(BigInteger)FastMath.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){if((a1<0.0)||(a1>0.0)||(a2<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<=maxDenominator){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(q2<=0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop&&(value<=0.0)||(value>epsilon)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=BigInteger.valueOf(p);
