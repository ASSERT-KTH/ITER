projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(value);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Math.floor(r1);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(q2<maxDenominator)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(convergent<maxIterations){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(!stop){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(q2<=maxDenominator)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)&&(maxDenominator<=0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=BigInteger.valueOf(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)FastMath.floor(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310BigIntegern=(BigInteger)Factory.floor(convergent);
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if((a1<0.0)||(a1>0.0)||(a1<0.0)||(a1>0.0)){
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java310if(n<maxIterations){
