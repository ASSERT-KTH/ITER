bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
199	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);  this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;    [BUGGY]  this.autoSort  =  autoSort;  [BUGGY]    this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	156	156	1	add	this.autoSort  =  autoSort;		compilable	  [FE]    Size	34	1
200	[BUG]  [BUGGY]  this.autoSort  =  autoSort;    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);  this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;    [BUGGY]  this.autoSort  =  autoSort;  [BUGGY]    this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	156	156	1	replace	this.autoSort  =  autoSort;		compilable	  [FE]    Size	34	1
79	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {  if  (x  ==  null)  {  throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }    XYDataItem  overwritten  =  null;    [BUGGY]  int  size  =  this.data.size();  [BUGGY]    int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  }  catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	547	547	1	add	int  size  =  this.data.size();		compilable	  [FE]    Size	14	1
80	[BUG]  [BUGGY]  int  size  =  this.data.size();    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {  if  (x  ==  null)  {  throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }    XYDataItem  overwritten  =  null;    [BUGGY]  int  size  =  this.data.size();  [BUGGY]    int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  }  catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	547	547	1	replace	int  size  =  this.data.size();		compilable	  [FE]    Size	14	1
67	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {  if  (x  ==  null)  {  throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }      [BUGGY]  int  size  =  this.data.size();  [BUGGY]    XYDataItem  overwritten  =  null;  int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  }  catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	546	546	1	add	int  size  =  this.data.size();		compilable	  [FE]    Size	12	1
68	[BUG]  [BUGGY]  int  size  =  this.data.size();    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {  if  (x  ==  null)  {  throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }      [BUGGY]  int  size  =  this.data.size();  [BUGGY]    XYDataItem  overwritten  =  null;  int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  }  catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	546	546	1	replace	int  size  =  this.data.size();		compilable	  [FE]    Size	12	1
27	[BUG]  [BUGGY]    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  }  else  {            [BUGGY]  if(!this.allowDuplicateXValues)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	0	add	if(!this.allowDuplicateXValues)  {	if  (this.autoSort)  {  	plausible		5	1
28	[BUG]  [BUGGY]  if(!this.allowDuplicateXValues)  {    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException( "Couldn't  clone  XYDataItem! ");  }  existing.setY(y);  }  else  {            [BUGGY]  if(!this.allowDuplicateXValues)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	0	replace	if(!this.allowDuplicateXValues)  {	if  (this.autoSort)  {  	plausible		5	1
50	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }    XYDataItem  overwritten  =  null;  int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	541	541	1	add	if(x  ==  null  ||  y  ==  null)  {	if  (x  ==  null)  {  	compilable	  [FE]    Size	9	1
51	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {    [FE]    Size  [CONTEXT]    public  XYDataItem  addOrUpdate(Number  x,  Number  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'x'  argument. ");  }    XYDataItem  overwritten  =  null;  int  index  =  indexOf(x);  if  (index  >=  0  &&  !this.allowDuplicateXValues)  {  XYDataItem  existing  =  (XYDataItem)  this.data.get(index);  try  {  overwritten  =  (XYDataItem)  existing.clone();  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5	541	541	1	replace	if(x  ==  null  ||  y  ==  null)  {	if  (x  ==  null)  {  	compilable	  [FE]    Size	9	1
175	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	add	this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;		compilable	  [FE]    Size	30	1
176	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	replace	this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;		compilable	  [FE]    Size	30	1
176	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.autoSort  =  autoSort;  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	add	this.autoSort  =  autoSort;		compilable	  [FE]    Size	30	1
177	[BUG]  [BUGGY]  this.autoSort  =  autoSort;    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.autoSort  =  autoSort;  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	replace	this.autoSort  =  autoSort;		compilable	  [FE]    Size	30	1
177	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	add	this.data  =  new  java.util.ArrayList();		compilable	  [FE]    Size	30	1
178	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();    [FE]    Size  [CONTEXT]    public  XYSeries(Comparable  key,  boolean  autoSort,  boolean  allowDuplicateXValues)  {  super(key);    [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.autoSort  =  autoSort;  this.allowDuplicateXValues  =  allowDuplicateXValues;  }  [CLASS]  XYSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable,boolean,boolean)    Comparable  key  boolean  autoSort  boolean  allowDuplicateXValues  [VARIABLES]  List  data  Comparable  key  boolean  allowDuplicateXValues  autoSort  long  serialVersionUID  int  maximumItemCount    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.2182178902359924	154	154	1	replace	this.data  =  new  java.util.ArrayList();		compilable	  [FE]    Size	30	1
39	[BUG]  [BUGGY]    [FE]    Size  [CONTEXT]          if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }      [BUGGY]  if(index  >  this.maximumItemCount)  {  [BUGGY]    this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	570	570	1	add	if(index  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]    Size	7	1
40	[BUG]  [BUGGY]  if(index  >  this.maximumItemCount)  {    [FE]    Size  [CONTEXT]          if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }      [BUGGY]  if(index  >  this.maximumItemCount)  {  [BUGGY]    this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem    Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e    	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	570	570	1	replace	if(index  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]    Size	7	1
