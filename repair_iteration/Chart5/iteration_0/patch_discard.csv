increase failing tests,156,replace, [FE]  Size,this.allowDuplicateXValues = allowDuplicateXValues; ,this.allowDuplicateXValues = autoSort;
patch is same with buggy,156,replace,,this.allowDuplicateXValues = allowDuplicateXValues; ,this.allowDuplicateXValues = allowDuplicateXValues;
compilation error,156,replace,[CE] incompatible types,this.allowDuplicateXValues = allowDuplicateXValues; ,this.allowDuplicateXValues = 0;
compilation error,156,add,[CE] no suitable method found for max(int,boolean),,this.maximumItemCount = Math.max(maximumItemCount, this.autoSort);
compilation error,156,add,[CE] no suitable method found for max(int),,this.maximumItemCount = Math.max(maximumItemCount);
compilation error,547,add,[CE] illegal start of expression,,while(x.length > 0) { x = x.doubleValue();
compilation error,547,add,[CE] illegal start of expression,,while(x.length > 0) { x = x.longValue();
compilation error,589,add,[CE] illegal start of expression,,if(this.allowDuplicateXValues) { if(this.allowDuplicateXValues) { return 0; }
compilation error,589,add,[CE] illegal start of expression,,if(this.allowDuplicateXValues) { if(this.allowDuplicateXValues) { return -1; }
compilation error,589,add,[CE] illegal start of expression,,if(x!= null) { if(this.allowDuplicateXValues) { return 0; }
patch is same with buggy,548,replace,,if (index >= 0 && !this.allowDuplicateXValues) { ,if(index >= 0 &&!this.allowDuplicateXValues) {
increase failing tests,548,replace, [FE] ArrayIndexOutOfBoundsException,if (index >= 0 && !this.allowDuplicateXValues) { ,if(index < 0 &&!this.allowDuplicateXValues) {
increase failing tests,548,replace, [FE]  Size,if (index >= 0 && !this.allowDuplicateXValues) { ,if(index >= 0 &&!this.autoSort) {
compilation error,157,replace,[CE] illegal start of expression,} ,this.maximumItemCount =(MaximumItemCount)this.data.get(key);
compilation error,157,replace,[CE] illegal start of expression,} ,this.maximumItemCount = Math.max(maximumItemCount, autoSort);
compilation error,157,replace,[CE] illegal start of expression,} ,this.maximumItemCount = 0;
compilation error,547,replace,[CE] method indexOf in class XYSeries cannot be applied to given types;,int index = indexOf(x); ,int index = indexOf(x, y);
compilation error,547,replace,[CE] cannot find symbol,int index = indexOf(x); ,int index = indexOfSupported(x);
patch is same with buggy,547,replace,,int index = indexOf(x); ,int index = indexOf(x);
compilation error,574,replace,[CE] cannot find symbol,fireSeriesChanged(); ,ensureCapacity(getItemCount() - 1);
compilation error,574,replace,[CE] cannot find symbol,fireSeriesChanged(); ,ensureCapacity(getItemCount());
compilation error,574,replace,[CE] cannot find symbol,fireSeriesChanged(); ,ensureCapacity();
patch is same with buggy,109,replace,,private int maximumItemCount = Integer.MAX_VALUE; ,private int maximumItemCount = Integer.MAX_VALUE;
increase failing tests,109,replace, [FE] AssertionFailedError,private int maximumItemCount = Integer.MAX_VALUE; ,private int maximumItemCount = Integer.MIN_VALUE;
compilation error,109,replace,[CE] possible loss of precision,private int maximumItemCount = Integer.MAX_VALUE; ,private float maximumItemCount = Integer.MAX_VALUE;
compilation error,153,replace,[CE] no suitable constructor found for Series(Comparable,boolean),super(key); ,super(key, autoSort);
compilation error,153,replace,[CE] no suitable constructor found for Series(Comparable,boolean,boolean),super(key); ,super(key, autoSort, allowDuplicateXValues);
compilation error,153,replace,[CE] ';' expected,super(key); ,super(key, autoSort, allowDuplicateXValues));
patch is same with buggy,186,replace,,return this.data.size(); ,return this.data.size();
increase failing tests,186,replace, [FE] AssertionFailedError,return this.data.size(); ,return this.data.size() - 1;
increase failing tests,186,replace, [FE]  Size,return this.data.size(); ,return this.data.size() + 1;
compilation error,153,add,[CE] call to super must be first statement in constructor,,this(key, autoSort, allowDuplicateXValues);
compilation error,153,add,[CE] no suitable constructor found for Series(Comparable,boolean,boolean),,super(key, autoSort, allowDuplicateXValues);
compilation error,153,add,[CE] call to super must be first statement in constructor,,super(key); this.autoSort = autoSort;
increase failing tests,575,add, [FE] AssertionFailedError,,this.data.add(new XYDataItem(x, y));
compilation error,575,add,[CE] method getDataItem in class XYSeries cannot be applied to given types;,,XYDataItem existing = getDataItem(x, y);
compilation error,575,add,[CE] method get in interface List cannot be applied to given types;,,XYDataItem existing =(XYDataItem)this.data.get(x);
increase failing tests,546,add, [FE] ClassCastException,,this.data.add(x);
compilation error,546,add,[CE] incompatible types,,x = x.doubleValue();
patch is same with buggy,563,replace,,if (this.autoSort) { ,if(this.autoSort) {
increase failing tests,563,replace, [FE]  Size,if (this.autoSort) { ,if(this.allowDuplicateXValues) {
compilation error,546,replace,[CE] incompatible types,XYDataItem overwritten = null; ,XYDataItem overwritten = x;
compilation error,546,replace,[CE] incompatible types,XYDataItem overwritten = null; ,XYDataItem overwritten = y;
compilation error,546,replace,[CE] no suitable constructor found for XYDataItem(Number),XYDataItem overwritten = null; ,XYDataItem overwritten = new XYDataItem(x);
compilation error,575,replace,[CE] cannot find symbol existing,return overwritten; ,return existing;
compilation error,575,replace,[CE] cannot find symbol existing,return overwritten; ,return this.existing;
compilation error,575,replace,[CE] cannot find symbol overwritten,return overwritten; ,return this.overwritten;
increase failing tests,570,add, [FE] AssertionFailedError,,this.data.add(new XYDataItem(x, y));
compilation error,570,add,[CE] illegal start of expression,,while(this.autoSort) { this.data.add(new XYDataItem(x, y));
compilation error,570,add,[CE] illegal start of expression,,while(this.autoSort) { this.data.add(new XYDataItem(y, x));
increase failing tests,574,add, [FE] AssertionFailedError,,this.data.add(new XYDataItem(x, y));
increase failing tests,574,add, [FE] ArrayIndexOutOfBoundsException,,XYDataItem existing = getDataItem(index); this.data.add(new XYDataItem(x, y));
increase failing tests,574,add, [FE] ArrayIndexOutOfBoundsException,,XYDataItem existing = getDataItem(index);
compilation error,157,add,[CE] no suitable method found for max(int,boolean),,this.maximumItemCount = Math.max(maximumItemCount, allowDuplicateXValues);
compilation error,157,add,[CE] no suitable method found for max(int,boolean),,this.maximumItemCount = Math.max(maximumItemCount, autoSort); this.autoSort = autoSort;
compilation error,157,add,[CE] cannot find symbol,,this.maximumItemCount =(MaximumItemCount)this.data.get(key); this.autoSort = autoSort;
compilation error,564,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = Collections.binarySearch(this.data, new XYDataItem(x, y));
compilation error,564,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = Collections.binarySearch(this.data, x, y);
compilation error,564,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = getItemCount();
patch is same with buggy,541,replace,,if (x == null) { ,if(x == null) {
increase failing tests,541,replace, [FE] IllegalArgumentException,if (x == null) { ,if(x!= null) {
patch is same with buggy,155,replace,,this.autoSort = autoSort; ,this.autoSort = autoSort;
compilation error,155,replace,[CE] unexpected type,this.autoSort = autoSort; ,this.autoSort = autoSort &&!this.allowDuplicateXValues = allowDuplicateXValues;
compilation error,155,replace,[CE] method get in interface List cannot be applied to given types;,this.autoSort = autoSort; ,this.autoSort = autoSort? this.data.get(key): autoSort;
patch is same with buggy,527,replace,,return addOrUpdate(new Double(x), new Double(y)); ,return addOrUpdate(new Double(x), new Double(y));
compilation error,527,replace,[CE] cannot find symbol,return addOrUpdate(new Double(x), new Double(y)); ,return updateOrUpdate(new Double(x), new Double(y));
compilation error,527,replace,[CE] incompatible types,return addOrUpdate(new Double(x), new Double(y)); ,return update(new Double(x), new Double(y));
compilation error,109,add,[CE] illegal start of type,,return new XYSeries(this.maximumItemCount);
compilation error,109,add,[CE] illegal start of type,,return XYSeries.ZERO;
compilation error,109,add,[CE] illegal start of type,,return new XYSeries(this.size);
compilation error,548,add,[CE] illegal start of expression,,if(index < 0) { if(this.data.size() > 0) { this.data.add(x, y); }
compilation error,548,add,[CE] illegal start of expression,,if(index < 0) { if(this.data.size() > 0) { this.data.add(x); }
compilation error,548,add,[CE] illegal start of expression,,if(index < 0) { if(this.data.size() > 0) { this.data.remove(index); }
compilation error,541,add,[CE] variable x is already defined in method addOrUpdate(Number,Number),,XYSeries x = new XYSeries(x, y);
compilation error,541,add,[CE] variable x is already defined in method addOrUpdate(Number,Number),,XYDataItem x = new XYDataItem(x, y);
compilation error,541,add,[CE] variable x is already defined in method addOrUpdate(Number,Number),,XYDataItem x = new XYDataItem(x.getValue());
compilation error,527,add,[CE] ';' expected,,XYDataItem addOrUpdate(new XYDataItem(x, y));
compilation error,527,add,[CE] ';' expected,,XYDataItem addOrUpdate(new XYDataItem(x), new Y));
compilation error,527,add,[CE] method get in interface List cannot be applied to given types;,,XYDataItem data = this.data.get(x);
compilation error,186,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < XYSeries>(); for(int i = 0; i < this.data.size(); i++) { this.data.add(i); }
compilation error,186,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < XYSeries>(); for(int i = 0; i < this.data.size(); i++) { this.data.remove(0); }
compilation error,186,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < XYSeries>(); for(int i = 0; i < this.data.size(); i++) { this.data.add(i, new ArrayList < XYSeries>()); }
patch is same with buggy,564,replace,,this.data.add(-index - 1, new XYDataItem(x, y)); ,this.data.add(-index - 1, new XYDataItem(x, y));
increase failing tests,564,replace, [FE]  Size,this.data.add(-index - 1, new XYDataItem(x, y)); ,this.data.add(-index - 2, new XYDataItem(x, y));
increase failing tests,564,replace, [FE]  Size,this.data.add(-index - 1, new XYDataItem(x, y)); ,this.data.add(-1, new XYDataItem(x, y));
compilation error,155,add,[CE] cannot find symbol,,this.maximumItemCount =(MaximumItemCount)this.data.get(key); this.autoSort = autoSort;
compilation error,155,add,[CE] cannot find symbol,,this.maximumItemCount =(MaximumItemCount)this.data.get(key);
compilation error,155,add,[CE] no suitable method found for add(XYSeries,boolean),,this.data.add(new XYSeries(key, autoSort), allowDuplicateXValues);
patch is same with buggy,590,replace,,return Collections.binarySearch(this.data, new XYDataItem(x, null)); ,return Collections.binarySearch(this.data, new XYDataItem(x, null));
compilation error,590,replace,[CE] no suitable constructor found for XYDataItem(Number,boolean),return Collections.binarySearch(this.data, new XYDataItem(x, null)); ,return Collections.binarySearch(this.data, new XYDataItem(x, true));
compilation error,590,replace,[CE] no suitable method found for binarySearch(List,XYDataItem,int),return Collections.binarySearch(this.data, new XYDataItem(x, null)); ,return Collections.binarySearch(this.data, new XYDataItem(x, null), this.maximumItemCount);
compilation error,563,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = Collections.binarySearch(this.data, x, y);
compilation error,563,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = Collections.binarySearch(this.data, y);
compilation error,563,add,[CE] variable index is already defined in method addOrUpdate(Number,Number),,int index = getItemCount();
patch is same with buggy,154,replace,,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayList();
compilation error,154,replace,[CE] cannot find symbol,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayListWithCapacity(maximumItemCount);
compilation error,154,replace,[CE] cannot find symbol,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayListWithCapacity(2);
patch is same with buggy,570,replace,,if (getItemCount() > this.maximumItemCount) { ,if(getItemCount() > this.maximumItemCount) {
increase failing tests,570,replace, [FE] AssertionFailedError,if (getItemCount() > this.maximumItemCount) { ,if(this.maximumItemCount > getItemCount()) {
