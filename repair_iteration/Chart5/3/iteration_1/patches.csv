bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);	      XYDataItem    existing    =(XYDataItem)this.data.get(index);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
2	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);	      XYDataItem    existing    =(XYDataItem)this.data.get(index);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
3	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data;  [CE]  'else'  without  'if'  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data;  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.data;	      XYDataItem    existing    =(XYDataItem)existing;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
4	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.autoSort;  [CE]  'else'  without  'if'  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.autoSort;  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.autoSort;	      XYDataItem    existing    =(XYDataItem)existing;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
5	[BUG]  [BUGGY]  if(this.allowDuplicateXValues)  {  if(this.allowDuplicateXValues)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  if(this.allowDuplicateXValues)  {  if(this.allowDuplicateXValues)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	if(this.allowDuplicateXValues)    {    if(this.allowDuplicateXValues)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
6	[BUG]  [BUGGY]  if(this.allowDuplicateXValues)  {  If(this.allowDuplicateXValues)  {  [CE]  ';'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  if(this.allowDuplicateXValues)  {  If(this.allowDuplicateXValues)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	if(this.allowDuplicateXValues)    {    If(this.allowDuplicateXValues)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
7	[BUG]  [BUGGY]      XYDataItem  existing  =(XYDataItem)this.data.get(index);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      XYDataItem  existing  =(XYDataItem)this.data.get(index);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        XYDataItem    existing    =(XYDataItem)this.data.get(index);    XYDataItem  existing  =(XYDataItem)this.data.get(index);	  	non-compiled	[CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)	8	None	add
8	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.super.clone();  [CE]  '('  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.super.clone();  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.super.clone();	      XYDataItem    existing    =(XYDataItem)super.clone();    	non-compiled	[CE]  '('  expected	7	None	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  if(this.allowDuplicateXValues  ||  this.autoSort)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	add	if(this.allowDuplicateXValues  ||  this.autoSort)  {	  if(this.allowDuplicateXValues)    {    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	6	2	replace
10	[BUG]  [BUGGY]  if(this.allowDuplicateXValues  ||  this.autoSort)  {  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  if(this.allowDuplicateXValues  ||  this.autoSort)  {  [BUGGY]    this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	if(this.allowDuplicateXValues  ||  this.autoSort)  {	  if(this.allowDuplicateXValues)    {    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	6	2	replace
11	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.clone();  [CE]  'else'  without  'if'  [FE]          java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.clone();  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.data.clone();	      XYDataItem    existing    =(XYDataItem)existing.clone();    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	add	        this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	1	3	add
13	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	1	3	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	add	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
15	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
16	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  overwritten.setIndex(index);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  overwritten.setIndex(index);  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  overwritten.setIndex(index);  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
17	[BUG]  [BUGGY]  this.data.add(new  XYDataItem(x,  y),  index);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  this.data.add(new  XYDataItem(x,  y),  index);  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	this.data.add(new  XYDataItem(x,  y),  index);	      this.data.add(new    XYDataItem(x,    y));    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
18	[BUG]  [BUGGY]  this.data.add(new  XYDataItem(x,  y),  existing);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  this.data.add(new  XYDataItem(x,  y),  existing);  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	this.data.add(new  XYDataItem(x,  y),  existing);	      this.data.add(new    XYDataItem(x,    y));    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
19	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.clone;  [CE]  'else'  without  'if'  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]  XYDataItem  existing  =(XYDataItem)this.clone;  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	XYDataItem  existing  =(XYDataItem)this.clone;	      XYDataItem    existing    =(XYDataItem)existing;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
20	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }  [CE]  no  suitable  method  found  for  remove(int,XYDataItem)  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }	  	non-compiled	[CE]  no  suitable  method  found  for  remove(int,XYDataItem)	1	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	add	        this.data.add(new    XYDataItem(x,    y));    if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
22	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(index  >=  0)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	add	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
24	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	1	3	add
25	[BUG]  [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }  [CE]  no  suitable  method  found  for  remove(int,XYDataItem)  [FE]      AssertionFailedError    [CONTEXT]    catch  (CloneNotSupportedException  e)  {  throw  new  SeriesException(   "Couldn't  clone  XYDataItem!   ");  }  existing.setY(y);  }  else  {        [BUGGY]      this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]    if  (this.autoSort)  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.5773502691896258	563	563	1	replace	        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(index  -  1,  new  XYDataItem(x,  y));  }	  	non-compiled	[CE]  no  suitable  method  found  for  remove(int,XYDataItem)	1	None	add
