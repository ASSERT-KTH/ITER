bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat,  pos);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat,  pos);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat,  pos);	  parseAndIgnoreWhitespace(source,    pos,    denominatorFormat,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	45	None	replace
2	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos,    denominatorFormat,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	45	None	replace
3	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  numeratorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  numeratorFormat);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    deseratorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	55	None	replace
4	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  format);  [CE]  cannot  find  symbol  format  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  format);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  format);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    deseratorFormat);    	non-compiled	[CE]  cannot  find  symbol  format	55	None	replace
5	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);	  int    n    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	53	None	replace
6	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);	  int    n    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	53	None	replace
7	[BUG]  [BUGGY]  char  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	  int    n    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	53	None	replace
8	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.MAX_VALUE);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.MAX_VALUE);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.MAX_VALUE);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    c);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	57	None	replace
9	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.toString(initialIndex));  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.toString(initialIndex));  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  Integer.toString(initialIndex));	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    c);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	57	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
11	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
13	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
14	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  IllegalArgumentException  	35	5	replace
15	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  IllegalArgumentException  	35	5	replace
16	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  initialIndex);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat(),  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
17	[BUG]  [BUGGY]  int  denominatorFormat  =  getNumberFormat(),  pos);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getNumberFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getNumberFormat(),  pos);	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
18	[BUG]  [BUGGY]  int  denominatorFormat  =  getNumeratorFormat(),  pos);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getNumeratorFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getNumeratorFormat(),  pos);	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
19	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos  +  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat(),  pos  +  1);	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
20	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  startIndex);	  int    n    =    getNumberFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	10	None	replace
21	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  initialIndex,  pos);	  int    n    =    getNumberFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
22	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  startIndex,  initialIndex);	  int    n    =    getNumberFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	10	None	replace
23	[BUG]  [BUGGY]  int  initialIndex  =  getDenominatorFormat().computeIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  initialIndex  =  getDenominatorFormat().computeIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  initialIndex  =  getDenominatorFormat().computeIndex(initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().computeIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
24	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().computeIndex(source,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().computeIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
25	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex,  pos);	  int    denominatorFormat    =    getDenominatorFormat().computeIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
26	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex  +  1);	  Integer    d    =    getDimensionFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
27	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex  +  1);	  Integer    d    =    getDimensionFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
28	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  startIndex);	  int    d    =    getDimensionFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	41	None	replace
29	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos.getIndex());	  int    d    =    getDimensionFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
30	[BUG]  [BUGGY]  String  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	31	None	replace
31	[BUG]  [BUGGY]  String  DEnominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  DEnominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  DEnominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	31	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	Number  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	compilable	  [FE]  AssertionFailedError  	31	2	replace
33	[BUG]  [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Number  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	compilable	  [FE]  AssertionFailedError  	31	2	replace
34	[BUG]  [BUGGY]  String  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	31	None	replace
35	[BUG]  [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  initialIndex  =  pos.getIndex();	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
36	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);	  int    d    =    getDimensionFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
37	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);	  int    d    =    getDimensionFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
38	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  Integer.MIN_VALUE);	  int    d    =    getDimensionFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
39	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(source,  pos);	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
40	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(pos,  initialIndex);	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
41	[BUG]  [BUGGY]  char  c  =  getCurrentInitialIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  c  =  getCurrentInitialIndex(initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  c  =  getCurrentInitialIndex(initialIndex,  pos);	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
42	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(source,  initialIndex);	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
43	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  startIndex);	  int    d    =    getDimensionFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	42	None	replace
44	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);	  int    d    =    getDimensionFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
45	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  n);	  int    d    =    getDimensionFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
46	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  1;	  int    denominatorFormat    =    getDenominatorFormat().denominatorIndex();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
47	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  initialIndex;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  initialIndex;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  -  initialIndex;	  int    denominatorFormat    =    getDenominatorFormat().denominatorIndex();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
48	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().denominatorIndex()  +  1;	  int    denominatorFormat    =    getDenominatorFormat().denominatorIndex();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
49	[BUG]  [BUGGY]  String  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  d  =  getDenominatorFormat().parse(source,  pos);	  char    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	28	None	replace
50	[BUG]  [BUGGY]  Character  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Character  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Character  d  =  getDenominatorFormat().parse(source,  pos);	  char    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	28	None	replace
51	[BUG]  [BUGGY]  char  d  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  d  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  d  =  getDenominatorFormat().parse(source,  initialIndex);	  char    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	28	None	replace
52	[BUG]  [BUGGY]  Number  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  variable  d  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Number  d  =  getDenominatorFormat().parse(source,  pos);	  char    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  variable  d  is  already  defined  in  method  parse(String,ParsePosition)	28	None	replace
53	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(pos.getIndex());	  Integer    c    =    getCurrentInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
54	[BUG]  [BUGGY]  Integer  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	50	None	replace
55	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	50	None	replace
56	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	32	None	replace
57	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  startIndex,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	32	None	replace
58	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(initialIndex,  pos  +  1);	  Integer    c    =    getCurrentInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	65	None	replace
59	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex  +  2);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex  +  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(initialIndex  +  2);	  Integer    c    =    getCurrentInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
60	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos.getIndex()  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(pos.getIndex()  +  1);	  Integer    c    =    getCurrentInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
61	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  w);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  w);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	20	None	replace
62	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  denominatorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	20	None	replace
63	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  d,  initialIndex);  [CE]  cannot  find  symbol  d  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  d,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  d,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	20	None	replace
64	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  n,  initialIndex);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  n,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  n,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	20	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex    +    2);    pos.setIndex(initialIndex  +  2);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
66	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    2);    pos.setIndex(initialIndex  +  2);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
67	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  int  pos.setIndex(initialIndex  +  2);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  int  pos.setIndex(initialIndex  +  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    2);    int  pos.setIndex(initialIndex  +  2);	  	non-compiled	[CE]  ';'  expected	4	None	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  3);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex    +    2);    pos.setIndex(initialIndex  +  3);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
69	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  3);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  pos.setIndex(initialIndex  +  3);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    2);    pos.setIndex(initialIndex  +  3);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
70	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  initialIndex);	  int    d    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	29	None	replace
71	[BUG]  [BUGGY]  char  d  =  getNumeratorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  d  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  d  =  getNumeratorFormat().parse(source,  pos);	  int    d    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	29	None	replace
72	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  Integer.MAX_VALUE);	  int    d    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	29	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
74	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
75	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
77	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
78	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);  [CE]  cannot  find  symbol  d  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);	  parseAndIgnoreWhitespace(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	44	None	replace
79	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);	  parseAndIgnoreWhitespace(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	44	None	replace
80	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	n.setIndex(initialIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	56	None	replace
81	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  numeratorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  numeratorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    deseratorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	58	None	replace
82	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  initialIndex,  pos);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	30	None	replace
83	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	30	None	replace
84	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	30	None	replace
85	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	30	None	replace
86	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  initialIndex);	  int    n    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
87	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  initialIndex,  Integer.MAX_VALUE);	  int    n    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
88	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);	  int    n    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
89	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);	  int    n    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
90	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos,  denominatorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    initialIndex,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	16	None	replace
91	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos,  deseratorFormat);  [CE]  cannot  find  symbol  deseratorFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos,  deseratorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos,  deseratorFormat);	  parseAndIgnoreWhitespace(source,    initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol  deseratorFormat	16	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
93	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
94	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  ';'  expected	60	None	add
95	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	60	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
97	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
98	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length  -  1;  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().length  -  1;	  int    denominatorFormat    =    getDenominatorFormat().length;    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
99	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex;  [CE]  cannot  find  symbol  denominatorIndex  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().denominatorIndex;	  int    denominatorFormat    =    getDenominatorFormat().length;    	non-compiled	[CE]  cannot  find  symbol  denominatorIndex	12	None	replace
100	[BUG]  [BUGGY]  int  n  =  pos.length();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  pos.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  pos.length();	  int    n    =    initialIndex.length();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
101	[BUG]  [BUGGY]  int  n  =  initialIndex.length()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  initialIndex.length()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  initialIndex.length()  +  1;	  int    n    =    initialIndex.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
102	[BUG]  [BUGGY]  String  c  =  getCurrentInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  c  =  getCurrentInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  c  =  getCurrentInitialIndex(initialIndex);	  char    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
103	[BUG]  [BUGGY]  char  c  =  getCurrentCharacterIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  c  =  getCurrentCharacterIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  c  =  getCurrentCharacterIndex(initialIndex);	  char    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
104	[BUG]  [BUGGY]  Character  c  =  getCurrentInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Character  c  =  getCurrentInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Character  c  =  getCurrentInitialIndex(initialIndex);	  char    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
105	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  initialIndex);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	21	None	replace
106	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  no  suitable  method  found  for  parse(String,int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,int)	54	None	replace
107	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int,int)  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int,int)	54	None	replace
108	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,char)  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,char)	54	None	replace
109	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat()  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat()  /  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat()  /  1;	  int    denominatorFormat    =    getDenominatorFormat()    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	47	None	replace
110	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);	  int    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	59	None	replace
111	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);	  int    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	59	None	replace
112	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);	  int    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	59	None	replace
113	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex.getIndex());  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex.getIndex());  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex.getIndex());	  parseAndIgnoreWhitespace(source,    initialIndex,    pos.getIndex());    	non-compiled	[CE]  int  cannot  be  dereferenced	22	None	replace
114	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex(),  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex(),  denominatorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex(),  denominatorFormat);	  parseAndIgnoreWhitespace(source,    initialIndex,    pos.getIndex());    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	22	None	replace
115	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    null);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	48	None	replace
116	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  null);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  null);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  null);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    null);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	48	None	replace
117	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  null);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  null);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex,  null);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    null);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	48	None	replace
118	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  pos);	  Integer    d    =    getDimensionFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
119	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	7	None	replace
120	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  startIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  startIndex,  pos);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	7	None	replace
121	[BUG]  [BUGGY]  char  n  =  source.length();  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  n  =  source.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  n  =  source.length();	  int    n    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
123	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
125	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
127	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
128	[BUG]  [BUGGY]  String  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	8	None	replace
129	[BUG]  [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Number  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	8	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
131	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
132	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	34	None	add
133	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	34	None	add
134	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex;	  	non-compiled	[CE]  ')'  expected	34	None	add
135	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  startIndex);	  int    n    =    getNumberFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	9	None	replace
136	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos.getIndex());	  int    n    =    getNumberFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
137	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	6	None	replace
138	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
139	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  n);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
140	[BUG]  [BUGGY]  int  n  =  source.length()  +  startIndex;  [CE]  cannot  find  symbol  startIndex  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  source.length()  +  startIndex;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  source.length()  +  startIndex;	  int    n    =    source.length()    +    initialIndex;    	non-compiled	[CE]  cannot  find  symbol  startIndex	26	None	replace
141	[BUG]  [BUGGY]  int  n  =  source.length()  *  initialIndex;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  source.length()  *  initialIndex;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  source.length()  *  initialIndex;	  int    n    =    source.length()    +    initialIndex;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	26	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
143	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
144	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  ';'  expected	62	None	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
146	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
147	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	52	None	replace
148	[BUG]  [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	52	None	replace
149	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	52	None	replace
150	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  pos,  initialIndex);	  int    d    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	46	None	replace
151	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	46	None	replace
152	[BUG]  [BUGGY]  int  d  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	46	None	replace
153	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  startIndex);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	40	None	replace
154	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  den);  [CE]  cannot  find  symbol  den  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  den);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  den);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    w);    	non-compiled	[CE]  cannot  find  symbol  den	33	None	replace
155	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  null);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  null);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  null);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    w);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	33	None	replace
156	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  initialIndex  =  pos.getIndex();	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
157	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setStartIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setStartIndex(initialIndex  +  1);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
158	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setStartIndex(startIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	3	None	replace
159	[BUG]  [BUGGY]  pos.setStartIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setStartIndex(InitialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setStartIndex(InitialIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	3	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex    +    1);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
161	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    1);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
162	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  int  pos.setIndex(initialIndex  +  1);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  1);  int  pos.setIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    1);    int  pos.setIndex(initialIndex  +  1);	  	non-compiled	[CE]  ';'  expected	1	None	add
163	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(InitialIndex  +  1);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(InitialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    1);    pos.setIndex(InitialIndex  +  1);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	1	None	add
164	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
165	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
166	[BUG]  [BUGGY]  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
167	[BUG]  [BUGGY]  String  denominatorFormat  =  getDenominatorFormat();  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  denominatorFormat  =  getDenominatorFormat();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  denominatorFormat  =  getDenominatorFormat();	  char    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  incompatible  types	13	None	replace
168	[BUG]  [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat();  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  denominatorFormat  =  getDenominatorFormat();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Number  denominatorFormat  =  getDenominatorFormat();	  char    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  incompatible  types	13	None	replace
169	[BUG]  [BUGGY]  String  DEnominatorFormat  =  getDenominatorFormat();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  DEnominatorFormat  =  getDenominatorFormat();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  DEnominatorFormat  =  getDenominatorFormat();	  char    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  incompatible  types	13	None	replace
170	[BUG]  [BUGGY]  Character  denominatorFormat  =  getDenominatorFormat();  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Character  denominatorFormat  =  getDenominatorFormat();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Character  denominatorFormat  =  getDenominatorFormat();	  char    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  incompatible  types	13	None	replace
171	[BUG]  [BUGGY]  char  c  =  getCurrentInitialIndex(startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  c  =  getCurrentInitialIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  c  =  getCurrentInitialIndex(startIndex);	  char    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	19	None	replace
172	[BUG]  [BUGGY]  Integer  d  =  getDestinationFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDestinationFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDestinationFormat().parse(source,  pos);	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
173	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  num);  [CE]  cannot  find  symbol  num  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  num);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  num);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    c);    	non-compiled	[CE]  cannot  find  symbol  num	57	None	replace
174	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);	  int    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	59	None	replace
175	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Integer  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	34	None	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  3);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex  +  3);	  pos.setIndex(initialIndex    +    2);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
177	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  3);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  3);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex  +  3);	  pos.setIndex(initialIndex    +    2);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
178	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  num);  [CE]  cannot  find  symbol  num  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  num);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  num);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  num	54	None	replace
179	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	54	None	replace
180	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  n);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
181	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  startIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	6	None	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
183	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
184	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length  +  1;  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().length  +  1;	  int    denominatorFormat    =    getDenominatorFormat().length;    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
185	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  startIndex);	  Integer    d    =    getDimensionFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	39	None	replace
186	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	62	None	add
187	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	50	None	replace
188	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	50	None	replace
189	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  Integer  pos.setIndex(initialIndex  +  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  1);  Integer  pos.setIndex(initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    1);    Integer  pos.setIndex(initialIndex  +  1);	  	non-compiled	[CE]  ';'  expected	1	None	add
190	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  1);	  int    n    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
191	[BUG]  [BUGGY]  int  n  =  sources.length();  [CE]  cannot  find  symbol  sources  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  sources.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  sources.length();	  int    n    =    source.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  sources	24	None	replace
192	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos);	  parseAndIgnoreWhitespace(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	44	None	replace
193	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  source);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  source);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  source);	  parseAndIgnoreWhitespace(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	44	None	replace
194	[BUG]  [BUGGY]  String  c  =  getCurrentInitialIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  String  c  =  getCurrentInitialIndex(initialIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	String  c  =  getCurrentInitialIndex(initialIndex,  pos);	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
195	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  denominatorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  null,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    null);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	48	None	replace
196	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParseFormat().parse(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
197	[BUG]  [BUGGY]  initialIndex  =  getNumberFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  initialIndex  =  getNumberFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	initialIndex  =  getNumberFormat().parse(source,  pos);	  int    n    =    getNumberFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
198	[BUG]  [BUGGY]  int  n  =  startIndex.length();  [CE]  cannot  find  symbol  startIndex  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  startIndex.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  startIndex.length();	  int    n    =    initialIndex.length();    	non-compiled	[CE]  cannot  find  symbol  startIndex	25	None	replace
199	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  Integer  pos.setIndex(initialIndex  +  2);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  +  2);  Integer  pos.setIndex(initialIndex  +  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex    +    2);    Integer  pos.setIndex(initialIndex  +  2);	  	non-compiled	[CE]  ';'  expected	4	None	add
200	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(source,  initialIndex  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(source,  initialIndex  +  1);	  Integer    c    =    getCurrentInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
201	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(source  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(source  +  1);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(source  +  1);	  Integer    c    =    getCurrentInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
202	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos.getIndex());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat(),  pos.getIndex());	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
203	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  pos,  numeratorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	46	None	replace
204	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	46	None	replace
205	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos);	  int    d    =    getDimensionFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
206	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	56	None	replace
207	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	56	None	replace
208	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deser);  [CE]  cannot  find  symbol  deser  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deser);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deser);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    w);    	non-compiled	[CE]  cannot  find  symbol  deser	33	None	replace
209	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  numeratorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	52	None	replace
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
211	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
212	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	60	None	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
214	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
215	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  Integer.MAX_VALUE);	  int    d    =    getDimensionFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
216	[BUG]  [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDenominatorFormat().parse(source,  pos);	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  incompatible  types	61	None	replace
217	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(denominatorIndex);  [CE]  cannot  find  symbol  denominatorIndex  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(denominatorIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().computeIndex(denominatorIndex);	  int    denominatorFormat    =    getDenominatorFormat().computeIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  denominatorIndex	15	None	replace
218	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(source);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(source);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().computeIndex(source);	  int    denominatorFormat    =    getDenominatorFormat().computeIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
219	[BUG]  [BUGGY]  initialIndex  =  getNumberFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  initialIndex  =  getNumberFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	initialIndex  =  getNumberFormat().parse(source,  pos,  initialIndex);	  int    n    =    getNumberFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
220	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
221	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
222	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  initialIndex);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos,    denominatorFormat,    initialIndex);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	45	None	replace
223	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	7	None	replace
224	[BUG]  [BUGGY]  Integer  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	7	None	replace
225	[BUG]  [BUGGY]  int  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  desnominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	7	None	replace
226	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  num);  [CE]  cannot  find  symbol  num  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  num);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  num);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  num	30	None	replace
227	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	30	None	replace
228	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  num);  [CE]  cannot  find  symbol  num  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  num);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  num);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  num	30	None	replace
229	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  n);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	30	None	replace
230	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());	  int    n    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
231	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  denominator	6	None	replace
232	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  d,  initialIndex);  [CE]  cannot  find  symbol  d  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  d,  initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  d,  initialIndex);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	6	None	replace
233	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  d);  [CE]  cannot  find  symbol  d  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  d);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  d);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	6	None	replace
234	[BUG]  [BUGGY]  Number  c  =  getCurrentInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Number  c  =  getCurrentInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Number  c  =  getCurrentInitialIndex(initialIndex);	  char    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
235	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(initialIndex,  pos.getIndex());	  Integer    c    =    getCurrentInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
236	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
237	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  numeratorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  numeratorFormat);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat,  numeratorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	21	None	replace
238	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);	  int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	54	None	replace
239	[BUG]  [BUGGY]  Character  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Character  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Character  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  char    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	31	None	replace
240	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  startIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  startIndex,  pos);	  int    d    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	27	None	replace
241	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE,  pos.getIndex());	  int    d    =    getDimensionFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
242	[BUG]  [BUGGY]  Integer  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  n  =  source.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  n  =  source.length();	  int    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	23	None	replace
243	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
244	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	56	None	replace
245	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	56	None	replace
246	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	56	None	replace
247	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  d);  [CE]  cannot  find  symbol  d  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  d);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  d);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    c);    	non-compiled	[CE]  cannot  find  symbol  d	57	None	replace
248	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  DEMINE_FORMAT);  [CE]  cannot  find  symbol  DEMINE_FORMAT  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  DEMINE_FORMAT);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  DEMINE_FORMAT);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    deseratorFormat);    	non-compiled	[CE]  cannot  find  symbol  DEMINE_FORMAT	55	None	replace
249	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat(),  pos.setIndex(initialIndex);	  int    denominatorFormat    =    getDenominatorFormat(),    pos);    	non-compiled	[CE]  ';'  expected	14	None	replace
250	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	50	None	replace
251	[BUG]  [BUGGY]  char  c  =  getCurrentInitialIndex(pos);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  char  c  =  getCurrentInitialIndex(pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  c  =  getCurrentInitialIndex(pos);	  Integer    c    =    getCurrentInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
252	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	30	None	replace
253	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	30	None	replace
254	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  n);  [CE]  cannot  find  symbol  startIndex  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  startIndex,  n);	  int    d    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	30	None	replace
255	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  source,  null);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  source,  null);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  source,  null);	  parseAndIgnoreWhitespace(source,    pos.getIndex(),    null);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	48	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  *  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex  *  2);	  pos.setIndex(initialIndex    +    2);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
257	[BUG]  [BUGGY]  pos.setIndex(initialIndex  *  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  pos.setIndex(initialIndex  *  2);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex  *  2);	  pos.setIndex(initialIndex    +    2);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
258	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos.getIndex());  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos.getIndex());  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  pos.getIndex());	  parseAndIgnoreWhitespace(source,    initialIndex,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	22	None	replace
259	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  initialIndex);  [BUGGY]        Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex,    w);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	33	None	replace
260	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos.getIndex());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos.getIndex());	  Integer    d    =    getDimensionFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
261	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  1,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  1,  denominatorFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  1,  denominatorFormat);	  int    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	59	None	replace
262	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);	  int    n    =    getNumberFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
263	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  int  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	36	None	replace
