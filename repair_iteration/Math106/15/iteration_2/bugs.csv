bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
2	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
3	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  pos.setStartIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setStartIndex(initialIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	pos.setIndex(initialIndex  +  2);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
5	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	pos.setIndex(initialIndex  +  2);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
6	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	      int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	6	None	replace
7	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex,  pos);	      int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	6	None	replace
8	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat().parse(source,  initialIndex);	      int    denominatorFormat    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	6	None	replace
9	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  getNumberFormat().parse(source,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  initialIndex);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
10	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  initialIndex);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length;  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().length;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().length;	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
13	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  char  denominatorFormat  =  getDenominatorFormat();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat();	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  incompatible  types	4	None	replace
14	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat(),  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat(),  pos);	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  ';'  expected	4	None	replace
15	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().computeIndex(initialIndex);	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
16	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos);	  parseAndIgnoreWhitespace(source,    initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	7	None	replace
17	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(initialIndex,  pos);	      Integer    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  c  =  getCurrentInitialIndex(pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(pos);	      Integer    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
19	[BUG]  [BUGGY]  char  c  =  getCurrentInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  char  c  =  getCurrentInitialIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  c  =  getCurrentInitialIndex(initialIndex);	      Integer    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
20	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  initialIndex);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	13	None	replace
21	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	13	None	replace
22	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex());  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex());  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos.getIndex());	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	13	None	replace
23	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  source.length()  +  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
24	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  -  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  source.length()  -  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
25	[BUG]  [BUGGY]  int  n  =  initialIndex.length();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  initialIndex.length();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  initialIndex.length();	      int    n    =    source.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
26	[BUG]  [BUGGY]  int  n  =  source.length()  +  initialIndex;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  initialIndex;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  source.length()  +  initialIndex;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
27	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  initialIndex);	      int    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	14	None	replace
28	[BUG]  [BUGGY]  char  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  char  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  d  =  getDenominatorFormat().parse(source,  pos);	      int    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	14	None	replace
29	[BUG]  [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getNumeratorFormat().parse(source,  pos);	      int    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	14	None	replace
30	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	      int    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	14	None	replace
31	[BUG]  [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	char  denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	      int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	3	None	replace
32	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	8	None	replace
33	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  w);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  w);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	8	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
35	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
36	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	        pos.setIndex(initialIndex);    int  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	1	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
38	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
39	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
40	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
41	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDimensionFormat().parse(source,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  initialIndex);	      int    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
42	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);	      int    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
43	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  Integer.MAX_VALUE);	      int    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  startIndex,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	8	None	replace
45	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	8	None	replace
46	[BUG]  [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	      int    d    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	14	None	replace
47	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat()  -  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat()  -  1;	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	4	None	replace
48	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  null);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  null);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	13	None	replace
49	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	10	None	replace
50	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	        pos.setIndex(initialIndex);    Integer  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	1	None	add
51	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(source);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  c  =  getCurrentInitialIndex(source);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(source);	      Integer    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
52	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	10	None	replace
53	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	5	None	replace
54	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	      int    denominatorFormat    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	3	None	replace
55	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deseratorFormat);  [CE]  cannot  find  symbol  deseratorFormat  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deseratorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex,  deseratorFormat);	  parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  deseratorFormat	8	None	replace
56	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	1	None	add
57	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  c);  [CE]  cannot  find  symbol  c  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  c);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  c);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  c	13	None	replace
58	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  deseratorFormat);  [CE]  cannot  find  symbol  deseratorFormat  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  deseratorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  deseratorFormat);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  deseratorFormat	13	None	replace
59	[BUG]  [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);	      int    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	9	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
61	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
63	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
64	[BUG]  [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  int  denominatorFormat  =  getDenominatorFormat().denominatorIndex();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	int  denominatorFormat  =  getDenominatorFormat().denominatorIndex();	      int    denominatorFormat    =    getDenominatorFormat();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
65	[BUG]  [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();      [BUGGY]  Integer  c  =  getCurrentInitialIndex(initialIndex  +  1);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	140	140	1	replace	Integer  c  =  getCurrentInitialIndex(initialIndex  +  1);	      Integer    c    =    getCurrentInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
