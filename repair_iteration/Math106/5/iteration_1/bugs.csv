bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  startIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  startIndex);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	Number  den  =  getDenominatorFormat().parse(source,  startIndex);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	10	None	replace
2	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	Number  den  =  getNumberFormat().parse(source,  pos);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	add	Number  den  =  getNumeratorFormat().parse(source,  pos);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	compilable	  [FE]  AssertionFailedError  	10	1	replace
4	[BUG]  [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	Number  den  =  getNumeratorFormat().parse(source,  pos);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	compilable	  [FE]  AssertionFailedError  	10	1	replace
5	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	10	None	replace
6	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  den  [FE]            AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	  	Number  den  =  getDenominatorFormat().parse(source,  pos);  	non-compiled	[CE]  cannot  find  symbol  den	10	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	add	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	11	3	add
8	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	11	3	add
9	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [FE]      AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	11	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	add	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	11	3	add
11	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	11	3	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  	11	1	add
13	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  	11	1	add
14	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	11	None	add
15	[BUG]  [BUGGY]    int  n  =  getNumberFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    int  n  =  getNumberFormat().parse(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    int  n  =  getNumberFormat().parse(source,  pos);		non-compiled	[CE]  cannot  find  symbol	11	None	add
16	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	Number  den  =  getDenominatorFormat().parse(source,  pos);  	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	10	None	replace
17	[BUG]  [BUGGY]    Integer  d  =  getDenominatorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    Integer  d  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    Integer  d  =  getDenominatorFormat().parse(source,  pos);		non-compiled	[CE]  incompatible  types	11	None	add
18	[BUG]  [BUGGY]    Integer  d  =  getDimensionFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    Integer  d  =  getDimensionFormat().parse(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    Integer  d  =  getDimensionFormat().parse(source,  pos);		non-compiled	[CE]  cannot  find  symbol	11	None	add
19	[BUG]  [BUGGY]    Integer  d  =  getDenominatorFormat().parseInt(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    Integer  d  =  getDenominatorFormat().parseInt(source,  pos);  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos);  if  (den  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.5773502691896258	191	191	1	replace	    Integer  d  =  getDenominatorFormat().parseInt(source,  pos);		non-compiled	[CE]  cannot  find  symbol	11	None	add
