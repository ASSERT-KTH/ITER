bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
2	[BUG]  [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
4	[BUG]  [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
5	[BUG]  [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(whole  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(whole  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	add
6	[BUG]  [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  If(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  If(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    If(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
7	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
8	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  pos.setStartIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	pos.setStartIndex(initialIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
9	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	pos.setIndex(initialIndex  +  2);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
10	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  pos.setIndex(initialIndex);  return  null;  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	pos.setIndex(initialIndex);  return  null;	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
11	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	int  initialIndex  =  pos.getIndex();	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
12	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getNumberFormat().parse(source,  initialIndex);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
13	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
15	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
17	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
19	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
20	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	6	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
22	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
24	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
25	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	8	None	add
26	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  ';'  expected	8	None	add
27	[BUG]  [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
28	[BUG]  [BUGGY]  Integer  initialIndex  =  whole.getIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  initialIndex  =  whole.getIndex();  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  initialIndex  =  whole.getIndex();	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
29	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.length()!=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.length()!=  0)  {	  if(whole    ==    null    ||    whole.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
30	[BUG]  [BUGGY]  if(whole  ==  null  &&  whole.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  &&  whole.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  &&  whole.length()  ==  0)  {	  if(whole    ==    null    ||    whole.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
31	[BUG]  [BUGGY]  Integer  initialIndex  =  whole.intValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  initialIndex  =  whole.intValue();  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  initialIndex  =  whole.intValue();	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
32	[BUG]  [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDeniedFormat().parse(source,  initialIndex);	      Number    den    =    getDeniedFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
33	[BUG]  [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDeniedFormat().parse(source,  pos,  denominatorFormat);	      Number    den    =    getDeniedFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
34	[BUG]  [BUGGY]  Integer  initialIndex  =  getInitialIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  initialIndex  =  getInitialIndex();  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  initialIndex  =  getInitialIndex();	      if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
36	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
37	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        pos.setIndex(initialIndex);    int  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	4	None	add
38	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	4	None	add
39	[BUG]  [BUGGY]  if  (whole!=  null)  {  if  (whole!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  if  (whole!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    if  (whole!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  if  (whole!=  null)  {  if  (whole  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  if  (whole  ==  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    if  (whole  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
41	[BUG]  [BUGGY]  if  (whole!=  null)  {  if  (whole  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  if  (whole  >=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    if  (whole  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
42	[BUG]  [BUGGY]  if  (whole!=  null)  {  If  (whole!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  If  (whole!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    If  (whole!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
43	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(whole,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  parseAndIgnoreWhitespace(whole,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	parseAndIgnoreWhitespace(whole,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
44	[BUG]  [BUGGY]  if(whole!=  null)  {  for(int  i  =  startIndex;  i  <  initialIndex;  i++)  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  for(int  i  =  startIndex;  i  <  initialIndex;  i++)  {  pos.setIndex(initialIndex);  }  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  for(int  i  =  startIndex;  i  <  initialIndex;  i++)  {  pos.setIndex(initialIndex);  }	      	non-compiled	[CE]  cannot  find  symbol  startIndex	3	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  if(initialIndex  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(whole!=  null)  {  if(initialIndex  <  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  AssertionFailedError  	3	2	replace
46	[BUG]  [BUGGY]  if(whole!=  null)  {  if(initialIndex  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  if(initialIndex  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  if(initialIndex  <  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  AssertionFailedError  	3	2	replace
47	[BUG]  [BUGGY]  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(initialIndex))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(whole  ==  null  ||  whole.equals(initialIndex))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	1	replace
49	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.equals(initialIndex))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(initialIndex))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.equals(initialIndex))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	1	replace
50	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.equals(c))  {  [CE]  cannot  find  symbol  c  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(c))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.equals(c))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  c	21	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  ||  whole.equals(initialIndex))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(whole!=  null  ||  whole.equals(initialIndex))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	3	replace
52	[BUG]  [BUGGY]  if(whole!=  null  ||  whole.equals(initialIndex))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  ||  whole.equals(initialIndex))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null  ||  whole.equals(initialIndex))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	3	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
54	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
55	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	12	None	add
56	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    If(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  ';'  expected	12	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
58	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
60	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
62	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
64	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
65	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >>  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >>  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >>  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  incompatible  types	10	None	add
66	[BUG]  [BUGGY]  String  c  =  whole.charAt(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  String  c  =  whole.charAt(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	String  c  =  whole.charAt(initialIndex);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
67	[BUG]  [BUGGY]  char  c  =  initialIndex.charAt(whole);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  initialIndex.charAt(whole);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  initialIndex.charAt(whole);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
68	[BUG]  [BUGGY]  char  c  =  initialIndex.charAt(global);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  initialIndex.charAt(global);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  initialIndex.charAt(global);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
69	[BUG]  [BUGGY]  if(whole!=  null  &&  whole.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  &&  whole.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null  &&  whole.length()  ==  0)  {	  if(whole!=    null    ||    whole.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
70	[BUG]  [BUGGY]  if(whole!=  null  ||  whole.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  ||  whole.length()  >=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null  ||  whole.length()  >=  0)  {	  if(whole!=    null    ||    whole.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
71	[BUG]  [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  startIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDeniedFormat().parse(source,  startIndex);	      Number    den    =    getDeniedFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
73	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
74	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	6	None	add
75	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  ret  =  getInitialIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  ret  =  getInitialIndex(initialIndex);	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
76	[BUG]  [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
77	[BUG]  [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
78	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(whole,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(whole,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getNumberFormat().parse(whole,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
79	[BUG]  [BUGGY]  Number  den  =  getDeniedFormat().parse(whole,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDeniedFormat().parse(whole,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDeniedFormat().parse(whole,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
80	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(whole,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDenominatorFormat().parse(whole,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDenominatorFormat().parse(whole,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
81	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.length()  >=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.length()  >=  0)  {	  if(whole    ==    null    ||    whole.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
82	[BUG]  [BUGGY]  char  c  =  initialIndex.charAt(globalIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  initialIndex.charAt(globalIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  initialIndex.charAt(globalIndex);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
83	[BUG]  [BUGGY]  char  c  =  den.charAt(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  den.charAt(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  den.charAt(initialIndex);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
84	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getNumberFormat().parse(source,  startIndex);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
86	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	12	2	add
87	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(InitialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	12	None	add
88	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	      if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
89	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(InitialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	10	None	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
91	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	10	2	add
92	[BUG]  [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(InitialIndex);  }	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	10	None	add
93	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.equals(numeratorFormat))  {  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(numeratorFormat))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.equals(numeratorFormat))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	21	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(source))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(whole  ==  null  ||  whole.equals(source))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	1	replace
95	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.equals(source))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(source))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.equals(source))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	compilable	  [FE]  AssertionFailedError  	21	1	replace
96	[BUG]  [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
97	[BUG]  [BUGGY]  if  (whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    pos.setIndex(initialIndex);  return  null;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
98	[BUG]  [BUGGY]  if  (whole!=  null)  {  pos.setIndex(initialIndex);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if  (whole!=  null)  {  pos.setIndex(initialIndex);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if    (whole!=    null)    {    pos.setIndex(initialIndex);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
99	[BUG]  [BUGGY]  Integer  ret  =  getIndex(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  ret  =  getIndex(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  ret  =  getIndex(initialIndex);	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
100	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  >=  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(initialIndex  >=  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    	compilable	  [FE]  AssertionFailedError  	15	2	replace
102	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  >=  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  >=  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    	compilable	  [FE]  AssertionFailedError  	15	2	replace
103	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	if(initialIndex  <  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	18	1	replace
105	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0)  {  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(whole!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	18	1	replace
106	[BUG]  [BUGGY]  char  c  =  initialIndex.charAt(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  initialIndex.charAt(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  initialIndex.charAt(initialIndex);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
107	[BUG]  [BUGGY]  char  c  =  startIndex.charAt(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  char  c  =  startIndex.charAt(initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	char  c  =  startIndex.charAt(initialIndex);	      char    c    =    whole.charAt(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
108	[BUG]  [BUGGY]  if(whole!=  null  &&  whole.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  &&  whole.length()  >  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null  &&  whole.length()  >  0)  {	  if    (whole!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
109	[BUG]  [BUGGY]  if(whole!=  null  &&  whole.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole!=  null  &&  whole.length  >  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole!=  null  &&  whole.length  >  0)  {	  if    (whole!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
110	[BUG]  [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
111	[BUG]  [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  Whole.MAX_VALUE)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  Whole.MAX_VALUE)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0  ||  initialIndex  >  Whole.MAX_VALUE)  {  pos.setIndex(initialIndex);  return  null;  }	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
112	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos  +  1);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getNumberFormat().parse(source,  pos  +  1);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
113	[BUG]  [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
114	[BUG]  [BUGGY]  if(whole  ==  null  ||  whole.equals(d))  {  [CE]  cannot  find  symbol  d  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(whole  ==  null  ||  whole.equals(d))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(whole  ==  null  ||  whole.equals(d))  {	  if(whole    ==    null    ||    whole.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  d	21	None	replace
115	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex  +  1);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex  +  1);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
116	[BUG]  [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0  ||  initialIndex  >  num.length())  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
117	[BUG]  [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  if(initialIndex  <  0  ||  initialIndex  >  num)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	if(initialIndex  <  0  ||  initialIndex  >  num)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
118	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(whole,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Integer  d  =  getDimensionFormat().parse(whole,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Integer  d  =  getDimensionFormat().parse(whole,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
119	[BUG]  [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]  Number  den  =  getDeniedFormat().parse(source,  pos  +  1);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	Number  den  =  getDeniedFormat().parse(source,  pos  +  1);	      Number    den    =    getDeniedFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	add	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
121	[BUG]  [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);    [BUGGY]      if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	144	144	1	replace	        if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    else    {    pos.setIndex(initialIndex);    }    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  else  {  pos.setIndex(initialIndex);  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
