bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
2	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	15	None	replace
3	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  initialIndex);	      Integer    d    =    getDestinatorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
4	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  pos,  denominatorFormat);	      Integer    d    =    getDestinatorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	16	None	replace
5	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  initialIndex);	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	4	None	replace
6	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(initialIndex,  pos);	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  c  =  getInitialIndex(pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(pos);	      Integer    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
8	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(initialIndex,  pos);	      Integer    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
9	[BUG]  [BUGGY]  char  c  =  getInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  char  c  =  getInitialIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getInitialIndex(initialIndex);	      Integer    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
10	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  initialIndex);	      Number    num    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	6	None	replace
11	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex);	      Number    num    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	6	None	replace
12	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	10	None	replace
13	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	10	None	replace
14	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	10	None	replace
15	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  initialIndex);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	10	None	replace
16	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  initialIndex);	      Integer    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	12	None	replace
17	[BUG]  [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getNumeratorFormat().parse(source,  pos);	      Integer    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	12	None	replace
18	[BUG]  [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	String  c  =  getNumeratorFormat().parse(source,  pos);	      Integer    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	12	None	replace
19	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  n);	  Number    whole    =    getWholeFormat().parse(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
20	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  initialIndex);	      Number    den    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	14	None	replace
21	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	      Number    den    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	14	None	replace
22	[BUG]  [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos);  [CE]  cannot  find  symbol  whole  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumeratorFormat().parse(source,  pos);	      Number    den    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	14	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
24	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
25	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        pos.setIndex(initialIndex);    int  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	1	None	add
26	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	1	None	add
27	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  this;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  pos.setIndex(initialIndex);  return  this;  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex);  return  this;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  incompatible  types	5	None	replace
28	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [CE]  cannot  find  symbol  whole  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  1);  return  null;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	5	None	replace
29	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  initialIndex);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
30	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	11	None	replace
31	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex);	  Number    whole    =    getWholeFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	8	None	replace
32	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	9	None	replace
33	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]    if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	9	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
35	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
36	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parsePosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
38	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
39	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  getPosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  getPosition(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  getPosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
40	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	2	None	replace
41	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  pos.setStartIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setStartIndex(initialIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
42	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	      Integer    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	12	None	replace
43	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	      Number    den    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	14	None	replace
44	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos  +  1);	      Number    den    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
45	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  c  =  getInitialIndex(initialIndex  +  1);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(initialIndex  +  1);	      Integer    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
46	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  startIndex);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	15	None	replace
47	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE);	      Number    den    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
48	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(source);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parsePosition(source);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
49	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  startIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  startIndex);	      Integer    d    =    getDestinatorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	16	None	replace
50	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  2);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	2	None	replace
51	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos);  [CE]  cannot  find  symbol  whole  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  pos);	      Number    num    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	6	None	replace
52	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	      Number    num    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	6	None	replace
53	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        pos.setIndex(initialIndex);    Integer  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	1	None	add
54	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  getIndex();  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  getIndex();	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
55	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	5	None	replace
56	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	4	None	replace
57	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	4	None	replace
58	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	4	None	replace
59	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	2	None	replace
60	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	2	None	replace
61	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]            AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  null;  }	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	5	None	replace
62	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]              AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	5	None	replace
63	[BUG]  [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos);  [CE]  cannot  find  symbol  whole  [FE]          AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getNumeratorFormat().parse(source,  pos);	      Integer    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	12	None	replace
64	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
65	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
66	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);      [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]    Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	        parseAndIgnoreWhitespace(source,    pos);    if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
