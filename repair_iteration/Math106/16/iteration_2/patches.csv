bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  numeratorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  numeratorFormat);	  Number    whole    =    getWholeFormat().parse(source,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	32	None	replace
2	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  n);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  n);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  n);	  Integer    d    =    getDimensionFormat().parse(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	46	None	replace
3	[BUG]  [BUGGY]  char  c  =  getInitialIndex(pos);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  char  c  =  getInitialIndex(pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getInitialIndex(pos);	  Integer    c    =    getInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
4	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(pos,  pos);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(pos,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(pos,  pos);	  Integer    c    =    getInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
5	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
6	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
7	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  whole  =  getWholeFormat().parse(source,  pos);  if(whole!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
8	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  source  =  getSourceFormat().parse(source,  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
9	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  pos);	  Number    den    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	20	None	replace
10	[BUG]  [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	String  c  =  getNumeratorFormat().parse(source,  initialIndex);	  String    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	18	None	replace
11	[BUG]  [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  String  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	String  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	  String    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	18	None	replace
12	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  pos.setIndex(initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  initialIndex);  pos.setIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	38	None	replace
13	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(pos,  initialIndex);	  Integer    c    =    getInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
14	[BUG]  [BUGGY]  char  c  =  getInitialIndex(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  char  c  =  getInitialIndex(initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getInitialIndex(initialIndex,  pos);	  Integer    c    =    getInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
15	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(source,  pos);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(source,  pos);	  Integer    c    =    getInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
16	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	35	None	replace
17	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	35	None	replace
18	[BUG]  [BUGGY]  if(initialIndex  ==  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  ==  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  ==  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(initialIndex    >=    0)    {    parseAndIgnoreWhitespace(source,    pos);    }    	non-compiled	[CE]  cannot  find  symbol  whole	58	None	replace
19	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  pos);	  parseAndIgnoreWhitespace(initialIndex,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	6	None	replace
20	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(initialIndex,  pos,  denominatorFormat);	  parseAndIgnoreWhitespace(initialIndex,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	6	None	replace
21	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  source,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(initialIndex,  source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(initialIndex,  source,  pos);	  parseAndIgnoreWhitespace(initialIndex,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	6	None	replace
22	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  n);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  n);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  n);	  Integer    d    =    getDestinatorFormat().parse(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	49	None	replace
23	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(initialIndex,  pos  +  1);	  Integer    c    =    getInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	45	None	replace
24	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(pos  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(pos  +  1);	  Integer    c    =    getInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	45	None	replace
25	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(initialIndex  +  2);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(initialIndex  +  2);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(initialIndex  +  2);	  Integer    c    =    getInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
26	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  pos);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  pos);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  pos);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,ParsePosition)	13	None	replace
27	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n,  pos);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n,  pos);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  n,  pos);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
28	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	25	None	replace
29	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	25	None	replace
30	[BUG]  [BUGGY]  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex!=  0)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	25	None	replace
31	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  pos,  initialIndex);	  Integer    c    =    getNumeratorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	16	None	replace
32	[BUG]  [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getNumeratorFormat().parse(source,  initialIndex);	  Integer    c    =    getNumeratorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	16	None	replace
33	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  pos);	  Integer    c    =    getNumeratorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	16	None	replace
34	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  if(initialIndex    <    0)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  whole	57	None	replace
35	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  initialIndex,  denominatorFormat);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	4	None	replace
36	[BUG]  [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	4	None	replace
37	[BUG]  [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	4	None	replace
38	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    den    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	30	None	replace
39	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  initialIndex);	  Number    den    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
40	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  startIndex,  denominatorFormat);	  Number    den    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	30	None	replace
41	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	52	None	replace
42	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	52	None	replace
43	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  pos,  initialIndex);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	52	None	replace
44	[BUG]  [BUGGY]  Number  num  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumberFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	52	None	replace
45	[BUG]  [BUGGY]  n.setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  n.setIndex(initialIndex);  return  null;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	n.setIndex(initialIndex);  return  null;	  if(initialIndex    >=    -1)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  n	55	None	replace
46	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	n.setIndex(initialIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	26	None	replace
47	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  n);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  n);	  Number    whole    =    getWholeFormat().parse(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
48	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  d);  [CE]  cannot  find  symbol  d  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  d);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  d);	  Number    whole    =    getWholeFormat().parse(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	15	None	replace
49	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  w);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  w);	  Number    whole    =    getWholeFormat().parse(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	15	None	replace
50	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  return  null;  [CE]  cannot  find  symbol  whole  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex  +  2);  return  null;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  2);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	28	None	replace
51	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  3);  return  null;  [CE]  cannot  find  symbol  whole  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex  +  3);  return  null;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  3);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  whole	28	None	replace
52	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	int  initialIndex  =  pos.getIndex();	  if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	62	None	replace
53	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  pos);  [CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  initialIndex,  pos);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int,ParsePosition)	11	None	replace
54	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	11	None	replace
55	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  w);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  initialIndex,  w);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	11	None	replace
56	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  startIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  startIndex,  pos);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	11	None	replace
57	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  initialIndex);	  Number    num    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	51	None	replace
58	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  pos  +  1);	  Number    num    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	51	None	replace
59	[BUG]  [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumeratorFormat().parse(source,  initialIndex);	  Number    den    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	22	None	replace
60	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  n);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  n);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  n);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	31	None	replace
61	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  d);  [CE]  cannot  find  symbol  d  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  d);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  d);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	31	None	replace
62	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  numeratorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  numeratorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  numeratorFormat);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	33	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	23	1	add
64	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	23	1	add
65	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    int  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	23	None	add
66	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	23	None	add
67	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex;	  	non-compiled	[CE]  ')'  expected	23	None	add
68	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	24	None	replace
69	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	24	None	replace
70	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	24	None	replace
71	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  ParsePosition  pos  =  parsePosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	ParsePosition  pos  =  parsePosition(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(initialIndex);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	36	None	replace
72	[BUG]  [BUGGY]  pos  =  parsePosition(initialIndex);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos  =  parsePosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos  =  parsePosition(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
73	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos,  denominatorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  pos,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    initialIndex,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	12	None	replace
74	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex  +  1);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  initialIndex  +  1);	  Number    den    =    getDenominatorFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	44	None	replace
75	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex  +  1);  [CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex  +  1);	  Number    den    =    getDenominatorFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,ParsePosition,int)	44	None	replace
76	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  initialIndex,  denominatorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	2	None	replace
77	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  startIndex,  denominatorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2	None	replace
78	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  initialIndex);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
79	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  3);  [CE]  cannot  find  symbol  whole  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex  +  3);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  3);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  whole	40	None	replace
80	[BUG]  [BUGGY]  String  c  =  getInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  String  c  =  getInitialIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	String  c  =  getInitialIndex(initialIndex);	  char    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
81	[BUG]  [BUGGY]  Character  c  =  getInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Character  c  =  getInitialIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Character  c  =  getInitialIndex(initialIndex);	  char    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
82	[BUG]  [BUGGY]  Number  c  =  getInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  c  =  getInitialIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getInitialIndex(initialIndex);	  char    c    =    getInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
83	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
84	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
85	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	ParsePosition  pos  =  parsePosition(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
86	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  ParsePosition  pos  =  parsePosition(source);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  ParsePosition  pos  =  parsePosition(source);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  initialIndex);  ParsePosition  pos  =  parsePosition(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	48	None	replace
87	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
88	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
89	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
90	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex);	  parseAndIgnoreWhitespace(source,    initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  FractionFormat  cannot  be  applied  to  given  types;	5	None	replace
91	[BUG]  [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  initialIndex);  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getNumeratorFormat().parse(source,  initialIndex);	  Number    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	63	None	replace
92	[BUG]  [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getNumeratorFormat().parse(source,  pos  +  1);	  Number    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
93	[BUG]  [BUGGY]  Character  c  =  getNumeratorFormat().parse(source,  pos);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Character  c  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Character  c  =  getNumeratorFormat().parse(source,  pos);	  char    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  incompatible  types	17	None	replace
94	[BUG]  [BUGGY]  ParsePosition  pos  =  getPosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  ParsePosition  pos  =  getPosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	ParsePosition  pos  =  getPosition(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    getPosition(initialIndex);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	39	None	replace
95	[BUG]  [BUGGY]  pos  =  getPosition(initialIndex);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos  =  getPosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos  =  getPosition(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    getPosition(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
96	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setStartIndex(initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setStartIndex(initialIndex  +  1);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
97	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setStartIndex(startIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	41	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
99	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
101	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
102	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  parsePosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  parsePosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    ParsePosition  pos  =  parsePosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
104	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	37	1	add
105	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  getPosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  getPosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    ParsePosition  pos  =  getPosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
106	[BUG]  [BUGGY]  int  initialIndex  =  getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  int  initialIndex  =  getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	int  initialIndex  =  getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	54	None	replace
107	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  getIndex();  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(startIndex);  int  initialIndex  =  getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    getIndex();    	non-compiled	[CE]  cannot  find  symbol  startIndex	54	None	replace
108	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  n  =  getIndex();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex);  int  n  =  getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex);  int  n  =  getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    getIndex();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
109	[BUG]  [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  initialIndex  =  pos.getIndex();	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
110	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex,  denominatorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  initialIndex,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	14	None	replace
111	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  startIndex,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	14	None	replace
112	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]                        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  numeratorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  numeratorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	14	None	replace
113	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  denominatorFormat,  numeratorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	14	None	replace
114	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);  [CE]  cannot  find  symbol  w  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  w);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  w	21	None	replace
115	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  initialIndex);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	21	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
117	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
119	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
121	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
122	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parsePosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parsePosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	34	None	add
123	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  startIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  startIndex);	  Number    den    =    getNumberFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	29	None	replace
124	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  return  this;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex  +  1);  return  this;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex  +  1);  return  this;	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  incompatible  types	27	None	replace
125	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  Integer.MAX_VALUE);	  Number    den    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
126	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  pos);	  Number    den    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
127	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  Integer.MIN_VALUE);	  Number    den    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
128	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  initialIndex,  denominatorFormat);	  Integer    c    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	42	None	replace
129	[BUG]  [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  char  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	  Integer    c    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	42	None	replace
130	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  initialIndex,  denominatorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	43	None	replace
131	[BUG]  [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	43	None	replace
132	[BUG]  [BUGGY]  Integer  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
133	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex  +  1);	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
134	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	38	None	replace
135	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	38	None	replace
136	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	38	None	replace
137	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	26	None	replace
138	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	26	None	replace
139	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	35	None	replace
140	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Number  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ';'  expected	23	None	add
141	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	23	None	add
142	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  getPosition(initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  getPosition(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  getPosition(initialIndex);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	34	None	add
143	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	25	None	replace
144	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  int  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    int    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	25	None	replace
145	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(initialIndex,  pos.getIndex());  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(initialIndex,  pos.getIndex());	  Integer    c    =    getInitialIndex(initialIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
146	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  format);  [CE]  cannot  find  symbol  format  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  format);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  format);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  format	14	None	replace
147	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  num);  [CE]  cannot  find  symbol  num  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  num);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  num);	  Integer    d    =    getDimensionFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  num	2	None	replace
148	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
149	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
150	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  nu  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  nu  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  nu	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
151	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumeratorFormat().parse(source,  pos  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumeratorFormat().parse(source,  pos  +  1);	  Number    den    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	22	None	replace
153	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(startIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  startIndex	40	None	replace
154	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	24	None	replace
155	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominatorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	21	None	replace
156	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  initialIndex,  denominator);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  denominator	21	None	replace
157	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  n,  initialIndex);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	21	None	replace
158	[BUG]  [BUGGY]  int  initialIndex  =  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  int  initialIndex  =  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	int  initialIndex  =  pos.setIndex(initialIndex);	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
159	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	52	None	replace
160	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
161	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(ini  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(ini  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(ini	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  ')'  expected	64	None	replace
162	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
163	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
164	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
165	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat,  initialIndex);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat,  initialIndex);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	11	None	replace
166	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Number  source  =  getSourceFormat().parse(source,  pos);  [CE]  variable  source  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Number  source  =  getSourceFormat().parse(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    Number  source  =  getSourceFormat().parse(source,  pos);	  	non-compiled	[CE]  variable  source  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
167	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParsePosition  pos  =  parsePosition(source);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    ParsePosition  pos  =  parsePosition(source);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
168	[BUG]  [BUGGY]  int  initialIndex  =  pos.setIndex(initialIndex);  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  int  initialIndex  =  pos.setIndex(initialIndex);  return  null;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	int  initialIndex  =  pos.setIndex(initialIndex);  return  null;	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
169	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  nu  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  nu  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  nu	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
170	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
171	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  -1)  {  parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  not  a  statement	66	None	replace
172	[BUG]  [BUGGY]  Number  c  =  getDenominatorFormat().parse(source,  pos);  [CE]  cannot  find  symbol  whole  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  c  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getDenominatorFormat().parse(source,  pos);	  Number    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	63	None	replace
173	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  deseratorFormat);  [CE]  cannot  find  symbol  deseratorFormat  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  deseratorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  pos,  initialIndex,  deseratorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    startIndex,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  deseratorFormat	15	None	replace
174	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  2);  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(startIndex  +  2);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(startIndex  +  2);	  pos.setIndex(initialIndex    +    2);    	non-compiled	[CE]  cannot  find  symbol  startIndex	50	None	replace
175	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	parseAndIgnoreWhitespace(source,  initialIndex,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    initialIndex);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	5	None	replace
176	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  return  null;  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(startIndex  +  1);  return  null;  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(startIndex  +  1);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  startIndex	28	None	replace
177	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(source,  initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(source,  initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(source,  initialIndex  +  1);	  Integer    c    =    getInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
178	[BUG]  [BUGGY]  pos.setStartIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setStartIndex(InitialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setStartIndex(InitialIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	41	None	replace
179	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  num);  [CE]  cannot  find  symbol  num  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  pos,  num);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  pos,  num);	  Integer    c    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  num	42	None	replace
180	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  0);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  0);	  Number    den    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
181	[BUG]  [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  this;  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  this;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  this;  }	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  incompatible  types	27	None	replace
182	[BUG]  [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  pos.getIndex())  {  pos.setIndex(initialIndex);  return  null;  }	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  cannot  find  symbol  whole	27	None	replace
183	[BUG]  [BUGGY]  pos  =  parsePosition(source);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos  =  parsePosition(source);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos  =  parsePosition(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
184	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  num);  [CE]  cannot  find  symbol  num  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  num);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  pos,  num);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  num	4	None	replace
185	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  pos,  initialIndex);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
186	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  pos,  numeratorFormat);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	4	None	replace
187	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(source);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(source);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(source);	  Integer    c    =    getInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
188	[BUG]  [BUGGY]  Integer  c  =  getInitialIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getInitialIndex(pos.getIndex());  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getInitialIndex(pos.getIndex());	  Integer    c    =    getInitialIndex(pos);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
189	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
190	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(denominatorIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den!=    null)    {    pos.setIndex(denominatorIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
191	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  startIndex,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	11	None	replace
192	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
193	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
194	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if(den!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if(den    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
195	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  startIndex,  denominatorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	20	None	replace
196	[BUG]  [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  1,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getNumeratorFormat().parse(source,  pos,  1,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getNumeratorFormat().parse(source,  pos,  1,  denominatorFormat);	  Number    num    =    getNumeratorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	52	None	replace
197	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	26	None	replace
198	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	26	None	replace
199	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  InitialIndex  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	26	None	replace
200	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	43	None	replace
201	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  Integer.MAX_VALUE,  denominatorFormat);	  Number    den    =    getNumberFormat().parse(source,    Integer.MAX_VALUE);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	47	None	replace
202	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  startIndex,  denominatorFormat);	  Number    den    =    getDenominatorFormat().parse(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	21	None	replace
203	[BUG]  [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  num  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  num  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	  Number    num    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	51	None	replace
204	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n,  denominatorFormat);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  n,  denominatorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  n,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    startIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
205	[BUG]  [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  startIndex,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  d  =  getDestinatorFormat().parse(source,  startIndex,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  d  =  getDestinatorFormat().parse(source,  startIndex,  denominatorFormat);	  Integer    d    =    getDestinatorFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	4	None	replace
206	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
207	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  Integer  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    Integer    pos.setIndex(initialIndex);    	non-compiled	[CE]  ';'  expected	53	None	replace
208	[BUG]  [BUGGY]  if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(initialIndex    <    0)    {    parseAndIgnoreWhitespace(source,    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
209	[BUG]  [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getNumberFormat().parse(source,  pos,  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getNumberFormat().parse(source,  pos,  1);	  Number    den    =    getNumberFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
210	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
211	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den  ==  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
212	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  Number  den  =  getNumberFormat().parse(source,  pos);  if  (den!=  null)  {  pos.setIndex(deniedIndex);  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    if(initialIndex    <    0)    {    Number    den    =    getNumberFormat().parse(source,    pos);    if    (den    ==    null)    {    pos.setIndex(deniedIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
213	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]            AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(initialIndex    >=    0)    {    parseAndIgnoreWhitespace(source,    pos);    }    	non-compiled	[CE]  cannot  find  symbol  whole	58	None	replace
214	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	38	None	replace
215	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	38	None	replace
216	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	pos.setIndex(initialIndex);  return  null;  }	  if(initialIndex    >=    -1)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
217	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	35	None	replace
218	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  whole	35	None	replace
219	[BUG]  [BUGGY]  if(initialIndex  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  whole	24	None	replace
220	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Number  den  =  getDenominatorFormat().parse(source,  pos);  pos.setIndex(denominatorIndex);  [CE]  cannot  find  symbol  denominatorIndex  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Number  den  =  getDenominatorFormat().parse(source,  pos);  pos.setIndex(denominatorIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    Number  den  =  getDenominatorFormat().parse(source,  pos);  pos.setIndex(denominatorIndex);	  	non-compiled	[CE]  cannot  find  symbol  denominatorIndex	37	None	add
221	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Integer  d  =  getDimensionFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Integer  d  =  getDimensionFormat().parse(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    Integer  d  =  getDimensionFormat().parse(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
222	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Integer  d  =  getDimensionFormat().parse(source,  pos);  pos.setIndex(d);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  Integer  d  =  getDimensionFormat().parse(source,  pos);  pos.setIndex(d);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    Integer  d  =  getDimensionFormat().parse(source,  pos);  pos.setIndex(d);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
223	[BUG]  [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  c  =  getNumeratorFormat().parse(source,  startIndex,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  c  =  getNumeratorFormat().parse(source,  startIndex,  pos);	  Integer    c    =    getNumeratorFormat().parse(source,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	16	None	replace
224	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  this;  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  this;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  return  this;  }	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  incompatible  types	27	None	replace
225	[BUG]  [BUGGY]  if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  =  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  if(initialIndex    <    0)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
226	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
227	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  pos.setIndex(initialIndex);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  pos.setIndex(initialIndex);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex;  pos.setIndex(initialIndex);	  	non-compiled	[CE]  ')'  expected	23	None	add
228	[BUG]  [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  c  =  getNumeratorFormat().parse(source,  pos,  denominatorFormat);	  Number    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	63	None	replace
229	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos,  denominatorFormat);  [CE]  cannot  find  symbol  startIndex  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos,  denominatorFormat);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  startIndex,  pos,  denominatorFormat);	  Number    whole    =    getWholeFormat().parse(source,    pos,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  startIndex	14	None	replace
230	[BUG]  [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  den);  [CE]  cannot  find  symbol  den  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  whole  =  getWholeFormat().parse(source,  initialIndex,  den);  [BUGGY]      if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  whole  =  getWholeFormat().parse(source,  initialIndex,  den);	  Number    whole    =    getWholeFormat().parse(source,    initialIndex,    denominatorFormat);    	non-compiled	[CE]  cannot  find  symbol  den	32	None	replace
231	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  return  null;  }  [CE]  cannot  find  symbol  whole  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  return  null;  }	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  whole	61	None	replace
232	[BUG]  [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat  +  1);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]              AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Number  den  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat  +  1);	  Number    den    =    getDenominatorFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	44	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
234	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
235	[BUG]  [BUGGY]  Integer  initialIndex  =  getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Integer  initialIndex  =  getIndex();  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Integer  initialIndex  =  getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	54	None	replace
236	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setInitialIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  >=  0)  {  pos.setInitialIndex(initialIndex);  return  null;  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  >=  0)  {  pos.setInitialIndex(initialIndex);  return  null;  }	  if(initialIndex    >=    0)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
237	[BUG]  [BUGGY]  char  c  =  getInitialIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  char  c  =  getInitialIndex(initialIndex  +  1);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	char  c  =  getInitialIndex(initialIndex  +  1);	  Integer    c    =    getInitialIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
238	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  whole  [FE]        AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex  +  1);  }  else  {  pos.setIndex(initialIndex);  }	  if(initialIndex    <    0)    {    pos.setIndex(initialIndex);    }    else    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  cannot  find  symbol  whole	59	None	replace
239	[BUG]  [BUGGY]  Char  c  =  getNumeratorFormat().parse(source,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);        [BUGGY]  Char  c  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]      Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	143	143	1	replace	Char  c  =  getNumeratorFormat().parse(source,  pos);	  char    c    =    getNumeratorFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
