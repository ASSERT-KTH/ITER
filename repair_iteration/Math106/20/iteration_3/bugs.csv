bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "null "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "null "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret!=    null    &&    ret.equals(   ".       "))    {    	compilable	  [FE]  AssertionFailedError  	28	4	replace
2	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "null "))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "null "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "null "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret!=    null    &&    ret.equals(   ".       "))    {    	compilable	  [FE]  AssertionFailedError  	28	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "n "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "n "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret!=    null    &&    ret.equals(   ".       "))    {    	compilable	  [FE]  AssertionFailedError  	28	4	replace
4	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "n "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "n "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "n "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret!=    null    &&    ret.equals(   ".       "))    {    	compilable	  [FE]  AssertionFailedError  	28	4	replace
5	[BUG]  [BUGGY]  if(ret!=  null  &&  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  pos.length()  ==  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  pos.length()  ==  0)  {	  if(ret!=    null    &&    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
6	[BUG]  [BUGGY]  if(ret!=  null  ||!ret.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||!ret.isEmpty())  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||!ret.isEmpty())  {	  if(ret    ==    null    ||!ret.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
7	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.isEmpty())  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.isEmpty())  {	  if(ret    ==    null    ||!ret.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
8	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
9	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  numeratorFormat,  denominatorFormat);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
10	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  initialIndex);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
11	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
12	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(source,  pos);	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
13	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(source);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(source);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(source);	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
14	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(pos,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(pos,  pos.getIndex());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(pos,  pos.getIndex());	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
15	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(pos,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(pos,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(pos,  pos);	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
16	[BUG]  [BUGGY]  int  ret  =  getInitialIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  int  ret  =  getInitialIndex();  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	int  ret  =  getInitialIndex();	  Integer    ret    =    getInitialIndex()    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
17	[BUG]  [BUGGY]  char  ret  =  getInitialIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  char  ret  =  getInitialIndex();  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	char  ret  =  getInitialIndex();	  Integer    ret    =    getInitialIndex()    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
18	[BUG]  [BUGGY]  ret.parse(source,  pos,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  numeratorFormat);	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
19	[BUG]  [BUGGY]  ret.parse(source,  pos,  numeratorFormat,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  numeratorFormat,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  numeratorFormat,  denominatorFormat);	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
20	[BUG]  [BUGGY]  ret.parse(source,  pos,  denominatorFormat,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  denominatorFormat,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  denominatorFormat,  numeratorFormat);	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
21	[BUG]  [BUGGY]  ret.parse(source,  pos,  numeratorFormat,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  numeratorFormat,  type);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  numeratorFormat,  type);	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
22	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret!=  null  &&  ret.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret!=  null  &&  ret.equals( "*   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "*   "))    {    if(ret!=  null  &&  ret.equals( "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
23	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret!=  null  &&  ret.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret!=  null  &&  ret.equals( ".*   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "*   "))    {    if(ret!=  null  &&  ret.equals( ".*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
24	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret  ==  null  &&  ret.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  if(ret  ==  null  &&  ret.equals( "*   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "*   "))    {    if(ret  ==  null  &&  ret.equals( "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
25	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  pos);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
26	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  pos  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  pos  +  1);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
27	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  num  +  1);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
28	[BUG]  [BUGGY]  ret.initialIndex  =  pos.getIndex()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.initialIndex  =  pos.getIndex()  -  1;	  ret.initialIndex    =    pos.getIndex();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
29	[BUG]  [BUGGY]  ret.initialIndex  =  pos.getIndex()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.initialIndex  =  pos.getIndex()  +  1;	  ret.initialIndex    =    pos.getIndex();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
30	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	5	replace
31	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "__ "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	5	replace
32	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "_ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "_ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
33	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "_ "))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "_ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "_ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
35	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "__ "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
36	[BUG]  [BUGGY]  ret.parse(source,  null,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  null,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  null,  pos);	  ret.parse(source,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
37	[BUG]  [BUGGY]  ret.parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  null);	  ret.parse(source,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
38	[BUG]  [BUGGY]  ret.parse(source,  null,  parseAndIgnoreWhitespace);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  null,  parseAndIgnoreWhitespace);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  null,  parseAndIgnoreWhitespace);	  ret.parse(source,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  ||  ret.equals( "   "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret    ==    null    &&    ret.equals(   "       "))    {    	compilable	  [FE]  AssertionFailedError  	29	5	replace
40	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.equals( "   "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.equals( "   "))  {	  if(ret!=    null    &&    ret.equals(       "       "))    {    if(ret    ==    null    &&    ret.equals(   "       "))    {    	compilable	  [FE]  AssertionFailedError  	29	5	replace
41	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.length()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.length()  >  0)  {	  if(ret    ==    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
42	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret!=  null  &&  ret.equals( "false   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret!=  null  &&  ret.equals( "false   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "false   "))    {    if(ret!=  null  &&  ret.equals( "false   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
43	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret!=  null  &&  ret.equals( ".false   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret!=  null  &&  ret.equals( ".false   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "false   "))    {    if(ret!=  null  &&  ret.equals( ".false   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
44	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret  ==  null  &&  ret.equals( "false   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  if(ret  ==  null  &&  ret.equals( "false   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "false   "))    {    if(ret  ==  null  &&  ret.equals( "false   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
45	[BUG]  [BUGGY]  if(ret!=  null  &&  pos.initialIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  pos.initialIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  pos.initialIndex()  >  0)  {	  if(ret!=    null    &&    ret.initialIndex()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
46	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.initialIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.initialIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.initialIndex()  >  0)  {	  if(ret!=    null    &&    ret.initialIndex()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
47	[BUG]  [BUGGY]  if(ret!=  null  &&!ret.initialIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&!ret.initialIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&!ret.initialIndex()  >  0)  {	  if(ret!=    null    &&    ret.initialIndex()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
48	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  startIndex);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
49	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  c);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  c);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
50	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  n);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
51	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret!=  null  &&  ret.equals( "_   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret!=  null  &&  ret.equals( "_   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "_   "))    {    if(ret!=  null  &&  ret.equals( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
52	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret!=  null  &&  ret.equals( "._   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret!=  null  &&  ret.equals( "._   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "_   "))    {    if(ret!=  null  &&  ret.equals( "._   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
53	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret  ==  null  &&  ret.equals( "_   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  if(ret  ==  null  &&  ret.equals( "_   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "_   "))    {    if(ret  ==  null  &&  ret.equals( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
54	[BUG]  [BUGGY]  if(ret  ==  null  ||  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  pos.length()  ==  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  pos.length()  ==  0)  {	  if(ret    ==    null    ||    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
55	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.length()!=  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.length()!=  0)  {	  if(ret    ==    null    ||    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
56	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	5	replace
57	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "- "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	5	replace
58	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	8	replace
59	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "- "))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	8	replace
60	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "- ")||  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "- ")||  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	8	replace
61	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "- ")||  ret.equals( "- "))  {  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "- ")||  ret.equals( "- "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "- ")||  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "-   "))    {    	compilable	  [FE]  NullPointerException  	42	8	replace
62	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat);	  ret.parseAndIgnoreWhitespace(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
63	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  numeratorFormat,  denominatorFormat);	  ret.parseAndIgnoreWhitespace(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
64	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  numeratorFormat);	  ret.parseAndIgnoreWhitespace(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
65	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat,  initialIndex);	  ret.parseAndIgnoreWhitespace(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
66	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret!=  null  ||  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret!=  null  ||  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    ||    ret.equals(   "       "))    {    if(ret!=  null  ||  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
67	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret!=  null  ||  ret.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret!=  null  ||  ret.equals( ".   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    ||    ret.equals(   "       "))    {    if(ret!=  null  ||  ret.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
68	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret  ==  null  ||  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals(   "     "))  {  if(ret  ==  null  ||  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    ||    ret.equals(   "       "))    {    if(ret  ==  null  ||  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
69	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  num);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos,  num);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
70	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos,  denominatorFormat);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
71	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  ret);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  ret);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos,  ret);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
72	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  c);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos,  c);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
73	[BUG]  [BUGGY]  Integer  ret  =  getNumeratorFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getNumeratorFormat().parse(source,  pos);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
74	[BUG]  [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getDenominatorFormat().parse(source,  pos,  num);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
75	[BUG]  [BUGGY]  Integer  ret  =  getNumberFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getNumberFormat().parse(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getNumberFormat().parse(source,  pos);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
76	[BUG]  [BUGGY]  if(ret!=  null  ||!ret.isFunction())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||!ret.isFunction())  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||!ret.isFunction())  {	  if(ret    ==    null    ||!ret.isFunction())    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
77	[BUG]  [BUGGY]  if(ret  ==  null  ||!ret.getFunction())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||!ret.getFunction())  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||!ret.getFunction())  {	  if(ret    ==    null    ||!ret.isFunction())    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
78	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  -  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.getIndex()  -  1);	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
79	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.getIndex()  +  1);	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
80	[BUG]  [BUGGY]  ret.setIndex(pos.getIndex(),  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(pos.getIndex(),  initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos.getIndex(),  initialIndex);	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
81	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  startIndex,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  startIndex,  pos.getIndex());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  startIndex,  pos.getIndex());	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
82	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "fraction "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "fraction "))  {	  if(ret!=    null    ||    ret.equals(   "       "))    {    	compilable	  [FE]  NullPointerException  	8	5	replace
83	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "fraction "))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "fraction "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "fraction "))  {	  if(ret!=    null    ||    ret.equals(   "       "))    {    	compilable	  [FE]  NullPointerException  	8	5	replace
84	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.length()  <  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.length()  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.length()  <  0)  {	  if(ret!=    null    ||    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
85	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos.initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.initialIndex);	  ret.setIndex(pos.initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
86	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos.startIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.startIndex);	  ret.setIndex(pos.initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
87	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret!=  null  &&  ret.equals( "fraction   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret!=  null  &&  ret.equals( "fraction   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "fraction   "))    {    if(ret!=  null  &&  ret.equals( "fraction   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
88	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret!=  null  &&  ret.equals( ".fraction   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret!=  null  &&  ret.equals( ".fraction   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "fraction   "))    {    if(ret!=  null  &&  ret.equals( ".fraction   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
89	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret  ==  null  &&  ret.equals( "fraction   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  if(ret  ==  null  &&  ret.equals( "fraction   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "fraction   "))    {    if(ret  ==  null  &&  ret.equals( "fraction   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
90	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(initialIndex  +  1);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
91	[BUG]  [BUGGY]  pos.setIndex(initialIndex,  parseAndIgnoreWhitespace);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  pos.setIndex(initialIndex,  parseAndIgnoreWhitespace);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(initialIndex,  parseAndIgnoreWhitespace);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
92	[BUG]  [BUGGY]  pos.setIndex(initialIndex,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  pos.setIndex(initialIndex,  pos);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(initialIndex,  pos);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
93	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.getType()  ==  Token.NUMBER)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.getType()  ==  Token.NUMBER)  {	  if(ret    ==    null    ||    ret.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
94	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.getType()!=  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  ret.getType()!=  Token.NUMBER)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.getType()!=  Token.NUMBER)  {	  if(ret    ==    null    ||    ret.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
95	[BUG]  [BUGGY]  if(ret  ==  null  ||  pos.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||  pos.getType()  ==  Token.NUMBER)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  pos.getType()  ==  Token.NUMBER)  {	  if(ret    ==    null    ||    ret.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
96	[BUG]  [BUGGY]  ret.setIndex(pos.getIndex()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(pos.getIndex()  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos.getIndex()  +  1);	  ret.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "true "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "true "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  AssertionFailedError  	53	4	replace
98	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "true "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "true "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "true "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  AssertionFailedError  	53	4	replace
99	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	5	replace
100	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "false "))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	5	replace
101	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	8	replace
102	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "false "))  {  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	8	replace
103	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos);	  ret.setIndex(d);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
104	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  d);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  d);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  d);	  ret.setIndex(d);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
105	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null    &&    ret.equals(   "   "))    {    if(ret  ==  null  &&  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
106	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( "   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null    &&    ret.equals(   "   "))    {    if(ret!=  null  &&  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
107	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( ".   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null    &&    ret.equals(   "   "))    {    if(ret  ==  null  &&  ret.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
108	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret!=  null  &&  ret.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret!=  null  &&  ret.equals( "-   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "-   "))    {    if(ret!=  null  &&  ret.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
109	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret!=  null  &&  ret.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret!=  null  &&  ret.equals( ".-   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "-   "))    {    if(ret!=  null  &&  ret.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
110	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret  ==  null  &&  ret.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  if(ret  ==  null  &&  ret.equals( "-   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "-   "))    {    if(ret  ==  null  &&  ret.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
111	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);	  parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
112	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex);	  parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
113	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);	  Number    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
114	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  parseAndIgnoreWhitespace);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  parseAndIgnoreWhitespace);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos,  parseAndIgnoreWhitespace);	  Number    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
115	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos,  null);	  Number    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
116	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos,  num);	  Number    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
117	[BUG]  [BUGGY]  ret  =  ret.parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret  =  ret.parse(source,  pos,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  ret.parse(source,  pos,  denominatorFormat);	  ret    =    ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
118	[BUG]  [BUGGY]  ret  =  ret.parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret  =  ret.parse(source,  pos,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  ret.parse(source,  pos,  null);	  ret    =    ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
119	[BUG]  [BUGGY]  ret  =  ret.parse(source,  pos,  parseAndIgnoreWhitespace);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret  =  ret.parse(source,  pos,  parseAndIgnoreWhitespace);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  ret.parse(source,  pos,  parseAndIgnoreWhitespace);	  ret    =    ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
120	[BUG]  [BUGGY]  ret  =  ret.parse(source,  pos,  denominator);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret  =  ret.parse(source,  pos,  denominator);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  ret.parse(source,  pos,  denominator);	  ret    =    ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
121	[BUG]  [BUGGY]  if(ret!=  null  ||  pos.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  pos.length()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  pos.length()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	5	replace
123	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "* "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	5	replace
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	8	replace
125	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "* "))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	8	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "/ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "/ "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
127	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "/ "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "/ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "/ "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
128	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  num);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  num);	  Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
129	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  ret);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  ret);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  ret);	  Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
130	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);	  Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
131	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  c);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  c);	  Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "prototype "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "prototype "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  AssertionFailedError  	10	4	replace
133	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "prototype "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "prototype "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "prototype "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  AssertionFailedError  	10	4	replace
134	[BUG]  [BUGGY]  if(ret!=  null  &&  pos.initialIndex  <  0)  {  [CE]  cannot  find  symbol  initialIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  pos.initialIndex  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  pos.initialIndex  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	48	None	replace
135	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.n  <  0)  {  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.n  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.n  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  n	48	None	replace
136	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.startIndex  <  0)  {  [CE]  cannot  find  symbol  startIndex  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.startIndex  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.startIndex  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  startIndex	48	None	replace
137	[BUG]  [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);	  ReflectionFormat.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
138	[BUG]  [BUGGY]  ParseFormat.parseAndIgnoreWhitespace(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ParseFormat.parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ParseFormat.parseAndIgnoreWhitespace(source,  pos);	  ReflectionFormat.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
139	[BUG]  [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  initialIndex);	  ReflectionFormat.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
140	[BUG]  [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  num);	  ReflectionFormat.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
141	[BUG]  [BUGGY]  if(ret!=  null  ||  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  ||  pos.length()  ==  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  pos.length()  ==  0)  {	  if(ret!=    null    ||    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
142	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat,  null);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
143	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  parseAndIgnoreWhitespace);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  parseAndIgnoreWhitespace);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  parseAndIgnoreWhitespace);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
144	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  pos);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
145	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null,  denominatorFormat);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
146	[BUG]  [BUGGY]  ret.parse(source,  new  ProperFractionFormat());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  new  ProperFractionFormat());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  new  ProperFractionFormat());	  ret.parse(source,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
147	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos  +  1);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
148	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  2);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  2);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
149	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1,  num);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
150	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos,  false);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos,  false);	  Number    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
151	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "fraction "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "fraction "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  NullPointerException  	10	8	replace
152	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "fraction "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "fraction "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "fraction "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  NullPointerException  	10	8	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "function "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "function "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  AssertionFailedError  	10	4	replace
154	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "function "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "function "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "function "))  {	  if(ret!=    null    &&    ret.equals(   "fraction   "))    {    	compilable	  [FE]  AssertionFailedError  	10	4	replace
155	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex().intValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex().intValue();  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex().intValue();	  Integer    ret    =    getInitialIndex()    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  source.length()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  source.length()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
157	[BUG]  [BUGGY]  if(ret!=  null  &&  source.length()  >  0)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  source.length()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  source.length()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
158	[BUG]  [BUGGY]  if(ret  ==  null  &&  pos.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  pos.length()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  pos.length()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
159	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.length()  ==  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.length()  ==  0)  {	  if(ret!=    null    &&    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
160	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.length()  >=  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.length()  >=  0)  {	  if(ret!=    null    &&    ret.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
161	[BUG]  [BUGGY]  ret.setIndex(startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(startIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(startIndex);	  ret.setIndex(d);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
162	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  denominatorFormat);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
163	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  num);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  num);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  num);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||!ret.equals( " "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  ||!ret.equals( " "))  {	  if(ret    ==    null    ||!ret.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
165	[BUG]  [BUGGY]  if(ret  ==  null  ||!ret.equals( " "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  ||!ret.equals( " "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||!ret.equals( " "))  {	  if(ret    ==    null    ||!ret.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
166	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.getIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.getIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.getIndex()  >  0)  {	  if(ret!=    null    &&    ret.initialIndex()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
167	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.getInitialIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.getInitialIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.getInitialIndex()  >  0)  {	  if(ret!=    null    &&    ret.initialIndex()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
168	[BUG]  [BUGGY]  ret.setIndex(startIndex,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(startIndex,  pos.getIndex());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(startIndex,  pos.getIndex());	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
169	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  If(ret!=  null  &&  ret.equals( "_   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "_   "))  {  If(ret!=  null  &&  ret.equals( "_   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "_   "))    {    If(ret!=  null  &&  ret.equals( "_   "))  {	  	non-compiled	[CE]  	11	None	add
170	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  If(ret!=  null  &&  ret.equals( "fraction   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "fraction   "))  {  If(ret!=  null  &&  ret.equals( "fraction   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "fraction   "))    {    If(ret!=  null  &&  ret.equals( "fraction   "))  {	  	non-compiled	[CE]  	9	None	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( ".false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( ".false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  AssertionFailedError  	53	4	replace
172	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( ".false "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( ".false "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( ".false "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  AssertionFailedError  	53	4	replace
173	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "* ")||  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "* ")||  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	8	replace
174	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "* ")||  ret.equals( "* "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "* ")||  ret.equals( "* "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "* ")||  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "*   "))    {    	compilable	  [FE]  NullPointerException  	40	8	replace
175	[BUG]  [BUGGY]  ret.parse(source,  pos,  new  ProperFractionFormat());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  new  ProperFractionFormat());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  new  ProperFractionFormat());	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
176	[BUG]  [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getDenominatorFormat().parse(source,  pos,  denominatorFormat);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
177	[BUG]  [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getDenominatorFormat().parse(source,  pos,  null);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
178	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  If(ret!=  null  &&  ret.equals( "false   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "false   "))  {  If(ret!=  null  &&  ret.equals( "false   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "false   "))    {    If(ret!=  null  &&  ret.equals( "false   "))  {	  	non-compiled	[CE]  	52	None	add
179	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  If(ret!=  null  &&  ret.equals( "-   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "-   "))  {  If(ret!=  null  &&  ret.equals( "-   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "-   "))    {    If(ret!=  null  &&  ret.equals( "-   "))  {	  	non-compiled	[CE]  	41	None	add
180	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  If(ret!=  null  &&  ret.equals( "*   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals(   "*   "))  {  If(ret!=  null  &&  ret.equals( "*   "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "*   "))    {    If(ret!=  null  &&  ret.equals( "*   "))  {	  	non-compiled	[CE]  	39	None	add
181	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(startIndex);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
182	[BUG]  [BUGGY]  Integer  ret  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  parseAndIgnoreWhitespace(source,  pos);	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
183	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(initialIndex);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(initialIndex);	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
184	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.nextIndex  <  0)  {  [CE]  cannot  find  symbol  nextIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.nextIndex  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.nextIndex  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  nextIndex	48	None	replace
185	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.getIndex()  <  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.getIndex()  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.getIndex()  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
186	[BUG]  [BUGGY]  ret.setIndex(initialIndex  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex  +  1);	  ret.setIndex(pos.initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
187	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
188	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( "__ "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret  ==  null  &&  ret.equals( "__ "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( "__ "))  {	  if(ret!=    null    &&    ret.equals(   "_   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
189	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos  +  1);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos  +  1);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
190	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos,  null);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos,  null);	  Integer    d    =    getDivisorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
191	[BUG]  [BUGGY]  ret  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  parseAndIgnoreWhitespace(source,  pos);	  ret    =    ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
192	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  null);  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  null);	  Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
193	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex,  d);	  ret.parseAndIgnoreWhitespace(source,    pos,    initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
194	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	parseAndIgnoreWhitespace(source,  pos.getIndex());	  parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
195	[BUG]  [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getDenominatorFormat().parse(source,  pos,  numeratorFormat);	  Integer    ret    =    getDenominatorFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
196	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  deseratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  deseratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  deseratorFormat);	  ret.parseAndIgnoreWhitespace(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
197	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.length()  <  =  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.length()  <  =  0)  {	  if(ret!=    null    &&    ret.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
198	[BUG]  [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  null);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ReflectionFormat.parseAndIgnoreWhitespace(source,  pos,  null);	  ReflectionFormat.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
199	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex()  -  2);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.getIndex()  -  2);	  ret.setIndex(initialIndex,    pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
200	[BUG]  [BUGGY]  ret.parse(source,  pos,  deseratorFormat,  numeratorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  pos,  deseratorFormat,  numeratorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  deseratorFormat,  numeratorFormat);	  ret.parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
201	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1,  denominatorFormat);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
202	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  1);	  Integer    ret    =    getReturnValueFormat().parse(source,    pos,    denominatorFormat);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
203	[BUG]  [BUGGY]  ret.parse(source,  null,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.parse(source,  null,  denominatorFormat);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  null,  denominatorFormat);	  ret.parse(source,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
204	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "false ")||  ret.equals( "null "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "false ")||  ret.equals( "null "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	8	replace
205	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "false ")||  ret.equals( "null "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.equals( "false ")||  ret.equals( "null "))  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "false ")||  ret.equals( "null "))  {	  if(ret!=    null    &&    ret.equals(   "false   "))    {    	compilable	  [FE]  NullPointerException  	53	8	replace
206	[BUG]  [BUGGY]  pos.setIndex(initialIndex,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  pos.setIndex(initialIndex,  pos.getIndex());  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(initialIndex,  pos.getIndex());	  pos.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
207	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  Integer  ret  =  getInitialIndex(pos.getIndex());  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(pos.getIndex());	  Integer    ret    =    getInitialIndex(pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  pos.getIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  pos.getIndex()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
209	[BUG]  [BUGGY]  if(ret!=  null  &&  pos.getIndex()  >  0)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  pos.getIndex()  >  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  pos.getIndex()  >  0)  {	  if(ret!=    null    &&    pos.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
210	[BUG]  [BUGGY]  ret.setIndex(pos.initialIndex  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  ret.setIndex(pos.initialIndex  +  1);  [BUGGY]      if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos.initialIndex  +  1);	  ret.setIndex(pos.initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
211	[BUG]  [BUGGY]  if(ret!=  null)  {  If(ret  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null)  {  If(ret  ==  null)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null)  {  If(ret  ==  null)  {	  if(ret    ==    null)    {    If(ret    ==    null)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
212	[BUG]  [BUGGY]  if(ret!=  null)  {  If(ret!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null)  {  If(ret!=  null)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null)  {  If(ret!=  null)  {	  if(ret    ==    null)    {    If(ret    ==    null)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
213	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.num  <  0)  {  [CE]  cannot  find  symbol  num  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);      [BUGGY]  if(ret!=  null  &&  ret.num  <  0)  {  [BUGGY]      return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.num  <  0)  {	  if(ret!=    null    &&    ret.initialIndex    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  num	48	None	replace
