bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  ||  ret.length()  >  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.length()  >  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  if(ret!=  null  &&  pos.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  pos.length()  >  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  pos.length()  >  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.length()  ==  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.length()  ==  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos  +  1);	      Integer    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
5	[BUG]  [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Number  ret  =  getReturnValueFormat().parse(source,  pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Number  ret  =  getReturnValueFormat().parse(source,  pos);	      Integer    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
6	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  null);	      Integer    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  ||  ret.equals( "   "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  ||  ret.equals( "   "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  NullPointerException  	12	5	replace
8	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.equals( "   "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  ||  ret.equals( "   "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.equals( "   "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  NullPointerException  	12	5	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "fraction "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "fraction "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
10	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "fraction "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "fraction "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "fraction "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "_ "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "_ "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
12	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "_ "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "_ "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "_ "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
13	[BUG]  [BUGGY]  ret.setIndex(pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.setIndex(pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos);	      ret.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
14	[BUG]  [BUGGY]  ret.setIndex(d);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.setIndex(d);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(d);	      ret.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
15	[BUG]  [BUGGY]  ret.setIndex(pos.initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.setIndex(pos.initialIndex);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos.initialIndex);	      ret.setIndex(initialIndex);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
16	[BUG]  [BUGGY]  ret.setIndex(pos.getIndex()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.setIndex(pos.getIndex()  -  1);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(pos.getIndex()  -  1);	      ret.setIndex(pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
17	[BUG]  [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex());  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.setIndex(initialIndex,  pos.getIndex());  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.setIndex(initialIndex,  pos.getIndex());	      ret.setIndex(pos.getIndex());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
18	[BUG]  [BUGGY]  ret.parse(source,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.parse(source,  null);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  null);	      ret.parse(source);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
19	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  denominatorFormat);	      ret.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
20	[BUG]  [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parseAndIgnoreWhitespace(source,  pos,  initialIndex);	      ret.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
21	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	parseAndIgnoreWhitespace(source,  pos);	      ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
22	[BUG]  [BUGGY]  ret.parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.parse(source,  pos,  denominatorFormat);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.parse(source,  pos,  denominatorFormat);	      ret.parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
23	[BUG]  [BUGGY]  if(ret  ==  null)  {  if(ret  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null)  {  if(ret  ==  null)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null)    {    if(ret  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
24	[BUG]  [BUGGY]  if(ret  ==  null)  {  if(ret!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null)  {  if(ret!=  null)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null)    {    if(ret!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
25	[BUG]  [BUGGY]  if(ret  ==  null)  {  If(ret  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null)  {  If(ret  ==  null)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null)    {    If(ret  ==  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
26	[BUG]  [BUGGY]  if(ret  ==  null)  {  if(ret  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null)  {  if(ret  >=  null)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret    ==    null)    {    if(ret  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
27	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( "   "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "   "))    {    if(ret!=  null  &&  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
28	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret!=  null  &&  ret.equals( ".   "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "   "))    {    if(ret!=  null  &&  ret.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
29	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals(   "   "))  {  if(ret  ==  null  &&  ret.equals( "   "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=    null    &&    ret.equals(   "   "))    {    if(ret  ==  null  &&  ret.equals( "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
30	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  ||  ret.length()  ==  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.length()  ==  0)  {	  if(ret    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
31	[BUG]  [BUGGY]  if(ret  ==  null  ||  ret.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  ||  ret.getType()  ==  Token.NUMBER)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||  ret.getType()  ==  Token.NUMBER)  {	  if(ret    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
32	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getInitialIndex()  +  1;  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex()  +  1;	      Integer    ret    =    getInitialIndex();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
33	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getInitialIndex()  -  1;  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex()  -  1;	      Integer    ret    =    getInitialIndex();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
34	[BUG]  [BUGGY]  Integer  ret  =  getInitialIndex(pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getInitialIndex(pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getInitialIndex(pos);	      Integer    ret    =    getInitialIndex();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
35	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  pos.setIndex(initialIndex);  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	pos.setIndex(initialIndex);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
36	[BUG]  [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ReflectionFormat.parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ReflectionFormat.parseAndIgnoreWhitespace(source,  pos);	      ret.parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  &&  ret.equals( " "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret  ==  null  &&  ret.equals( " "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
38	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.equals( " "))  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  &&  ret.equals( " "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.equals( " "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  NullPointerException  	12	8	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "* "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
40	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "* "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "* "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "* "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "- "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
42	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "- "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "- "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "- "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
43	[BUG]  [BUGGY]  if(ret  ==  null  &&  ret.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  &&  ret.length()  >  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  &&  ret.length()  >  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
44	[BUG]  [BUGGY]  if(ret!=  null  ||  ret.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  ||  ret.length()  ==  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  ||  ret.length()  ==  0)  {	  if(ret    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
45	[BUG]  [BUGGY]  ret  =  ret.parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret  =  ret.parse(source,  pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret  =  ret.parse(source,  pos);	      ret.parse(source);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
46	[BUG]  [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getDenominatorFormat().parse(source,  pos);	      Integer    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
47	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.initialIndex()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.initialIndex()  >  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.initialIndex()  >  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
48	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.initialIndex  <  0)  {  [CE]  cannot  find  symbol  initialIndex  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.initialIndex  <  0)  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.initialIndex  <  0)  {	  if(ret!=    null    &&    ret.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	10	None	replace
49	[BUG]  [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    if  (ret  !=  null)  {  return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  ret  =  getReturnValueFormat().parse(source,  pos,  denominatorFormat);	      Integer    ret    =    getReturnValueFormat().parse(source,    pos);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
50	[BUG]  [BUGGY]  if(ret  ==  null  ||!ret.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  ||!ret.isEmpty())  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||!ret.isEmpty())  {	  if(ret    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
51	[BUG]  [BUGGY]  if(ret  ==  null  ||!ret.isFunction())  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret  ==  null  ||!ret.isFunction())  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret  ==  null  ||!ret.isFunction())  {	  if(ret    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "false "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	add	if(ret!=  null  &&  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
53	[BUG]  [BUGGY]  if(ret!=  null  &&  ret.equals( "false "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  if(ret!=  null  &&  ret.equals( "false "))  {  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	if(ret!=  null  &&  ret.equals( "false "))  {	  if(ret!=    null    &&    ret.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	12	4	replace
54	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos);  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
55	[BUG]  [BUGGY]  ret.initialIndex  =  pos.getIndex();  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  ret.initialIndex  =  pos.getIndex();  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	ret.initialIndex  =  pos.getIndex();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
56	[BUG]  [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);    [BUGGY]  Integer  d  =  getDivisorFormat().parse(source,  pos);  [BUGGY]    return  ret;  }  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.35355339059327373	133	133	1	replace	Integer  d  =  getDivisorFormat().parse(source,  pos);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
