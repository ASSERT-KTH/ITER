bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.getIndex()  -  1;	  int    initialIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
2	[BUG]  [BUGGY]  int  posIndex  =  source.indexOf('.');  [CE]  cannot  find  symbol  initialIndex  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  source.indexOf('.');  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  source.indexOf('.');	      int    posIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	12	None	replace
3	[BUG]  [BUGGY]  int  posIndex  =  source.indexOf(':');  [CE]  cannot  find  symbol  initialIndex  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  source.indexOf(':');  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  source.indexOf(':');	      int    posIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	12	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	int  initialIndex  =  source.length();	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
5	[BUG]  [BUGGY]  int  initialIndex  =  source.length();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.length();	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.indexOf('.');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	int  initialIndex  =  source.indexOf('.');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
7	[BUG]  [BUGGY]  int  initialIndex  =  source.indexOf('.');  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.indexOf('.');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.indexOf('.');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
8	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  denominatorFormat);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	15	None	replace
9	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  null);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  null);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
10	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos  +  1);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	15	None	replace
11	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  [CE]  cannot  find  symbol  initialIndex  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  source.length()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  source.length()  +  1;	      int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	14	None	replace
12	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  [CE]  cannot  find  symbol  initialIndex  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  source.length()  -  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  source.length()  -  1;	      int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	14	None	replace
13	[BUG]  [BUGGY]  int  n  =  pos.length();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  pos.length();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  pos.length();	      int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
14	[BUG]  [BUGGY]  int  posIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  initialIndex  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  pos.getIndex()  +  1;	      int    posIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	17	None	replace
15	[BUG]  [BUGGY]  int  posIndex  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  initialIndex  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  pos.getIndex()  -  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  pos.getIndex()  -  1;	      int    posIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	17	None	replace
16	[BUG]  [BUGGY]  Integer  pos  =  getInitialIndex()  +  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  pos  =  getInitialIndex()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  pos  =  getInitialIndex()  +  1;	      Integer    pos    =    getInitialIndex();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
17	[BUG]  [BUGGY]  Integer  pos  =  getInitialIndex()  -  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  pos  =  getInitialIndex()  -  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  pos  =  getInitialIndex()  -  1;	      Integer    pos    =    getInitialIndex();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
18	[BUG]  [BUGGY]  int  pos  =  getInitialIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  pos  =  getInitialIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  pos  =  getInitialIndex();	      Integer    pos    =    getInitialIndex();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
19	[BUG]  [BUGGY]  int  n  =  pos.getIndex();  [CE]  cannot  find  symbol  initialIndex  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  pos.getIndex();	      int    n    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	18	None	replace
20	[BUG]  [BUGGY]  int  n  =  source.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  source.getIndex()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  source.getIndex()  +  1;	      int    n    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	2	1	add
22	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	2	1	add
23	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  int  pos.setIndex(pos.getIndex());  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  int  pos.setIndex(pos.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    int  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  ';'  expected	2	None	add
24	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  this.denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  this.denominatorFormat  =  getDenominatorFormat().parse(source,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  this.denominatorFormat  =  getDenominatorFormat().parse(source,  pos);	  	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	2	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
26	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
27	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  this.numeratorFormat  =  getNumeratorFormat().parse(source,  pos);  [CE]  numeratorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  this.numeratorFormat  =  getNumeratorFormat().parse(source,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  this.numeratorFormat  =  getNumeratorFormat().parse(source,  pos);	  	non-compiled	[CE]  numeratorFormat  has  private  access  in  FractionFormat	2	None	add
28	[BUG]  [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  pos.getIndex();  [CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        int    posIndex    =    pos.getIndex();    int  posIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
29	[BUG]  [BUGGY]      int  posIndex  =  pos.getIndex();  Int  posIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  Int  posIndex  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        int    posIndex    =    pos.getIndex();    Int  posIndex  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  posIndex  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	        int    posIndex    =    pos.getIndex();    posIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	16	1	add
31	[BUG]  [BUGGY]      int  posIndex  =  pos.getIndex();  posIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  posIndex  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        int    posIndex    =    pos.getIndex();    posIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	16	1	add
32	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  initialIndex  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(pos.getIndex()  +  1);	      pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  initialIndex	3	None	replace
33	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  initialIndex  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(pos.getIndex()  -  1);	      pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  initialIndex	3	None	replace
34	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [CE]  cannot  find  symbol  initialIndex  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(pos.getIndex()  +  2);	      pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  initialIndex	3	None	replace
35	[BUG]  [BUGGY]  pos.setIndex(d);  [CE]  cannot  find  symbol  d  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(d);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(d);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  d	4	None	replace
36	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(startIndex);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	4	None	replace
37	[BUG]  [BUGGY]  pos.setIndex(n);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(n);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(n);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
38	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  null);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  null);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  null);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
39	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  pos);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  pos);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
40	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [CE]  denominatorFormat  has  private  access  in  FractionFormat  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  getNumberFormat().parse(source,  pos,  denominatorFormat);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  denominatorFormat  has  private  access  in  FractionFormat	1	None	replace
41	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.getIndex()  +  1;	  int    initialIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
42	[BUG]  [BUGGY]  int  posIndex  =  getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  getIndex()  -  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  getIndex()  -  1;	      int    posIndex    =    getIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]  int  posIndex  =  getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  getIndex()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  getIndex()  +  1;	      int    posIndex    =    getIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
44	[BUG]  [BUGGY]  int  posIndex  =  getIndex(pos);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  getIndex(pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  getIndex(pos);	      int    posIndex    =    getIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
45	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    int  initialIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	add
46	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    int  pos  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	10	None	add
47	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Integer  initialIndex  =  pos.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Integer  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    Integer  initialIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	add
48	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  pos.getIndex()  -  1;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    int  pos.getIndex()  -  1;	  	non-compiled	[CE]  ';'  expected	10	None	add
49	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  startIndex  =  source.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  startIndex  =  source.getIndex();	      int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
50	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  initialIndex  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  startIndex  =  pos.getIndex()  +  1;	      int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	5	None	replace
51	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  initialIndex  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  startIndex  =  pos.getIndex()  -  1;	      int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	5	None	replace
52	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    int  initialIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
53	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    int  pos  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
54	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Integer  initialIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Integer  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    Integer  initialIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
55	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    int  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.indexOf('  ');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	int  initialIndex  =  source.indexOf('  ');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
57	[BUG]  [BUGGY]  int  initialIndex  =  source.indexOf('  ');  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.indexOf('  ');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.indexOf('  ');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
58	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos;	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  ')'  expected	15	None	replace
59	[BUG]  [BUGGY]  int  n  =  this.source.getIndex();  [CE]  cannot  find  symbol  source  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  this.source.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  this.source.getIndex();	      int    n    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  source	18	None	replace
60	[BUG]  [BUGGY]  pos.setIndex(source.getIndex());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(source.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(source.getIndex());	      pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
61	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  startIndex  =  pos.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  int  startIndex  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    int  startIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	add
62	[BUG]  [BUGGY]  Integer  pos  =  getIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  pos  =  getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  pos  =  getIndex();	      Integer    pos    =    getInitialIndex();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
63	[BUG]  [BUGGY]  int  n  =  source.length()  -  2;  [CE]  cannot  find  symbol  initialIndex  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  source.length()  -  2;  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  source.length()  -  2;	      int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	14	None	replace
64	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  pos.getIndex()  +  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    int  pos.getIndex()  +  1;	  	non-compiled	[CE]  ';'  expected	8	None	add
65	[BUG]  [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  getNumberFormat().parse(source,  pos  +  1);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  getNumberFormat().parse(source,  pos  +  1);	      int    n    =    getNumberFormat().parse(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	Integer  initialIndex  =  pos.getIndex();	  int    initialIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
67	[BUG]  [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  initialIndex  =  pos.getIndex();	  int    initialIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
68	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  Integer  pos.setIndex(pos.getIndex());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  Integer  pos.setIndex(pos.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    Integer  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  ';'  expected	2	None	add
69	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  Integer  pos  =  getIndex(pos.getIndex());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  Integer  pos  =  getIndex(pos.getIndex());  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    Integer  pos  =  getIndex(pos.getIndex());	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  int  index  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	        pos.setIndex(pos.getIndex());    int  index  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	2	1	add
71	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  int  index  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  int  index  =  pos.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    int  index  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	2	1	add
72	[BUG]  [BUGGY]      pos.setIndex(pos.getIndex());  int  pos  =  getIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      pos.setIndex(pos.getIndex());  int  pos  =  getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        pos.setIndex(pos.getIndex());    int  pos  =  getIndex();	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
73	[BUG]  [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  Integer  d  =  getDimensionFormat().parse(source,  pos,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	Integer  d  =  getDimensionFormat().parse(source,  pos,  pos);	      Integer    d    =    getDimensionFormat().parse(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
74	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Int  initialIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    Int  initialIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
75	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Int  int  initialIndex  =  pos.getIndex()  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  Int  int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    Int  int  initialIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
76	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  position.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  position.getIndex()  +  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    +    1;    int  initialIndex  =  position.getIndex()  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
77	[BUG]  [BUGGY]  pos.setIndex(index);  [CE]  cannot  find  symbol  index  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(index);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(index);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  index	4	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.lastIndexOf('.');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	add	int  initialIndex  =  source.lastIndexOf('.');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
79	[BUG]  [BUGGY]  int  initialIndex  =  source.lastIndexOf('.');  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  source.lastIndexOf('.');  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  initialIndex  =  source.lastIndexOf('.');	  int    initialIndex    =    source.getIndex();    	compilable	  [FE]  AssertionFailedError  	7	3	replace
80	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  initialIndex  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  n  =  source.lastIndexOf('.');  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  n  =  source.lastIndexOf('.');	      int    n    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	18	None	replace
81	[BUG]  [BUGGY]  int  posIndex  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  initialIndex  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  posIndex  =  source.lastIndexOf('.');  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int  posIndex  =  source.lastIndexOf('.');	      int    posIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol  initialIndex	12	None	replace
82	[BUG]  [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        int    posIndex    =    pos.getIndex();    int  posIndex  =  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
83	[BUG]  [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  position.getIndex();  [CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]      int  posIndex  =  pos.getIndex();  int  posIndex  =  position.getIndex();  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	        int    posIndex    =    pos.getIndex();    int  posIndex  =  position.getIndex();	  	non-compiled	[CE]  variable  posIndex  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
84	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  *  2);  [CE]  cannot  find  symbol  initialIndex  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  pos.setIndex(pos.getIndex()  *  2);  [BUGGY]    int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	pos.setIndex(pos.getIndex()  *  2);	      pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  initialIndex	3	None	replace
85	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Int  initialIndex  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    Int  initialIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
86	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Int  int  initialIndex  =  pos.getIndex()  -  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  parse(String  source,  ParsePosition  pos)  {  Fraction  ret  =  super.parse(source,  pos);  if  (ret  !=  null)  {  return  ret;  }    [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  Int  int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  whole  =  getWholeFormat().parse(source,  pos);  if  (whole  ==  null)  {    [CLASS]  ProperFractionFormat  [METHOD]  parse  [RETURN_TYPE]  Fraction  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  	projects/Math106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java	0.4472135954999579	137	137	1	replace	int    initialIndex    =    pos.getIndex()    -    1;    Int  int  initialIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
