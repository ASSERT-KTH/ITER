bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)compiler.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)compiler.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)compiler.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)protocol.clone();    	non-compiled	[CE]  ';'  expected	8	None	replace
2	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t1);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t1);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copy();    prototype.storeTime(t1);    	non-compiled	[CE]  ';'  expected	26	None	replace
3	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	18	None	replace
4	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	18	None	replace
5	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	18	None	replace
6	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	18	None	replace
7	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.get();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.get();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.get();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.get();    	non-compiled	[CE]  ';'  expected	44	None	replace
8	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)stages.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)stages.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)stages.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)stages;    	non-compiled	[CE]  ';'  expected	42	None	replace
9	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)stages;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)stages;  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)stages;	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)stages;    	non-compiled	[CE]  ';'  expected	42	None	replace
10	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  ';'  expected	14	None	replace
11	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.copy();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.copy();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.copy();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.copy();    	non-compiled	[CE]  ';'  expected	3	None	replace
12	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents().size()  ]);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents().size()  ]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents().size()  ]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	23	None	replace
13	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  a,  t0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  a,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  a,  t0);	  rki.reinitialize(this,    yDotK,    a,    t0);    	non-compiled	[CE]  ';'  expected	4	None	replace
14	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  a,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  a,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  a,  t0);	  rki.reinitialize(this,    yDotK,    a,    t0);    	non-compiled	[CE]  ';'  expected	4	None	replace
15	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  a,  stepStart);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yDotK,  a,  stepStart);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yDotK,  a,  stepStart);	  rki.reinitialize(this,    yDotK,    a,    t0);    	non-compiled	[CE]  ';'  expected	4	None	replace
16	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  a,  t0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y1,  a,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y1,  a,  t0);	  rki.reinitialize(this,    yDotK,    a,    t0);    	non-compiled	[CE]  ';'  expected	4	None	replace
17	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	17	None	replace
18	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager()  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager()  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager()	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	17	None	replace
19	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  yDotK,  t0);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
20	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  t0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y1,  yDotK,  t0);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
21	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stages);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stages);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  yDotK,  stages);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
22	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stages);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stages);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  yDotK,  stages);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
23	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)c.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.clone();    	non-compiled	[CE]  ';'  expected	24	None	replace
24	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.module.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.module.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.module.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  ';'  expected	37	None	replace
25	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.get();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.get();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.get();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  ';'  expected	37	None	replace
26	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)module.copy();    	non-compiled	[CE]  ';'  expected	29	None	replace
27	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getE	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	47	None	replace
28	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	47	None	replace
29	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	47	None	replace
30	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.clone();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
31	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyBoolean();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyBoolean();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyBoolean();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
32	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(this);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(this);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(this);	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
33	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getInstance().clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getInstance().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getInstance().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)manager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	48	None	replace
34	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getStandardEvents().clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getStandardEvents().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getStandardEvents().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)manager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	48	None	replace
35	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getAncestor().clone();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getAncestor().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getAncestor().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)manager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	48	None	replace
36	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.clone();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)c.copy();    	non-compiled	[CE]  ';'  expected	12	None	replace
37	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.remove();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.remove();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.remove();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)c.copy();    	non-compiled	[CE]  ';'  expected	12	None	replace
38	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	19	None	replace
39	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyReal();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyReal();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyReal();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  ';'  expected	9	None	replace
40	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstance(c);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstance(c);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstance(c);	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  ';'  expected	9	None	replace
41	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyBoolean();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyBoolean();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyBoolean();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
43	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getCurrentEventsManager();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getCurrentEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getCurrentEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
44	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)currentEventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)currentEventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)currentEventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
45	[BUG]  [BUGGY]  rki  =(RangeKuttaStepInterpolator)super.clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RangeKuttaStepInterpolator)super.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RangeKuttaStepInterpolator)super.clone();	  rki    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  ';'  expected	50	None	replace
46	[BUG]  [BUGGY]  rki  =(RicheKuttaStepInterpolator)super.clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RicheKuttaStepInterpolator)super.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RicheKuttaStepInterpolator)super.clone();	  rki    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  ';'  expected	50	None	replace
47	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove();    	non-compiled	[CE]  ';'  expected	45	None	replace
48	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove();    	non-compiled	[CE]  ';'  expected	45	None	replace
49	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.clone();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.clone();    	non-compiled	[CE]  ';'  expected	13	None	replace
50	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(interpolator);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(interpolator);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(interpolator);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.get(prototype);    	non-compiled	[CE]  ';'  expected	16	None	replace
51	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.get(prototype);    	non-compiled	[CE]  ';'  expected	16	None	replace
52	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0,  prototype);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0,  prototype);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0,  prototype);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.get(prototype);    	non-compiled	[CE]  ';'  expected	16	None	replace
53	[BUG]  [BUGGY]  rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();	  rki    =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	51	None	replace
54	[BUG]  [BUGGY]  rki  =(RicheKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RicheKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RicheKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();	  rki    =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	51	None	replace
55	[BUG]  [BUGGY]  rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RangeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();	  rki    =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	51	None	replace
56	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  a,  b);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  a,  b);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  a,  b);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
57	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  a,  stages);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yDotK,  a,  stages);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yDotK,  a,  stages);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
58	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  a,  c);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yDotK,  a,  c);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yDotK,  a,  c);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
59	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(y0.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
60	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0.length  -  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0.length  -  1);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0.length  -  1);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(y0.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
61	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove(y0.length);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove(y0.length);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.remove(y0.length);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(y0.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
62	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler    	non-compiled	[CE]  ';'  expected	31	None	replace
63	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler    	non-compiled	[CE]  ';'  expected	31	None	replace
64	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler    	non-compiled	[CE]  ';'  expected	31	None	replace
65	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler(c).  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler(c).  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler(c).	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler    	non-compiled	[CE]  ';'  expected	31	None	replace
66	[BUG]  [BUGGY]  if(c.length  >  0)  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t0);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  if(c.length  >  0)  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t0);  }  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	if(c.length  >  0)  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t0);  }	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.copy();    prototype.storeTime(t0);    	non-compiled	[CE]  ';'  expected	11	None	replace
67	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(y0,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(y0,  c.length);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(y0,  c.length);	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)super.copy(y0.length);    	non-compiled	[CE]  ';'  expected	38	None	replace
68	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RangeKuttaStepInterpolator)super.copy(y0,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RangeKuttaStepInterpolator)super.copy(y0,  c.length);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RangeKuttaStepInterpolator)super.copy(y0,  c.length);	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)super.copy(y0.length);    	non-compiled	[CE]  ';'  expected	38	None	replace
69	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.clone();  prototype.storeTime(t0);  [CE]  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.clone();  prototype.storeTime(t0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.clone();  prototype.storeTime(t0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    prototype.storeTime(t0);    	non-compiled	[CE]  	10	None	replace
70	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stepStart);  [CE]  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stepStart);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  yDotK,  stepStart);	  rki.reinitialize(this,    yDotK,    t0);    	non-compiled	[CE]  	35	None	replace
71	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.reset();  [CE]  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.reset();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.reset();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.prototype.clone();    	non-compiled	[CE]  	25	None	replace
72	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)c.reset();  [CE]  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)c.reset();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)c.reset();	  final    RungeKuttaStepInterpolator    rki    =(RungeKuttaStepInterpolator)prototype.reset();    	non-compiled	[CE]  	34	None	replace
73	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.stages;  [CE]  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.stages;  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.stages;	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stages;    	non-compiled	[CE]  	2	None	replace
74	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [CE]  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEvents().toArray(new    RungeKuttaStepInterpolator[stages]);    	non-compiled	[CE]  	39	None	replace
75	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)eventsManager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [CE]  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)eventsManager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)eventsManager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEvents().toArray(new    RungeKuttaStepInterpolator[stages]);    	non-compiled	[CE]  	39	None	replace
76	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(y0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(y0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(y0);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
77	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stages);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stages);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
78	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(0);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
79	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(c);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(c);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(c);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
80	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(stages);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(stages);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(stages);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(stages);    	non-compiled	[CE]  ';'  expected	46	None	replace
81	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(c);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(c);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(c);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(stages);    	non-compiled	[CE]  ';'  expected	46	None	replace
82	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(c);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(c);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(c);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyInstances();    	non-compiled	[CE]  ';'  expected	15	None	replace
83	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().instance;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().instance;  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().instance;	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
84	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	30	None	replace
85	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEvents	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	30	None	replace
86	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresInput();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresInput();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresInput();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)requiresDenseInput();    	non-compiled	[CE]  ';'  expected	1	None	replace
87	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesInput();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesInput();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesInput();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)requiresDenseInput();    	non-compiled	[CE]  ';'  expected	1	None	replace
88	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)conditionsOutput();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)conditionsOutput();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)conditionsOutput();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)conditionsInput();    	non-compiled	[CE]  ';'  expected	52	None	replace
89	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyReal();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyReal();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyReal();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
90	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstances();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstances();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstances();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
91	[BUG]  [BUGGY]  rki  =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();	  rki    =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	51	None	replace
92	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.size()  ]);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.size()  ]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.size()  ]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	23	None	replace
93	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.reset();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.reset();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.reset();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.clone();    	non-compiled	[CE]  ';'  expected	13	None	replace
94	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsHandlersManager().clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsHandlersManager().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsHandlersManager().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
95	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().withShape(stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().withShape(stages);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().withShape(stages);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
96	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().interpolate(this);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().interpolate(this);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().interpolate(this);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
97	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.interpolator();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.interpolator();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.interpolator();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)c.copy();    	non-compiled	[CE]  ';'  expected	12	None	replace
98	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEvents().toArray(new    RungeKuttaStepInterpolator[stages]);    	non-compiled	[CE]  ';'  expected	39	None	replace
99	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.remove(prototype);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.remove(prototype);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.remove(prototype);	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.remove();    	non-compiled	[CE]  ';'  expected	41	None	replace
100	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)this.stages;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)this.stages;  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)this.stages;	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stages;    	non-compiled	[CE]  ';'  expected	2	None	replace
101	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  a,  b);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  a,  b);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  a,  b);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
102	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  a,  b);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y1,  a,  b);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y1,  a,  b);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
103	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  t0);	  rki.reinitialize(this,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	35	None	replace
104	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  t0);	  rki.reinitialize(this,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	35	None	replace
105	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  stages);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yDotK,  t0,  stages);	  rki.reinitialize(this,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	35	None	replace
106	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	19	None	replace
107	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	19	None	replace
108	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().get	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	30	None	replace
109	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstances();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstances();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyInstances();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  ';'  expected	9	None	replace
110	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyOf(y0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyOf(y0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copyOf(y0);	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  ';'  expected	9	None	replace
111	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getCurrentEvents().clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getCurrentEvents().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getCurrentEvents().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)manager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	48	None	replace
112	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getTreeEvents().clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getTreeEvents().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)manager.getTreeEvents().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)manager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	48	None	replace
113	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsHandler	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	47	None	replace
114	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove(y0.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove(y0.length);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove(y0.length);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.prototype.clone();    	non-compiled	[CE]  ';'  expected	25	None	replace
115	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)protocol.clone();    	non-compiled	[CE]  ';'  expected	8	None	replace
116	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(stages);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(stages);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyInstances();    	non-compiled	[CE]  ';'  expected	15	None	replace
117	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getInstances();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getInstances();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getInstances();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyInstances();    	non-compiled	[CE]  ';'  expected	15	None	replace
118	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(y0);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(y0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInstances(y0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyInstances();    	non-compiled	[CE]  ';'  expected	15	None	replace
119	[BUG]  [BUGGY]  rki  =(RungeKuttaStepInterpolator)super.get();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RungeKuttaStepInterpolator)super.get();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RungeKuttaStepInterpolator)super.get();	  rki    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  ';'  expected	50	None	replace
120	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(y0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(y0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(y0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    prototype.storeTime(t0);    	non-compiled	[CE]  ';'  expected	10	None	replace
121	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get(0);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get(0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get(0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stages.clone();    	non-compiled	[CE]  ';'  expected	53	None	replace
122	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stages.get();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stages.clone();    	non-compiled	[CE]  ';'  expected	53	None	replace
123	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)conditionsInput();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)conditionsInput();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)conditionsInput();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)conditionsInput();    	non-compiled	[CE]  ';'  expected	52	None	replace
124	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(stages,  y0.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(stages,  y0.length);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.copy(stages,  y0.length);	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)super.copy(y0.length);    	non-compiled	[CE]  ';'  expected	38	None	replace
125	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copy(stages,  y0.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copy(stages,  y0.length);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.copy(stages,  y0.length);	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)super.copy(y0.length);    	non-compiled	[CE]  ';'  expected	38	None	replace
126	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
127	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getInstanceManager().getCurrentEventsManager();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getInstanceManager().getCurrentEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getInstanceManager().getCurrentEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
128	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStandardEventsManager();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStandardEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStandardEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
129	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove(module);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove(module);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)module.remove(module);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  ';'  expected	37	None	replace
130	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.get();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.get();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.get();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.clone();    	non-compiled	[CE]  ';'  expected	24	None	replace
131	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(requiresDenseOutput());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(requiresDenseOutput());  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(requiresDenseOutput());	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(stages);    	non-compiled	[CE]  ';'  expected	46	None	replace
132	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.remove(y0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(stages);    	non-compiled	[CE]  ';'  expected	46	None	replace
133	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t1);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.copy();  prototype.storeTime(t1);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.copy();    prototype.storeTime(t0);    	non-compiled	[CE]  ';'  expected	11	None	replace
134	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialize();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialize();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialize();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyReal();    	non-compiled	[CE]  ';'  expected	43	None	replace
135	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialization();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialization();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInitialization();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyReal();    	non-compiled	[CE]  ';'  expected	43	None	replace
136	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresOutput();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresOutput();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)requiresOutput();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)requiresDenseInput();    	non-compiled	[CE]  ';'  expected	1	None	replace
137	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stepStart);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stepStart);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stepStart);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
138	[BUG]  [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stage);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stage);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Integer  rki  =(Integer)eventsHandlersManager.getEvents().get(stage);	  Integer    rki    =(Integer)eventsHandlersManager.getEvents().get(t0);    	non-compiled	[CE]  ';'  expected	36	None	replace
139	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.initialize(this,  y0,  yDotK,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.initialize(this,  y0,  yDotK,  t0);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
140	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0,  yDotK);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  y0,  t0,  yDotK);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  y0,  t0,  yDotK);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
141	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.remove();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.prototype.clone();    	non-compiled	[CE]  ';'  expected	25	None	replace
142	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.remove();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.remove();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.remove();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove();    	non-compiled	[CE]  ';'  expected	45	None	replace
143	[BUG]  [BUGGY]  rki.reinitialize(this,  c,  yDotK,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  c,  yDotK,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  c,  yDotK,  t0);	  rki.reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	5	None	replace
144	[BUG]  [BUGGY]  rki  =(RhineKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki  =(RhineKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki  =(RhineKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();	  rki    =(RungeKuttaStepInterpolator)this.eventsManager.getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	51	None	replace
145	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentTaintEventsManager();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentTaintEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentTaintEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
146	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStructuredEventsManager();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStructuredEventsManager();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentStructuredEventsManager();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEventsManager().getEventsManager().getEventsManager().getCurrentEventsManager();    	non-compiled	[CE]  ';'  expected	32	None	replace
147	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length  -  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length  -  1);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(y0.length  -  1);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(y0.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
148	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)c.getEventsManager().getEventsManager().getEventsManager().getEventsManager().getEventsManager();    	non-compiled	[CE]  ';'  expected	18	None	replace
149	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(steps);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(steps);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(steps);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.remove(stages);    	non-compiled	[CE]  ';'  expected	46	None	replace
150	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t0,  c);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t0,  c);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.clone();  prototype.storeTime(t0,  c);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    prototype.storeTime(t0);    	non-compiled	[CE]  ';'  expected	10	None	replace
151	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEvents().toArray(new  RungeKuttaStepInterpolator[stages]);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)eventsManager.getEvents().toArray(new    RungeKuttaStepInterpolator[stages]);    	non-compiled	[CE]  ';'  expected	39	None	replace
152	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  c);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  c);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.get(prototype);    	non-compiled	[CE]  ';'  expected	16	None	replace
153	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  stages);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  stages);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get(prototype,  stages);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.get(prototype);    	non-compiled	[CE]  ';'  expected	16	None	replace
154	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.removeInstances();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.removeInstances();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.removeInstances();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyInstances();    	non-compiled	[CE]  ';'  expected	15	None	replace
155	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  yTmp,  yDotK);	  rki.reinitialize(this,    yDotK,    t0);    	non-compiled	[CE]  ';'  expected	35	None	replace
156	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  a,  b);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.initialize(this,  yTmp,  a,  b);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.initialize(this,  yTmp,  a,  b);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
157	[BUG]  [BUGGY]  rki.reinitialize(this,  c,  a,  b);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.reinitialize(this,  c,  a,  b);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.reinitialize(this,  c,  a,  b);	  rki.reinitialize(this,    yDotK,    a,    b);    	non-compiled	[CE]  ';'  expected	7	None	replace
158	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.remove();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.remove();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.remove();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
159	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(c);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(c);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)interpolator.copyInstance(c);	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)interpolator.copy();    	non-compiled	[CE]  ';'  expected	40	None	replace
160	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RhineKuttaStepInterpolator)c.clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RhineKuttaStepInterpolator)c.clone();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RhineKuttaStepInterpolator)c.clone();	  final    RungeKuttaStepInterpolator    rki    =(RungeKuttaStepInterpolator)c.clone();    	non-compiled	[CE]  ';'  expected	20	None	replace
161	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInjectables();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInjectables();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copyInjectables();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copyReal();    	non-compiled	[CE]  ';'  expected	43	None	replace
162	[BUG]  [BUGGY]  static  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.get();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  static  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.get();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	static  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)c.get();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)c.get();    	non-compiled	[CE]  ';'  expected	27	None	replace
163	[BUG]  [BUGGY]  Final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  Final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	Final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	23	None	replace
164	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents()  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents()  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().toArray(new  RungeKuttaStepInterpolator[this.stagesManager.getEvents()	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)this.stagesManager.getEvents().clone();    	non-compiled	[CE]  ';'  expected	23	None	replace
165	[BUG]  [BUGGY]  if(super.copy())  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();  prototype.storeTime(t1);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  if(super.copy())  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();  prototype.storeTime(t1);  }  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	if(super.copy())  {  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();  prototype.storeTime(t1);  }	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.copy();    prototype.storeTime(t1);    	non-compiled	[CE]  ';'  expected	26	None	replace
166	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)this.stages.get();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)this.stages.get();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)this.stages.get();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.get();    	non-compiled	[CE]  ';'  expected	44	None	replace
167	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.get();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.get();  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)super.get();	  final    RungeKuttaStepInterpolator    rki    =(RangeKuttaStepInterpolator)prototype.get();    	non-compiled	[CE]  ';'  expected	44	None	replace
168	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().getInstance();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().getInstance();  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().getInstance();	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
169	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(0);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(0);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
170	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(this);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(this);  [BUGGY]      final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.getEventsManager().remove(this);	  final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.getEventsManager().clone();    	non-compiled	[CE]  ';'  expected	49	None	replace
171	[BUG]  [BUGGY]  rki.initialize(this,  y0,  a,  t0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {      [BUGGY]  rki.initialize(this,  y0,  a,  t0);  [BUGGY]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	213	213	1	replace	rki.initialize(this,  y0,  a,  t0);	  rki.reinitialize(this,    yDotK,    a,    t0);    	non-compiled	[CE]  ';'  expected	4	None	replace
