projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=b+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=maxGrowth;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0/getOrder());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minGrowth;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.c=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=fsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=prototype.getBooleanValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.prototype=prototype;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.prototype=prototype;setSafety(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorc:prototype.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0/getOrder()+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0/getScale());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minGrowth-1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minGrowth+10.0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=b+2;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=b*1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.c=c+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.c=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=newdouble[Math.abs(minStep)][Math.abs(maxStep)];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=newdouble[Math.abs(minStep)][Math.abs(scalAbsoluteTolerance)];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth+10.0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth-minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth+minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=maxGrowth-minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorb:c){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b!=null){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorc:prototype.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b!=null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b==null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=scalAbsoluteTolerance;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c==null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0-minStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.c=c+minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minGrowth+maxGrowth;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=c+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=maxGrowth+minStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0/getOrder()+10.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0/getMaxGrowth());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=b.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorc:c.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorc:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.b=B;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null&&c.length>0){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.c=c+2;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b!=null){for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(2.0/getOrder());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=gsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth/getOrder();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.maxGrowth=maxGrowth-10.0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121b=b.toString();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b!=null){for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorb:c.get()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(b!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121for(RungeKuttaStepInterpolatorb:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121if(c!=null&&c.getRuns()!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121this.minGrowth=minGrowth-10.0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java121setSafety(1.0-10.0);
