bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Interpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    Interpolator  interpolator  =  manager.getInterpolator();  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    Interpolator  interpolator  =  manager.getInterpolator();		non-compiled	[CE]  illegal  start  of  expression	94	None	add
2	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
3	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
4	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
5	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
6	[BUG]  [BUGGY]  while  (!firstTime)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!firstTime)  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
7	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!firstTime  &&!lastStep)  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
8	[BUG]  [BUGGY]  while  (!lastTime)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastTime)  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
9	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  k);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  k);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  k);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
10	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
11	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
12	[BUG]  [BUGGY]    double  firstTime  =  t0.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    double  firstTime  =  t0.doubleValue();  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    double  firstTime  =  t0.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	94	None	add
13	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0))  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  t0))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
14	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
15	[BUG]  [BUGGY]  while  (!lastStep  &&(t0  ==  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastStep  &&(t0  ==  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]    interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0  ==  t0  ||  t0  ==  t.getNext()))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
16	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
17	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
18	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t[k]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t[k]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
19	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y0,  t);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
20	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	    if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	94	None	add
