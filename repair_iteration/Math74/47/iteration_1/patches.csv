bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  while  (!firstTime  &&!lastTime)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  &&!lastTime)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastTime)  {	  while    (!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  double  firstTime  =  t0.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  double  firstTime  =  t0.doubleValue()  +  1;  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  t0.doubleValue()  +  1;	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  double  firstTime  =  handler.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  double  firstTime  =  handler.doubleValue();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  handler.doubleValue();	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  boolean  firstTime  =  t0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  boolean  firstTime  =  t0.doubleValue();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  t0.doubleValue();	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNext()))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  while  (!lastStep  &&(t0!=  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&(t0!=  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0!=  t0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0);	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  while  (!lastStep  &&!firstTime)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&!firstTime)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&!firstTime)  {	  while    (!firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator();	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  while  (!firstTime  ||!lastStep)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  ||!lastStep)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  ||!lastStep)  {	  while    (!firstTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator())  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator())  {	  while    (!firstTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  error))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  error))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  t0))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  t0))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  t0))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  t0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  t0))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(manager,  t0))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(t0,  y))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[0]);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[0]);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
52	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  getInterpolator();	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
53	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
54	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  while  (!fsal)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!fsal)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!fsal)  {	  while    (!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  while  (!lastTime  &&!fsal)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastTime  &&!fsal)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime  &&!fsal)  {	  while    (!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  task))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  task))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  task))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorInstance();	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  while  (!firstTime  &&!fsal)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  &&!fsal)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!fsal)  {	  while    (!firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  AssertionError.checkState(interpolator!=  null);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  AssertionError.checkState(interpolator!=  null);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(interpolator!=  null);	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  Interpolator  interpolator  =  getInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  getInterpolator();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  getInterpolator();	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  while  (!fsal  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!fsal  &&!lastStep)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!fsal  &&!lastStep)  {	  while    (!firstTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&!fsal)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!firstTime  &&!lastStep  &&!fsal)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&!fsal)  {	  while    (!firstTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  double  firstTime  =  y0.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  double  firstTime  =  y0.doubleValue();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  y0.doubleValue();	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
79	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
81	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  while(!lastStep  &&(t0  <  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&(t0  <  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&(t0  <  t0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  while(!lastTime  &&  firstTime)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastTime  &&  firstTime)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&  firstTime)  {	  while    (!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  k);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  k);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
97	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
98	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  stepStart))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
104	[BUG]  [BUGGY]  while(!lastTime  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastTime  &&!lastStep)  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&!lastStep)  {	  while    (!firstTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  double  firstTime  =  t.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  double  firstTime  =  t.doubleValue();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  t.doubleValue();	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  double  firstTime  =  this.t0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  double  firstTime  =  this.t0.doubleValue();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  this.t0.doubleValue();	      double    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
107	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
108	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y0,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
109	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
110	[BUG]  [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
