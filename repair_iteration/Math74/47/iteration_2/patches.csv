bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
5	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance(t0);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
6	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInterpolator();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInterpolator();	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
7	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
18	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
19	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
20	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
21	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
22	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
23	[BUG]  [BUGGY]  Double  firstTime  =  t0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Double  firstTime  =  t0.doubleValue();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Double  firstTime  =  t0.doubleValue();	  double    firstTime    =    t0.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  double  firstTime  =  handler.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  handler.doubleValue()  +  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  handler.doubleValue()  +  1;	  double    firstTime    =    t0.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  while  (!lastStep  &&(y0  ==  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(y0  ==  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(y0  ==  t0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    y0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  y.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  y.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  y.getNext()))  {	  while    (!lastStep    &&(t0    ==    y0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  while  (!lastStep  &&(y0  ==  t.getNext()  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(y0  ==  t.getNext()  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(y0  ==  t.getNext()  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    y0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y);	  Interpolator    interpolator    =    manager.getInterpolatorForStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  error);	  Interpolator    interpolator    =    manager.getInterpolatorForStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  stepStart);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  stepStart);	  Interpolator    interpolator    =    manager.getInterpolatorForStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  Interpolator  interpolator  =  getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  getInterpolator(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  getInterpolator(t0);	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
32	[BUG]  [BUGGY]  Interpolator  interpolator  =  this.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  this.getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  this.getInterpolator();	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
33	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
34	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
38	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
39	[BUG]  [BUGGY]  while(!firstTime  &&  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  &&  firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  firstTime)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
40	[BUG]  [BUGGY]  while(!firstTime  &&  lastStep)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  &&  lastStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  lastStep)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
41	[BUG]  [BUGGY]  while(!lastTime  &&  firstTime  &&  error)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastTime  &&  firstTime  &&  error)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&  firstTime  &&  error)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
42	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(a,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(a,  t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(a,  t0);	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
43	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
44	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
45	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  t[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
46	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
47	[BUG]  [BUGGY]  while  (!firstTime  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEndTimeInterpolator())  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEndTimeInterpolator())  {	  while    (!firstTime    &&!lastStep    &&    isEndTimeInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
48	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator(t0))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator(t0))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&  isEndTimeInterpolator(t0))  {	  while    (!firstTime    &&!lastStep    &&    isEndTimeInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
49	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FACTOR))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FACTOR))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FACTOR))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
54	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  if(y!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(y!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(y!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
58	[BUG]  [BUGGY]  if(y!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(y!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(y!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
59	[BUG]  [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  while(!previousStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  t0.doubleValue()  >  1;	  boolean    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  boolean  firstTime  =  y.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  boolean  firstTime  =  y.doubleValue();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  y.doubleValue();	  boolean    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  error))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  error))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(manager,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    error))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
64	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  error))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  error))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    error))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
65	[BUG]  [BUGGY]  while  (!isEnabled(manager,  error))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!isEnabled(manager,  error))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!isEnabled(manager,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    error))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
66	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  error))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  error))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(t0,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    error))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
67	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(hNew,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
71	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(hNew,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(hNew,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(hNew,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
74	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
75	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(hNew,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
76	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(null,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(null,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(null,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
77	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
78	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
79	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  interpolator.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  interpolator.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  interpolator.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
80	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);	  Interpolator    interpolator    =    manager.getInterpolatorInstance();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
82	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  y);	  Interpolator    interpolator    =    manager.getInterpolatorInstance();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
83	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  t);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorInstance(t0,  t);	  Interpolator    interpolator    =    manager.getInterpolatorInstance();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
84	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x,  y);	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
85	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x.length,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x.length,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  x.length,  y);	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
86	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
87	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
88	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
89	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
90	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
91	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
92	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
93	[BUG]  [BUGGY]  double  firstTime  =  y.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  y.doubleValue();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  y.doubleValue();	  double    firstTime    =    y0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
94	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&!hNew)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&!lastStep  &&!hNew)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&!hNew)  {	  while    (!firstTime    &&!lastStep    &&!fsal)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
95	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&!exp)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&!lastStep  &&!exp)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&!exp)  {	  while    (!firstTime    &&!lastStep    &&!fsal)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
96	[BUG]  [BUGGY]  while  (!firstTime  &&!lastStep  &&!isLast)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&!lastStep  &&!isLast)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&!lastStep  &&!isLast)  {	  while    (!firstTime    &&!lastStep    &&!fsal)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
97	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(dt,    y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t,  y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t,  y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t,  y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(dt,    y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
99	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(dt,  y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(dt,    y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
100	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  yDotK.length;  k++)  {  interpolator.shift();  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    yDotK.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
101	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
103	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  while  (!lastStep  &&(t0  >=  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(t0  >=  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0  >=  t0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0!=    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
105	[BUG]  [BUGGY]  while(!firstTime  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
106	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
107	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  1;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(interpolator,  t0))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEnabled(interpolator,  t0))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(interpolator,  t0))  {	  while    (!firstTime    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
110	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  stepStart))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(manager,  stepStart))  {	  while    (!firstTime    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
111	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
112	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
115	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
116	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t2,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t2,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t2,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
117	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t1,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
118	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  error);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
119	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(y,  t.length,  k);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(y,  t.length,  k);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(y,  t.length,  k);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
120	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y.length,  k);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y.length,  k);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y.length,  k);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
121	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  1);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  1);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
122	[BUG]  [BUGGY]  while  (!lastTime  &&!firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastTime  &&!firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime  &&!firstTime)  {	  while    (!firstTime    &&!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
123	[BUG]  [BUGGY]  while  (!firstTime  ||!lastTime)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  ||!lastTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  ||!lastTime)  {	  while    (!firstTime    &&!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
125	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
126	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
127	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
130	[BUG]  [BUGGY]  while  (!isEnabled(manager,  task))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!isEnabled(manager,  task))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!isEnabled(manager,  task))  {	  while    (!lastStep    &&    isEnabled(manager,    task))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
131	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  task))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  task))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  task))  {	  while    (!lastStep    &&    isEnabled(manager,    task))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
132	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  task))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEnabled(manager,  task))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(manager,  task))  {	  while    (!lastStep    &&    isEnabled(manager,    task))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
133	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
134	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  b.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  b.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  b.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
135	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
136	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  dt.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  dt.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  dt.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
137	[BUG]  [BUGGY]  int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
138	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y0,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y0,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y0,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
139	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  1;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  1;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
140	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
141	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
142	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  interpolator[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  interpolator[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  interpolator[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
143	[BUG]  [BUGGY]  double  firstTime  =  this.t0.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  this.t0.doubleValue()  +  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  this.t0.doubleValue()  +  1;	  double    firstTime    =    this.t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
144	[BUG]  [BUGGY]  double  firstTime  =  this.t0.doubleValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  this.t0.doubleValue()  -  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  this.t0.doubleValue()  -  1;	  double    firstTime    =    this.t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
145	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
146	[BUG]  [BUGGY]  double  firstTime  =  handler.doubleValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  handler.doubleValue()  -  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  handler.doubleValue()  -  1;	  double    firstTime    =    handler.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
147	[BUG]  [BUGGY]  double  firstTime  =  handler.doubleValue()  /  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  handler.doubleValue()  /  2;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  handler.doubleValue()  /  2;	  double    firstTime    =    handler.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
148	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  1;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
150	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
151	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
152	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  calculateDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
153	[BUG]  [BUGGY]  while  (!lastStep  &&!fsal)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&!fsal)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&!fsal)  {	  while    (!lastStep    &&!firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
154	[BUG]  [BUGGY]  while  (!lastStep  &&!expfactor)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&!expfactor)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&!expfactor)  {	  while    (!lastStep    &&!firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
155	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
156	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(y,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
157	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    yDotK.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
158	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  t);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  t);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
159	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y  +  1);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y  +  1);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
160	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  error);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
161	[BUG]  [BUGGY]  int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
162	[BUG]  [BUGGY]  int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
163	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  y);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  y);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
164	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  error);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  t);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  t);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
166	[BUG]  [BUGGY]  double  firstTime  =  t.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  t.doubleValue()  +  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  t.doubleValue()  +  1;	  double    firstTime    =    t.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
167	[BUG]  [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
168	[BUG]  [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
169	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
170	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
171	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
173	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
174	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
175	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
176	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
177	[BUG]  [BUGGY]  while(!lastStep  &&(t0  <  t0  ||  t0  >  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&(t0  <  t0  ||  t0  >  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&(t0  <  t0  ||  t0  >  t.getNext()))  {	  while(!lastStep    &&(t0    <    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
178	[BUG]  [BUGGY]  while(!lastStep  &&(t0  <  =  t0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&(t0  <  =  t0  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&(t0  <  =  t0  ||  t0  ==  t.getNext()))  {	  while(!lastStep    &&(t0    <    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
179	[BUG]  [BUGGY]  while(!lastStep  &&(t0  <  t1  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&(t0  <  t1  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&(t0  <  t1  ||  t0  ==  t.getNext()))  {	  while(!lastStep    &&(t0    <    t0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
180	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
181	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x[k][k],  error,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
182	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
183	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
184	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
185	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(b[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(b[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(b[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
186	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y,  t[k],  y[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y,  t[k],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y,  t[k],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
187	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[1],  y[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[1],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[1],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
188	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y,  t[k],  y[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y,  t[k],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  y,  t[k],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
189	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[i],  y[0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[i],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[i],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
190	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
191	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!lastStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!lastStep)  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
192	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!interpolator.shift())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!interpolator.shift())  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!interpolator.shift())  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
193	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!firstTime)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!firstTime)  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
194	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
195	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  hNew);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
196	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  lastStep);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  lastStep);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  lastStep);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
197	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  stepStart))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  stepStart))  {	  while    (!lastStep    &&    isEnabled(interpolator,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
198	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  interpolator))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  interpolator))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(t0,  interpolator))  {	  while    (!lastStep    &&    isEnabled(interpolator,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  while  (!fsal  &&!firstTime)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!fsal  &&!firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!fsal  &&!firstTime)  {	  while    (!fsal    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
200	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
201	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
202	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
203	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
204	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
205	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    4;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
206	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    4;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
207	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    4;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
208	[BUG]  [BUGGY]  while(!lastTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!firstTime    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
209	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y2,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
210	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[1]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[k],  y[1]);	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
211	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[1],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
212	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[1],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
213	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[1],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
214	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  interpolator.shift();  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
215	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  1;  k  <  y.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  1;  k  <  y.length;  k++)  {  interpolator.shift();  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
216	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator.shift();  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
217	[BUG]  [BUGGY]  while(!nextTime  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!nextTime  &&!lastStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!nextTime  &&!lastStep)  {	  while(!lastTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
218	[BUG]  [BUGGY]  while(!nextStep  &&!lastTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!nextStep  &&!lastTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!nextStep  &&!lastTime)  {	  while(!lastTime    &&!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
219	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    calculateDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
220	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  k  =  0;  k  <  y.length;  k++)  {  calculateDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    calculateDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
221	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
222	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  manager);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  manager);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  error,  manager);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
223	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart,  error))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart,  error))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  stepStart,  error))  {	  while    (!lastStep    &&    isEnabled(manager,    stepStart))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
224	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  this.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  this.getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  this.getInterpolator();	  InterpolatorInterpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
225	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  getInterpolator(t0);	  InterpolatorInterpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
226	[BUG]  [BUGGY]  AssertionError.checkState(interpolator  ==  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  AssertionError.checkState(interpolator  ==  null);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(interpolator  ==  null);	  AssertionError.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
227	[BUG]  [BUGGY]  AssertionError.checkState(expfactor!=  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  AssertionError.checkState(expfactor!=  null);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(expfactor!=  null);	  AssertionError.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
228	[BUG]  [BUGGY]  AssertionError.checkState(expfactor  ==  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  AssertionError.checkState(expfactor  ==  null);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(expfactor  ==  null);	  AssertionError.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
229	[BUG]  [BUGGY]  while  (!firstTime  &&  isEnabled(t0,  y))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!firstTime  &&  isEnabled(t0,  y))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!firstTime  &&  isEnabled(t0,  y))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
230	[BUG]  [BUGGY]  while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
231	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
232	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
233	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
234	[BUG]  [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  0;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  t0.doubleValue()  >  0;	  boolean    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
235	[BUG]  [BUGGY]  boolean  firstTime  =  handler.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  boolean  firstTime  =  handler.doubleValue();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  handler.doubleValue();	  boolean    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
236	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
237	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    4;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
238	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[j],  y[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[j],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t[j],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
239	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y1,  t[k],  y[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y1,  t[k],  y[0]);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y1,  t[k],  y[0]);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    t[k],    y[0]);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
240	[BUG]  [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
241	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  x[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
242	[BUG]  [BUGGY]  Integrator  interpolator  =  t0.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integrator  interpolator  =  t0.getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integrator  interpolator  =  t0.getInterpolator();	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
243	[BUG]  [BUGGY]  x  =  t0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  x  =  t0.doubleValue();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	x  =  t0.doubleValue();	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
244	[BUG]  [BUGGY]  Integrator  interpolator  =  t0.getImplicitReturn();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integrator  interpolator  =  t0.getImplicitReturn();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integrator  interpolator  =  t0.getImplicitReturn();	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
245	[BUG]  [BUGGY]  Integrator  interpolator  =  getInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integrator  interpolator  =  getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integrator  interpolator  =  getInterpolator();	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
246	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =(Interpolator)manager.getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =(Interpolator)manager.getInterpolator();	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
247	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
248	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y1);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0,  y1);	  Interpolator    interpolator    =    manager.getInterpolatorForStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
249	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
250	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
251	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  yDotK[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
252	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
253	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NEW)&&  isEnabled(Feature.QUOTE_FIELD_NEW))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NEW)&&  isEnabled(Feature.QUOTE_FIELD_NEW))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NEW)&&  isEnabled(Feature.QUOTE_FIELD_NEW))  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
255	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
256	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
257	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_FACTOR)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_FACTOR)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_FACTOR)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FACTOR))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
258	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
259	[BUG]  [BUGGY]  int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
260	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolatorInstance();	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
261	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  hNew.length;  k++)  {  computeDerivatives(hNew,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(hNew,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
262	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  error,  t))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  error,  t))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  error,  t))  {	  while    (!lastStep    &&    isEnabled(manager,    error))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
263	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t,  error);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t,  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t,  error);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
264	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
265	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  t);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  t);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  t);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
266	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
267	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
268	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
269	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
270	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
271	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(y,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
272	[BUG]  [BUGGY]  x  =  t0.getX();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  x  =  t0.getX();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	x  =  t0.getX();	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
273	[BUG]  [BUGGY]  Integer  j  =  getJoinInteger(t0,  x.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  j  =  getJoinInteger(t0,  x.length);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  j  =  getJoinInteger(t0,  x.length);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
274	[BUG]  [BUGGY]  Integer  j  =  getJoinInteger(t0,  y);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  j  =  getJoinInteger(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  j  =  getJoinInteger(t0,  y);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
275	[BUG]  [BUGGY]  while  (!lastStep  &&(t0!=  y0  ||  t0  ==  t.getNext()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(t0!=  y0  ||  t0  ==  t.getNext()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0!=  y0  ||  t0  ==  t.getNext()))  {	  while    (!lastStep    &&(t0    ==    y0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
276	[BUG]  [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNumberOfEquations()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNumberOfEquations()))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&(t0  ==  y0  ||  t0  ==  t.getNumberOfEquations()))  {	  while    (!lastStep    &&(t0    ==    y0    ||    t0    ==    t.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
277	[BUG]  [BUGGY]  while  (!lastStep  ||!firstTime)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  ||!firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  ||!firstTime)  {	  while    (!firstTime    ||!lastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
278	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
279	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  3;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
280	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k  +  1);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  k  +  1);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
281	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  j);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  j);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
282	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[1],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
283	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[2],  y[2]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[1],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
284	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y,  t);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  y,  t);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
285	[BUG]  [BUGGY]  while  (!lastTime  &&  isEnabled(manager,  t0))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastTime  &&  isEnabled(manager,  t0))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime  &&  isEnabled(manager,  t0))  {	  while    (!firstTime    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
286	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  hNew);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  hNew);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  hNew);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
287	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0  -  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0  -  error);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0  -  error);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
288	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
289	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t1,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
290	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  firstTime)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  firstTime)  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
291	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!firstTime)  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
292	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
293	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[0],  t[1]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
294	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[1],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
295	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  calculateDerivatives(y[0],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  calculateDerivatives(y[0],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  calculateDerivatives(y[0],  y[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y[0],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
296	[BUG]  [BUGGY]  while  (!fsal  &&!lastTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!fsal  &&!lastTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!fsal  &&!lastTime)  {	  while    (!firstTime    &&!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
297	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  hNew);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  hNew);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
298	[BUG]  [BUGGY]  double  firstTime  =  handler.doubleValue()  *  t0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  handler.doubleValue()  *  t0;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  handler.doubleValue()  *  t0;	  double    firstTime    =    handler.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
299	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK[0].length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK[0].length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK[0].length;  k++)  {  interpolator.shift();  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    yDotK.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
300	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =(InterpolatorInterpolator)manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =(InterpolatorInterpolator)manager.getInterpolator();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =(InterpolatorInterpolator)manager.getInterpolator();	  InterpolatorInterpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
301	[BUG]  [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
302	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
303	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
304	[BUG]  [BUGGY]  Integer  y  =  getEndTimeInteger(t0,  k);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  y  =  getEndTimeInteger(t0,  k);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  y  =  getEndTimeInteger(t0,  k);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
305	[BUG]  [BUGGY]  Integer  y  =  getEndTimeInteger(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  y  =  getEndTimeInteger(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  y  =  getEndTimeInteger(t0);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
306	[BUG]  [BUGGY]  Integer  y  =  getEndTimeInteger(t0,  x.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  y  =  getEndTimeInteger(t0,  x.length);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  y  =  getEndTimeInteger(t0,  x.length);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
307	[BUG]  [BUGGY]  Integer  y2  =  getEndTimeInteger(t0,  k);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  y2  =  getEndTimeInteger(t0,  k);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  y2  =  getEndTimeInteger(t0,  k);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
308	[BUG]  [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!previousStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
309	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
310	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
311	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
312	[BUG]  [BUGGY]  AssertionError.checkState(interpolator  >=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  AssertionError.checkState(interpolator  >=  null);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(interpolator  >=  null);	  AssertionError.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
313	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
314	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[2]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
315	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  b.length;  y++)  {  computeDerivatives(y,  b[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
316	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  b[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    b[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
317	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
318	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  n.length;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
319	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y[0],  y[2]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
320	[BUG]  [BUGGY]  while(!lastTime  &&  firstTime  &&  fsal)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastTime  &&  firstTime  &&  fsal)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&  firstTime  &&  fsal)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
321	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  y))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  y))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  y))  {	  while    (!lastStep    &&    isEnabled(interpolator,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
322	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  y0))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  y0))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(interpolator,  y0))  {	  while    (!lastStep    &&    isEnabled(interpolator,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
323	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  6;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  6;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  6;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    3;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
324	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(dt,    y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
325	[BUG]  [BUGGY]  while(!hasNextStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!hasNextStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!hasNextStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!previousStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
326	[BUG]  [BUGGY]  while  (!fsal  &&!lastStep  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!fsal  &&!lastStep  &&  isEndTimeInterpolator())  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!fsal  &&!lastStep  &&  isEndTimeInterpolator())  {	  while    (!firstTime    &&!lastStep    &&    isEndTimeInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
327	[BUG]  [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  lastStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  lastStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!firstTime  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  lastStep)  {	  while(!firstTime    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
328	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
329	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
330	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  a[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
331	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
332	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  interpolator))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  interpolator))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastStep  &&  isEnabled(manager,  interpolator))  {	  while    (!lastStep    &&    isEnabled(manager,    task))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
333	[BUG]  [BUGGY]  Integer  yDotK  =  handler.getInstantiator(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  yDotK  =  handler.getInstantiator(t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  yDotK  =  handler.getInstantiator(t0);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
334	[BUG]  [BUGGY]  Integer  x  =  getEndTimeInteger(t0,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Integer  x  =  getEndTimeInteger(t0,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Integer  x  =  getEndTimeInteger(t0,  y);	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
335	[BUG]  [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FACTOR))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
336	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  x.length;  k++)  {  computeDerivatives(y[0][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  1;  k  <  x.length;  k++)  {  computeDerivatives(y[0][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  1;  k  <  x.length;  k++)  {  computeDerivatives(y[0][k],  error,  k);  }	  for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
337	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y,    t[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
338	[BUG]  [BUGGY]  while(!lastStep  &&!isLast)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&!isLast)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&!isLast)  {	  while    (!lastStep    &&!firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
339	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t.length);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  y.length,  t.length);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    y.length,    k);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
340	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(t0,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(t0,  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(t0,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
341	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
342	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
343	[BUG]  [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y1,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y1,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
344	[BUG]  [BUGGY]  int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
345	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  4;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    4;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
346	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y2,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y2,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
347	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(t0,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(t0,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(t0,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
348	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
349	[BUG]  [BUGGY]  int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t1.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
350	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  x  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
351	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
352	[BUG]  [BUGGY]  if(interpolator!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
353	[BUG]  [BUGGY]  if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
354	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  2;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
355	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
356	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  1;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    2;    k++)    {    computeDerivatives(t1,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
357	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
358	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
359	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  yDotK[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  yDotK[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  hNew,  yDotK[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    hNew,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
360	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(x,    y[k],    error);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
361	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!lastStep)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!lastStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!lastStep)  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
362	[BUG]  [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  while(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
363	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y3,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y2,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
364	[BUG]  [BUGGY]  while(!lastTime  &&!lastStep  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastTime  &&!lastStep  &&  isEndTimeInterpolator())  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&!lastStep  &&  isEndTimeInterpolator())  {	  while    (!firstTime    &&!lastStep    &&    isEndTimeInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
365	[BUG]  [BUGGY]  while  (!lastTime  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastTime  &&  isEndTimeInterpolator())  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime  &&  isEndTimeInterpolator())  {	  while    (!firstTime    &&!lastStep    &&    isEndTimeInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
366	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
367	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
368	[BUG]  [BUGGY]  if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null  &&  x.length  >  0)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  k);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
369	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  hNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  errors,  hNew);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    errors,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
370	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
371	[BUG]  [BUGGY]  while(!lastStep  &&  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&  firstTime)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  firstTime)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
372	[BUG]  [BUGGY]  while(!lastTime  &&  nextStep)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastTime  &&  nextStep)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastTime  &&  nextStep)  {	  while(!lastTime    &&    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
373	[BUG]  [BUGGY]  double  firstTime  =  t0.doubleValue()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  double  firstTime  =  t0.doubleValue()  *  1;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	double  firstTime  =  t0.doubleValue()  *  1;	  double    firstTime    =    t0.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
374	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
375	[BUG]  [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  yDotK[0],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    yDotK[0],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
376	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  new  InterpolatorInterpolator(t0,  t);	  InterpolatorInterpolator    interpolator    =    new    InterpolatorInterpolator(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
377	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
378	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  a[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(y,    a[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
379	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while(!lastStep  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(!lastStep    &&    isEnabled(Feature.QUOTE_FIELD_NAMES    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
380	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
381	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
382	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  1);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  1);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
383	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  doublehNew);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  doublehNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y[k][k],  error,  doublehNew);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y[k][k],    error,    hNew);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
384	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  a);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  a);	  InterpolatorInterpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
385	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolatorInstance();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolatorInstance();  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  getInterpolatorInstance();	  InterpolatorInterpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
386	[BUG]  [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  0.0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  boolean  firstTime  =  t0.doubleValue()  >  0.0;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	boolean  firstTime  =  t0.doubleValue()  >  0.0;	  boolean    firstTime    =    t0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
387	[BUG]  [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y[k],    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
388	[BUG]  [BUGGY]  if(t0!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(t0!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(t0!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
389	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
390	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t1,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    t.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
391	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
392	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
393	[BUG]  [BUGGY]  int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(dt,  y,  a[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(dt,    y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
394	[BUG]  [BUGGY]  AssertionError.checkState(interpolator!=  null,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  AssertionError.checkState(interpolator!=  null,  t0);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	AssertionError.checkState(interpolator!=  null,  t0);	  AssertionError.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
395	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
396	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
397	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  error);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    t[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
398	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  a.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  a.length;  k++)  {  calculateDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    calculateDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
399	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	for(int  k  =  0;  k  <  x.length;  k++)  {  calculateDerivatives(x,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    calculateDerivatives(x,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
400	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  nIsLast;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  nIsLast;  y++)  {  computeDerivatives(y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  nIsLast;  y++)  {  computeDerivatives(y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
401	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  y++)  {  computeDerivatives(y,  y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    y++)    {    computeDerivatives(y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
402	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x[k][k],  error,  y);  }	  if(x!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(x[k][k],    error,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
403	[BUG]  [BUGGY]  while  (!lastTime  &&!isLast)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  while  (!lastTime  &&!isLast)  {  [BUGGY]        interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	while  (!lastTime  &&!isLast)  {	  while    (!firstTime    &&!lastTime)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
404	[BUG]  [BUGGY]  int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
405	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
406	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  k);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t1,  y,  k);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
407	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(t0,    y,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
408	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  s.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  s.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  s.length;  k++)  {  interpolator.shift();  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
409	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    a.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
410	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  a);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  a);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  a);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
411	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  hNew);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
412	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  t);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  t);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  yDotK.length;  k++)  {  computeDerivatives(t0,  y,  t);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
413	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  p);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  p);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  p);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
414	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
415	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(x,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
416	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(y,  y[k]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    computeDerivatives(y,    y[k]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
417	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(x!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  interpolator.shift();  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
418	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  x.length,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  x.length,  y);  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator(t0,  x.length,  y);	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    x.length;    k++)    {    interpolator.shift();    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
419	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[2]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[2]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
420	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k],  y[1]);  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
421	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(a!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(y,  a[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
422	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(x,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;        [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(x,  a[0]);  }  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  for  (boolean  loop  =  true;  loop;)  {  if  (firstTime  ||  !fsal)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	232	232	1	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  y++)  {  computeDerivatives(x,  a[0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    a.length;    y++)    {    computeDerivatives(y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
