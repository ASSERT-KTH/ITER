bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =  handler.getStep(hNew,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(hNew,  error);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(hNew,  error);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  t  =  handler.getStep(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(stepStart);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  t  =  handler.getStep(hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(hNew,  stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(hNew,  stepStart);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  t  =  handler.getStep(exp);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(exp);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(exp);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  stepStart  =  handler.stepHandler;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepHandler;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepHandler;	  stepStart    =    handler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
6	[BUG]  [BUGGY]  handler.updateStepHandler(y,  t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  t0,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  t0,  stepStart);	  handler.updateStepHandler(y,    t0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  handler.updateStepHandler(y,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  error);	  handler.updateStepHandler(y,    t0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
8	[BUG]  [BUGGY]  handler.updateStepHandler(hNew,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(hNew,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(hNew,  t0);	  handler.updateStepHandler(y,    t0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  handler.setStep(interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(interpolator,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(interpolator,  stepStart);	  handler.setStep(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
10	[BUG]  [BUGGY]  handler.setStep(nextStep);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(nextStep);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(nextStep);	  handler.setStep(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
11	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  t);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
12	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  stepStart,  hNew);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
13	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  stepStart,  t);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
14	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  t,  stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  t,  stepStart,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  t,  stepStart,  t0);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
15	[BUG]  [BUGGY]  t0  =  handler.getTickLimit()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTickLimit()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTickLimit()  +  1;	  t0    =    handler.getTickLimit();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  t0  =  handler.getStepLimit();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStepLimit();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStepLimit();	  t0    =    handler.getTickLimit();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  t0  =  handler.getTickStart();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTickStart();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTickStart();	  t0    =    handler.getTickLimit();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  handler.setStep(t0,  eventsHandler);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0,  eventsHandler);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0,  eventsHandler);	  handler.setStep(eventsHandler,    t0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
19	[BUG]  [BUGGY]  handler.setStep(interpolator,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(interpolator,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(interpolator,  t0);	  handler.setStep(eventsHandler,    t0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
20	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  yTmp,  a,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  yTmp,  a,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  yTmp,  a,  t0);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
21	[BUG]  [BUGGY]  handler.updateStepHandler(y0,  t,  a,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y0,  t,  a,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y0,  t,  a,  t0);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
22	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  error,  t0,  a);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  error,  t0,  a);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  error,  t0,  a);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
23	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  t,  error);	  handler.updateStepHandler(t0,    y0,    t,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
24	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  t,  stepStart);	  handler.updateStepHandler(t0,    y0,    t,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
25	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  hNew);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  t,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  t,  hNew);	  handler.updateStepHandler(t0,    y0,    t,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
26	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  t,  hNew);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  t,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  t,  hNew);	  handler.updateStepHandler(t0,    y0,    t,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
27	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  error);	  handler.updateStepHandler(yTmp,    t0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
28	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  t0,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  t0,  stepStart);	  handler.updateStepHandler(yTmp,    t0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  stepStart);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  stepStart);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  error);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  handler.setStep(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0,  stepStart);	  handler.setStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  handler.setStep(eventsHandler,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(eventsHandler,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(eventsHandler,  error);	  handler.setStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  t0  =  handler.getHandler(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getHandler(0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getHandler(0);	  t0    =    handler.getHandler();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  t0  =  handler.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStepHandler();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStepHandler();	  t0    =    handler.getHandler();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  handler.set(t0,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  stepStart,  error);	  handler.set(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
37	[BUG]  [BUGGY]  handler.set(t0,  hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  hNew);	  handler.set(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
38	[BUG]  [BUGGY]  handler.set(t0,  error,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  error,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  error,  t);	  handler.set(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
39	[BUG]  [BUGGY]  handler.set(t0,  stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  stepStart,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  stepStart,  firstTime);	  handler.set(t0,    firstTime);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
40	[BUG]  [BUGGY]  t0  =  handler.getTickInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTickInterpolator();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTickInterpolator();	  t0    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
41	[BUG]  [BUGGY]  t0  =  handler.getStepInterpolator(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStepInterpolator(0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStepInterpolator(0);	  t0    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
42	[BUG]  [BUGGY]  t0  =  handler.getStep(hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(hNew,  stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(hNew,  stepStart);	  t0    =    handler.getStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
43	[BUG]  [BUGGY]  t0  =  handler.getStep(stepStart,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(stepStart,  error);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(stepStart,  error);	  t0    =    handler.getStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
44	[BUG]  [BUGGY]  t0  =  handler.getStep(nextIsLast);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(nextIsLast);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(nextIsLast);	  t0    =    handler.getStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
45	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  stepStart,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  stepStart,  t0);	  handler.updateStepHandler(t0,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  yTmp);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  yTmp);	  handler.updateStepHandler(t0,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
47	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  stepStart,  yTmp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  stepStart,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  stepStart,  yTmp);	  handler.updateStepHandler(t0,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
48	[BUG]  [BUGGY]  stepStart  =  handler.getStep()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStep()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStep()  +  1;	  stepStart    =    handler.getStep();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
49	[BUG]  [BUGGY]  stepStart  =  handler.getStep()  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStep()  -  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStep()  -  1;	  stepStart    =    handler.getStep();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
50	[BUG]  [BUGGY]  stepStart  =  handler.getStep(hNew);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStep(hNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStep(hNew);	  stepStart    =    handler.getStep();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
51	[BUG]  [BUGGY]  t  =  handler.getStep()  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep()  +  2;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep()  +  2;	  t    =    handler.getStep()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  handler.set(t0,  y,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  y,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  y,  error);	  handler.set(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
53	[BUG]  [BUGGY]  handler.set(t0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  y,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  y,  stepStart);	  handler.set(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
54	[BUG]  [BUGGY]  handler.set(t0,  error,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  error,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  error,  y);	  handler.set(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
55	[BUG]  [BUGGY]  stepStart  =  handler.step()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.step()  -  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.step()  -  1;	  stepStart    =    handler.step();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
56	[BUG]  [BUGGY]  stepStart  =  handler.step(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.step(t0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.step(t0);	  stepStart    =    handler.step();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
57	[BUG]  [BUGGY]  stepStart  =  handler.step()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.step()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.step()  +  1;	  stepStart    =    handler.step();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]  t  =  handler.getStep1();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep1();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep1();	  t    =    handler.getStep2();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
59	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  hNew);	  handler.updateStepHandler(t0,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
60	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  firstTime);	  handler.updateStepHandler(t0,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
61	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  error);	  handler.updateStepHandler(t0,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  stepStart  =  handler.stepEnd  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepEnd  -  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepEnd  -  1;	  stepStart    =    handler.stepEnd;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  stepStart  =  handler.stepEnd  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepEnd  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepEnd  +  1;	  stepStart    =    handler.stepEnd;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
64	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  a,  hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  a,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  a,  hNew);	  handler.updateStepHandler(t0,    y0,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
65	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  a,  yTmp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  a,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  a,  yTmp);	  handler.updateStepHandler(t0,    y0,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  a,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  a,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  a,  stepStart);	  handler.updateStepHandler(t0,    y0,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
67	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  stepStart,  yTmp);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  stepStart,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  stepStart,  yTmp);	  handler.updateStepHandler(t0,    y0,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
68	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  hNew);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  hNew);	  handler.updateStepHandler(t0,    y,    a,    t);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
69	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  error);	  handler.updateStepHandler(t0,    y,    a,    t);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  handler.init(t0,  hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  hNew,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  hNew,  stepStart);	  handler.init(t0,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  handler.init(t0,  hNew,  firstTime);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  hNew,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  hNew,  firstTime);	  handler.init(t0,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  handler.reset(t0,  hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  hNew,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  hNew,  stepStart);	  handler.reset(t0,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
73	[BUG]  [BUGGY]  handler.reset(t0,  stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  stepStart,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  stepStart,  hNew);	  handler.reset(t0,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
74	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  error,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  error,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  error,  stepStart);	  handler.updateStepHandler(t0,    y,    error);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
75	[BUG]  [BUGGY]  handler.init(t0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  y,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  y,  stepStart);	  handler.init(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  handler.init(t0,  y,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  y,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  y,  error);	  handler.init(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  handler.init(t0,  y,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  y,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  y,  t);	  handler.init(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  handler.setStep(stepStart,  eventsHandler);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart,  eventsHandler);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart,  eventsHandler);	  handler.setStep(eventsHandler,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
79	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  hNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  hNew);	  handler.updateStepHandler(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
80	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  error);	  handler.updateStepHandler(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
81	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t);	  handler.updateStepHandler(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  t0  =  handler.getTick()  +  error;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTick()  +  error;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTick()  +  error;	  t0    =    handler.getTick()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
83	[BUG]  [BUGGY]  t0  =  handler.getTick()  *  stepStart;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTick()  *  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTick()  *  stepStart;	  t0    =    handler.getTick()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
84	[BUG]  [BUGGY]  t0  =  handler.getTick()  +  doublehNew;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTick()  +  doublehNew;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTick()  +  doublehNew;	  t0    =    handler.getTick()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
85	[BUG]  [BUGGY]  handler.setHandler(handler);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setHandler(handler);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setHandler(handler);	  handler.clear();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
86	[BUG]  [BUGGY]  handler.setTime(t0,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setTime(t0,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setTime(t0,  t);	  handler.clear();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
87	[BUG]  [BUGGY]  stepStart  =  handler.stepStart();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepStart();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepStart();	  stepStart    =    handler.stepEnd();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
88	[BUG]  [BUGGY]  t0  =  handler.nextStep();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.nextStep();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.nextStep();	  t0    =    handler.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
89	[BUG]  [BUGGY]  t0  =  handler.get()  +  error;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.get()  +  error;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.get()  +  error;	  t0    =    handler.get()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  t0  =  handler.get()  *  stepStart;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.get()  *  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.get()  *  stepStart;	  t0    =    handler.get()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  t0  =  handler.get()  +  doublehNew;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.get()  +  doublehNew;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.get()  +  doublehNew;	  t0    =    handler.get()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  handler.reset(t0,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  stepStart,  error);	  handler.reset(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
93	[BUG]  [BUGGY]  stepStart  =  handler.getStepHandler(hNew);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStepHandler(hNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStepHandler(hNew);	  stepStart    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
94	[BUG]  [BUGGY]  stepStart  =  handler.getStepHandler(0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStepHandler(0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStepHandler(0);	  stepStart    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
95	[BUG]  [BUGGY]  handler.set(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  stepStart);	  handler.set(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  stepStart,  hNew);	  handler.updateStepHandler(t0,    t,    a,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
97	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  hNew);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  hNew);	  handler.updateStepHandler(t0,    t,    a,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
98	[BUG]  [BUGGY]  t0  =  handler.getTick()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTick()  *  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTick()  *  1;	  t0    =    handler.getTick()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  handler.reset(t0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  y,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  y,  stepStart);	  handler.reset(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
100	[BUG]  [BUGGY]  handler.reset(t0,  y,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  y,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  y,  error);	  handler.reset(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
101	[BUG]  [BUGGY]  handler.reset(t0,  y,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  y,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  y,  hNew);	  handler.reset(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
102	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  error);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
103	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  y);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
104	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  stepStart,  y);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
105	[BUG]  [BUGGY]  handler.init(t0,  yTmp,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  yTmp,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  yTmp,  error);	  handler.init(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
106	[BUG]  [BUGGY]  handler.init(t0,  yTmp,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  yTmp,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  yTmp,  stepStart);	  handler.init(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
107	[BUG]  [BUGGY]  handler.init(t0,  yTmp,  firstTime);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  yTmp,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  yTmp,  firstTime);	  handler.init(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
108	[BUG]  [BUGGY]  t  =  handler.getStep(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(1);	  t    =    handler.getStep(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
109	[BUG]  [BUGGY]  t  =  handler.getStep(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(2);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(2);	  t    =    handler.getStep(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
110	[BUG]  [BUGGY]  handler.updateStepHandler(y,  stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  stepStart,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  stepStart,  t0);	  handler.updateStepHandler(t0,    stepStart,    y);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
111	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  error,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  error,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  error,  y);	  handler.updateStepHandler(t0,    stepStart,    y);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
112	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  hNew,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  hNew,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  hNew,  y);	  handler.updateStepHandler(t0,    stepStart,    y);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
113	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  t,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  t,  stepStart);	  handler.updateStepHandler(t0,    yTmp,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
114	[BUG]  [BUGGY]  t0  =  handler.getStep(hNew,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(hNew,  error);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(hNew,  error);	  t0    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  t0  =  handler.getStep(y);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(y);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(y);	  t0    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  t0  =  handler.get()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.get()  *  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.get()  *  1;	  t0    =    handler.get()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
117	[BUG]  [BUGGY]  t  =  handler.getStep(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(t0,  stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(t0,  stepStart);	  t    =    handler.getStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
118	[BUG]  [BUGGY]  t  =  handler.getStep(t0,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(t0,  error);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(t0,  error);	  t    =    handler.getStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
119	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  t0,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  t0,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  t0,  error);	  handler.updateStepHandler(t0,    yTmp,    error);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  error);	  handler.updateStepHandler(t0,    yTmp,    error);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
121	[BUG]  [BUGGY]  t0  =  handler.getStep()  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep()  +  2;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep()  +  2;	  t0    =    handler.getStep()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
122	[BUG]  [BUGGY]  handler.init(t0,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  stepStart,  error);	  handler.init(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  handler.init(t0,  t,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  error);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
124	[BUG]  [BUGGY]  handler.init(t0,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  stepStart);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
125	[BUG]  [BUGGY]  handler.init(t0,  t,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  y);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
126	[BUG]  [BUGGY]  handler.init(t0,  t,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  this);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  this);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
127	[BUG]  [BUGGY]  stepStart  =  handler.stepStart  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepStart  -  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepStart  -  1;	  stepStart    =    handler.stepStart;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  stepStart  =  handler.stepStart  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepStart  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepStart  +  1;	  stepStart    =    handler.stepStart;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
129	[BUG]  [BUGGY]  stepStart  =  handler.stepStart  +  error;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepStart  +  error;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepStart  +  error;	  stepStart    =    handler.stepStart;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  handler.init(t0,  a,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  a,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  a,  stepStart);	  handler.init(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
131	[BUG]  [BUGGY]  handler.setStep(t0,  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0,  t);	  handler.setStep(eventsHandler,    t);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  handler.setStep(t,  eventsHandler);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t,  eventsHandler);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t,  eventsHandler);	  handler.setStep(eventsHandler,    t);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  handler.setStep(t0,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
134	[BUG]  [BUGGY]  handler.setStep(t0,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0,  stepStart,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
135	[BUG]  [BUGGY]  handler.setStep(interpolator,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(interpolator,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(interpolator,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
136	[BUG]  [BUGGY]  handler.setStep(hNew,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(hNew,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(hNew,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
137	[BUG]  [BUGGY]  t0  =  handler.getSlope()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSlope()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSlope()  +  1;	  t0    =    handler.getSlope();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
138	[BUG]  [BUGGY]  t0  =  handler.getSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSecond()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSecond()  +  1;	  t0    =    handler.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
139	[BUG]  [BUGGY]  t0  =  handler.getSecond()  +  stepStart;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSecond()  +  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSecond()  +  stepStart;	  t0    =    handler.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
140	[BUG]  [BUGGY]  handler.setStep(stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart,  hNew);	  handler.setStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
141	[BUG]  [BUGGY]  handler.setStep(exp);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(exp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(exp);	  handler.setStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
142	[BUG]  [BUGGY]  handler.setStep(error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(error);	  handler.setStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
143	[BUG]  [BUGGY]  t  =  handler.getStep()  +  error;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep()  +  error;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep()  +  error;	  t    =    handler.getStep()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
144	[BUG]  [BUGGY]  t  =  handler.getStep()  *  stepStart;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep()  *  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep()  *  stepStart;	  t    =    handler.getStep()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
145	[BUG]  [BUGGY]  handler.updateStepHandler(y,  t0,  a,  yTmp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  t0,  a,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  t0,  a,  yTmp);	  handler.updateStepHandler(t0,    y,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
146	[BUG]  [BUGGY]  handler.setStep(error,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(error,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(error,  stepStart);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
147	[BUG]  [BUGGY]  handler.setStep(exp,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(exp,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(exp,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
148	[BUG]  [BUGGY]  t  =  handler.getStep(hNew  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(hNew  +  1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(hNew  +  1);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
149	[BUG]  [BUGGY]  t  =  handler.getStep(x0,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(x0,  y);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(x0,  y);	  t    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
150	[BUG]  [BUGGY]  t0  =  handler.get()  +  stepStart  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.get()  +  stepStart  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.get()  +  stepStart  +  1;	  t0    =    handler.get()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  stepStart,  error);	  handler.updateStepHandler(t0,    y,    error);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  handler.updateStepHandler(y,  t0,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  t0,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  t0,  error);	  handler.updateStepHandler(t0,    y,    error);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
153	[BUG]  [BUGGY]  t  =  handler.getStep()  +  stepStart  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep()  +  stepStart  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep()  +  stepStart  +  1;	  t    =    handler.getStep()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
154	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  t1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  t1);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  t1);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
155	[BUG]  [BUGGY]  stepStart  =  handler.step;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.step;	  stepStart    =    handler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
156	[BUG]  [BUGGY]  handler.setStep(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart  -  1);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart  -  1);	  handler.setStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
157	[BUG]  [BUGGY]  handler.setStep(interpolator.stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(interpolator.stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(interpolator.stepStart);	  handler.setStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
158	[BUG]  [BUGGY]  handler.reset(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  doublehNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  doublehNew);	  handler.reset(t0,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
159	[BUG]  [BUGGY]  handler.init(t0,  y,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  y,  t,  eventsHandlersManager);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  y,  t,  eventsHandlersManager);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
160	[BUG]  [BUGGY]  t0  =  handler.next()  +  stepStart;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.next()  +  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.next()  +  stepStart;	  t0    =    handler.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
161	[BUG]  [BUGGY]  t0  =  handler.getSlope(hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSlope(hNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSlope(hNew);	  t0    =    handler.getSlope();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
162	[BUG]  [BUGGY]  stepStart  =  handler.stepEnd()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepEnd()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepEnd()  +  1;	  stepStart    =    handler.stepEnd();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
163	[BUG]  [BUGGY]  stepStart  =  handler.stepEnd(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepEnd(t0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepEnd(t0);	  stepStart    =    handler.stepEnd();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
164	[BUG]  [BUGGY]  handler.close();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.close();  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.close();	  handler.clear();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
165	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  t,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  t,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  t,  hNew);	  handler.updateStepHandler(t0,    t,    a,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
166	[BUG]  [BUGGY]  t  =  handler.getStep(hNew,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(hNew,  t0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(hNew,  t0);	  t    =    handler.getStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
167	[BUG]  [BUGGY]  t  =  handler.getStep(y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStep(y);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStep(y);	  t    =    handler.getStep(t0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
168	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y0,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y0,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y0,  stepStart);	  handler.updateStepHandler(t0,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
169	[BUG]  [BUGGY]  handler.setStep(stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart,  t0);	  handler.setStep(eventsHandler,    t0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
170	[BUG]  [BUGGY]  handler.setStep(hNew,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(hNew,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(hNew,  t0);	  handler.setStep(eventsHandler,    t0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
171	[BUG]  [BUGGY]  handler.set(t0,  stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  stepStart,  y);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  stepStart,  y);	  handler.set(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
172	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  yNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  yNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  yNew);	  handler.updateStepHandler(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
173	[BUG]  [BUGGY]  handler.set(t0,  error,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  error,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  error,  stepStart);	  handler.set(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
174	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  stepStart);	  handler.updateStepHandler(t0,    yTmp,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
175	[BUG]  [BUGGY]  handler.updateStepHandler(y,  t0,  firstTime);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y,  t0,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y,  t0,  firstTime);	  handler.updateStepHandler(t0,    y,    firstTime);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
176	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  yTmp,  a,  t1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  yTmp,  a,  t1);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  yTmp,  a,  t1);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
177	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  stepStart);	  handler.updateStepHandler(yTmp,    t0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
178	[BUG]  [BUGGY]  handler.updateStepHandler(y0,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(y0,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(y0,  t0);	  handler.updateStepHandler(yTmp,    t0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
179	[BUG]  [BUGGY]  t0  =  handler.getTick()  +  stepStart  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTick()  +  stepStart  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTick()  +  stepStart  +  1;	  t0    =    handler.getTick()    +    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
180	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  stepStart,  hNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  stepStart,  hNew);	  handler.updateStepHandler(t0,    stepStart,    y);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
181	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  stepStart,  yTmp,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  stepStart,  yTmp,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  stepStart,  yTmp,  error);	  handler.updateStepHandler(t0,    yTmp,    error);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
182	[BUG]  [BUGGY]  t0  =  handler.getStep(stepStart  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(stepStart  +  1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(stepStart  +  1);	  t0    =    handler.getStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
183	[BUG]  [BUGGY]  t0  =  handler.getStep(stepStart,  stepHandler);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(stepStart,  stepHandler);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(stepStart,  stepHandler);	  t0    =    handler.getStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
184	[BUG]  [BUGGY]  stepStart  =  handler.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStepInterpolator();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStepInterpolator();	  stepStart    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
185	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  secondTime);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  secondTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  secondTime);	  handler.updateStepHandler(t0,    y,    a,    t);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
186	[BUG]  [BUGGY]  t0  =  handler.getStep(hNew  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(hNew  +  1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(hNew  +  1);	  t0    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
187	[BUG]  [BUGGY]  t0  =  handler.getStep(hNew,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep(hNew,  t);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep(hNew,  t);	  t0    =    handler.getStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
188	[BUG]  [BUGGY]  handler.set(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.set(t0,  doublehNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.set(t0,  doublehNew);	  handler.set(t0,    firstTime);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
189	[BUG]  [BUGGY]  handler.setStep(escape);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(escape);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(escape);	  handler.setStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
190	[BUG]  [BUGGY]  handler.reset(t0,  error,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.reset(t0,  error,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.reset(t0,  error,  stepStart);	  handler.reset(t0,    error);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
191	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  a);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  a);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
192	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  t,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  t,  a);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  t,  a);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
193	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  stepStart,  firstTime);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
194	[BUG]  [BUGGY]  t0  =  handler.getStepInterpolator(yTmp);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStepInterpolator(yTmp);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStepInterpolator(yTmp);	  t0    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
195	[BUG]  [BUGGY]  t0  =  handler.getStandardTick()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStandardTick()  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStandardTick()  +  1;	  t0    =    handler.getTick()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
196	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  yTmp,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  yTmp,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  yTmp,  stepStart);	  handler.updateStepHandler(t0,    y,    a,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
197	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  t0,  stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  t0,  stepStart,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  t0,  stepStart,  t0);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
198	[BUG]  [BUGGY]  handler.updateStepHandler(yTmp,  t0,  a,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(yTmp,  t0,  a,  t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(yTmp,  t0,  a,  t0);	  handler.updateStepHandler(yTmp,    t,    a,    t0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
199	[BUG]  [BUGGY]  handler.setStep(interpolator,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(interpolator,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(interpolator,  stepStart,  error);	  handler.setStep(stepStart,    error);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
200	[BUG]  [BUGGY]  t0  =  handler.getSingleNode();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSingleNode();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSingleNode();	  t0    =    handler.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
201	[BUG]  [BUGGY]  handler.setStep(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(t0);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(t0);	  handler.setStep(hNew);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
202	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  secondTime);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  secondTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  stepStart,  secondTime);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
203	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  stepStart,  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  stepStart,  error);	  handler.updateStepHandler(t0,    t,    a,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
204	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepEnd);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepEnd);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepEnd);	  handler.updateStepHandler(t0,    y,    error);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
205	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  a,  b);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  a,  b);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  a,  b);	  handler.updateStepHandler(t0,    y,    a,    t);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
206	[BUG]  [BUGGY]  stepStart  =  handler.getStepHandlerInstance();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.getStepHandlerInstance();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.getStepHandlerInstance();	  stepStart    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
207	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  t1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  y,  stepStart,  t1);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  y,  stepStart,  t1);	  handler.updateStepHandler(t0,    t,    stepStart,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
208	[BUG]  [BUGGY]  handler.setStep(stepStart  -  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart  -  error);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart  -  error);	  handler.setStep(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
209	[BUG]  [BUGGY]  handler.setStep(stepStart,  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.setStep(stepStart,  t);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.setStep(stepStart,  t);	  handler.setStep(eventsHandler,    t);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
210	[BUG]  [BUGGY]  stepStart  =  handler.step(t0,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.step(t0,  t);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.step(t0,  t);	  stepStart    =    handler.step();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
211	[BUG]  [BUGGY]  t  =  handler.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t  =  handler.getStepInterpolator();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t  =  handler.getStepInterpolator();	  t    =    handler.getStep2();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
212	[BUG]  [BUGGY]  stepStart  =  handler.stepEnd()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  =  handler.stepEnd()  -  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  =  handler.stepEnd()  -  1;	  stepStart    =    handler.stepEnd();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
213	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  a,  hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  a,  hNew,  stepStart);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  a,  hNew,  stepStart);	  handler.updateStepHandler(t0,    t,    a,    hNew);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
214	[BUG]  [BUGGY]  handler.init(t0,  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  j);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  j);	  handler.init(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
215	[BUG]  [BUGGY]  t0  =  handler.remove();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.remove();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.remove();	  t0    =    handler.get()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
216	[BUG]  [BUGGY]  t0  =  handler.getSlope()  +  stepStart;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getSlope()  +  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getSlope()  +  stepStart;	  t0    =    handler.getSlope();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
217	[BUG]  [BUGGY]  handler.init(t0,  a,  yTmp);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  a,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  a,  yTmp);	  handler.init(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
218	[BUG]  [BUGGY]  stepStart  -=  handler.stepStart;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepStart  -=  handler.stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	stepStart  -=  handler.stepStart;	  stepStart    =    handler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
219	[BUG]  [BUGGY]  t0  =  handler.getImplicitReturn();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getImplicitReturn();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getImplicitReturn();	  t0    =    handler.getHandler();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  t0  =  handler.getStep()  +  stepStart;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getStep()  +  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getStep()  +  stepStart;	  t0    =    handler.getStep()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
221	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  secondTime);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  secondTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  secondTime);	  handler.updateStepHandler(t0,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
222	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y,  stepStart,  doublehNew);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y,  stepStart,  doublehNew);	  handler.updateStepHandler(t0,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
223	[BUG]  [BUGGY]  handler.init(t0,  t,  getEventsManager());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  getEventsManager());  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  getEventsManager());	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
224	[BUG]  [BUGGY]  handler.init(t0,  t,  a,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.init(t0,  t,  a,  eventsHandlersManager);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.init(t0,  t,  a,  eventsHandlersManager);	  handler.init(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
225	[BUG]  [BUGGY]  t0  =  handler.getTickLimit()  +  stepStart;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  t0  =  handler.getTickLimit()  +  stepStart;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	t0  =  handler.getTickLimit()  +  stepStart;	  t0    =    handler.getTickLimit();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
226	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  t,  stepStart,  a);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  t,  stepStart,  a);	  handler.updateStepHandler(t0,    t,    y,    a);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
227	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  y1,  t,  yTmp);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  y1,  t,  yTmp);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  y1,  t,  yTmp);	  handler.updateStepHandler(t0,    y0,    t,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
228	[BUG]  [BUGGY]  handler.updateStepHandler(t0,  yTmp,  stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.updateStepHandler(t0,  yTmp,  stepStart,  firstTime);  [BUGGY]      }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  double  error  =  0;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	226	226	1	replace	handler.updateStepHandler(t0,  yTmp,  stepStart,  firstTime);	  handler.updateStepHandler(t0,    yTmp,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
