bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  setMinReduction(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setMinReduction(1.0);  setMaxGrowth(1.0);  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setMinReduction(1.0);  setMaxGrowth(1.0);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  ==  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  ==  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  SetSafety(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  SetSafety(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	SetSafety(1.0);	      if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  SetSafety(1.0,  exp);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  SetSafety(1.0,  exp);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	SetSafety(1.0,  exp);	      if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
8	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	safely(fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
12	[BUG]  [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0);  setMinGrowth(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  setSafety(1.0);  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0);  setMinReduction(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0);  setMinReduction(1.0);	      if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  setSafety(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0);  setMaxGrowth(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  SetSafety(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  SetSafety(1.0);  setMaxGrowth(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	SetSafety(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
24	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
28	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet();  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet();	      if(exp    >    0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(exp);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(exp);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(exp);	      if(exp    >    0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
31	[BUG]  [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	luate(exp,  fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
32	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  setSafety(1.0  -  exp);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0  -  exp);  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0  -  exp);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	luate(exp,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  luate(fsal,  exp)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  luate(fsal,  exp)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	luate(fsal,  exp)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
42	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  if(false)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(false)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(false)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  setMinReduction(0.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setMinReduction(0.0);  setMaxGrowth(1.0);  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setMinReduction(0.0);  setMaxGrowth(1.0);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  Set  <  String>  setSafety(1.0);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  Set  <  String>  setSafety(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	Set  <  String>  setSafety(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
50	[BUG]  [BUGGY]  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ']'  expected	18	None	replace
51	[BUG]  [BUGGY]  if(!fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(!fsal)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(!fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ']'  expected	16	None	replace
54	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setMinGrowth(1.0);  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
56	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  }	      if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }	      if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(!fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(!fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(!fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();      [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	127	127	1	replace	if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
