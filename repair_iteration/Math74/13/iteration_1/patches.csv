bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
2	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
3	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
4	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
5	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
6	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
7	[BUG]  [BUGGY]  this(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
8	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
9	[BUG]  [BUGGY]  super(name,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
10	[BUG]  [BUGGY]  super(name,  a,  maxStep,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  a,  maxStep,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  a,  maxStep,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);	  super(name,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
11	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
12	[BUG]  [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
13	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
14	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
15	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
16	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
17	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
18	[BUG]  [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
19	[BUG]  [BUGGY]  super(name,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
20	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
21	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
22	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
23	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    prototype,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
24	[BUG]  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    prototype,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
25	[BUG]  [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    prototype,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
26	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
27	[BUG]  [BUGGY]  super(name,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
28	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
29	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
30	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	      super(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
31	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
32	[BUG]  [BUGGY]  this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
33	[BUG]  [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
34	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
35	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
36	[BUG]  [BUGGY]  super(name,  fsal,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
37	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
38	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
39	[BUG]  [BUGGY]  super(name,  fsal,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
40	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
41	[BUG]  [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
42	[BUG]  [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
43	[BUG]  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);	  super(name,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
44	[BUG]  [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
45	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
46	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
47	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  prototype,  a,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
48	[BUG]  [BUGGY]  super(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
49	[BUG]  [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
50	[BUG]  [BUGGY]  super(name,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
51	[BUG]  [BUGGY]  super(name,  fsal,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
52	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
53	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
54	[BUG]  [BUGGY]  this(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
55	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
56	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  ')'  expected	19	None	replace
57	[BUG]  [BUGGY]  this(name,  fsal,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
58	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
59	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
60	[BUG]  [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
61	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance);	      super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
62	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
63	[BUG]  [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
64	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
65	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	7	None	replace
66	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
67	[BUG]  [BUGGY]  Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
68	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
69	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  scalRelativeTolerance,  scalRelativeTolerance);	      this(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
70	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
71	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
72	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {    [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	      this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
