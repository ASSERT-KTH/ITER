bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(name,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
2	[BUG]  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
3	[BUG]  [BUGGY]  super(name,  fsal,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  fsal,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
4	[BUG]  [BUGGY]  super(name,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	  	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
6	[BUG]  [BUGGY]    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
7	[BUG]  [BUGGY]    this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
8	[BUG]  [BUGGY]    super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
9	[BUG]  [BUGGY]    super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    super(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
10	[BUG]  [BUGGY]    super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
11	[BUG]  [BUGGY]    this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
12	[BUG]  [BUGGY]    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  c,  a,  maxStep,  scalAbsoluteTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
13	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
14	[BUG]  [BUGGY]  super(name,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  a,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
15	[BUG]  [BUGGY]  super(name,  fsal,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  fsal,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  fsal,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
16	[BUG]  [BUGGY]  super(name,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
17	[BUG]  [BUGGY]  super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]  super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
18	[BUG]  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
19	[BUG]  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
20	[BUG]  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  [BUGGY]    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep);  [BUGGY]  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	116	116	1	replace	    this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
